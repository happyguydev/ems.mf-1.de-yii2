%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 6 mak pattern_02.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Александр
%%CreationDate: 6/5/2020
%%BoundingBox: 0 0 1000 1000
%%HiResBoundingBox: 0 0 1000 1000
%%CropBox: 0 0 1000 1000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 21657 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C4527CACFCACAFD21F8A727F8F82752A8A752FD09F8A827F8F8F827CA
%FD07F84BCAFFCA7DFD05F852A8A72752A827FD1AF82652F8CFF8A84BF8F8
%7C52F827CAF8F8CAA8CF27F8277D7626FD1AF820CAA727FD04F87CA8FD09
%F827A1FD04F8A8A1FD08F8CFA8CF27F8F85252A87D27F8F8F827A87D2726
%FD17F852A7CF7D7D7CF8F8F87D27F8A827F8F87DFFA87CA1A8527DA77CFD
%19F8CA27F8F8F8527DA7A7FD0AF8527DF8F8F8A7CAFFFD08F8CACFA77CA8
%A8527C20FD04F827272751A1CA7DFD15F827A85252CF7CFD04F8FFF87CCA
%F8F8F8A1A8A87D52F8277DCAA8A8FD17F8A152F8F8F820CA2727FD0BF8A8
%20F8F87DA8CAA827FD07F8CFA8CA5227F827FD05F827A7A1A7A852A1A876
%FD12F82776A74B52CF52FD04F84B7C52A8CAF8F852A876A17DA1F85252F8
%2752CF5227FD10F8767D52A87DF8F8F827A8A7A827FD0AF827A8F8F876A7
%7DCAFF52FD06F87DA87CF8F852FFA8A8FD04F87D52F8F826522751A77CFD
%11F8CF5252A77D52A8A77D26F87DA8A8A7CA51F8A7A7A827F8A8F8A727FD
%04F852A152FD0FF87D7D5227F827A1A8A727F8277DA8A77652FD06F8277D
%F8527D2627CFA87DFD05F87D7D26F8F876CA52F8A826F8F8F8A8FD07F826
%A17D27FD0EF827A8F8A727F8F8F82727CA52CFA12727CF5226FFA727F8F8
%7D52A1FD06F87CCA27FD0EF8527CF8F8F8A827FD07F820527CCA7D27F8F8
%F8A7277DA727F8F8CACFA1FD04F852A727F827A7A7F8F8F8A727F8F8F8A8
%FD09F852A7A752FD0CF8767D7D7DFD06F84BFFA827F827A8A8A17CFD04F8
%5252CAFD05F87D7D7D7CFD0EF8A827F8F8527CFD0CF876A827F827A8A17C
%FD04F87DA8CAFD04F87651F87DA17DFD04F8517CF8F8F8A1FD0BF82776A8
%FD0BF8A827A7FD05F8517DA8A8A8F8F8F87DA8CA27FD04F826CA7DF8F8F8
%27CF52F8F8CF26FD0CF87D7CF8F8F87D52FD0DF827A7277DFF76FD05F852
%FFCA52F8F827CF527D7D27FD05F8277DF8F84B7DFD0DF852CA52FD08F827
%CAA77DF8F82752CAA14BF8A7CA27F8F827FFCA27FD05F8A7CFA15252CA20
%F8F8F8A1FD0DF8277DF8267D7DFD0FF852A1CF52FD06F826A8CF7DF827CF
%7DCAA1FD08F8CAF8F827A1FD0EF8527DFD08F820CFA87C76A8A17CFD04F8
%27CF7DF8F8F8A1CF52FD04F827FFCACFCAA8FD05F8A8FD0DF85276F8A17D
%FD0FF87CA8CFCA4BFD07F87DCACF52CF51A852FD09F87D27F84B76FD0DF8
%52FFA87DFD08F8277C5227F8F8F8272727F8F87DFF52F8F8A852A8A87DCA
%A8CAA8CFA8CA52FD04F85176FD0DF8A727F8A8FD0EF852CA7676A8CA27FD
%07F827CFA8CA27A827FD0AF87652F85276FD0BF8277D7DF8277D4BFD0DF8
%52A8CAA8CA5127A8CF20F87D764B2727F8F8F8FFCAFFCACA524B27277D7C
%FD0CF8A17DF8F8CAFD0CF87DA87DF8F8F8FFCA7DFD08F8A8FFCA52A1FD0B
%F827A1F8A727FD0AF87DA852F8F8F87C76FD0CF827CAFF7DA8CAFF7C76CA
%CAF8A8A8FD05F8A1522727F8277D7DA17DA7A1FD0CF8CA7D2727A8FD09F8
%527CCA5227FD04F87DCFA8FD08F852A8A75252FD0BF826A8F8A126FD08F8
%27A77626FD05F8CAFD0CF827CF52F8F827A1CF527DA87D27A852F8F8F852
%A7FD09F852A8FD0BF8277D7CA8CF52FD06F82776A87D52FD07F852CACF4B
%FD08F8CF7D7C4BFD0CF8A827CFFD08F84BCA51FD07F87D52FD0BF827CAA1
%27F8F827A8CF27CACA52CAA851F827A727FD08F827A1FD0CF827A8A77DFD
%05F8527DCA7D52FD0BF8A8A8A8FD08F8527D5152FD0CF827A1A8527D7627
%F8F8F852A8FD09F87D27FD0BF851CA4B7DA752F827A8A827CFA8CAFFA84B
%27A85227FD07F8A14BFD0DF852CF7D7D52A7A8A87652FD0EF852FFCA7DFD
%07F87D52277DFD0CF852CAFFCAFFCAFF76277DA8FD0AF8A727FD0AF826FF
%A7F8F827A851F8A1CA527DFFCA7D52A77C20A77DFD05F827A87CFD10F8FD
%0427FD13F8A1CFA827FD06F8A126F8CFFD0BF827A8CFA8CFA8CFA8CFA176
%FD0AF820A8FD0BF852A8CFF8F8F827A1F8F8CFA127A8CF27F82776CACACA
%F8F8277DA8A727FD28F84BCACFA727FD04F820A8F8F8A727FD0AF827CFCA
%FFCACFCAFFCA7CFD0BF87D52FD0BF852CACA7DF8F8F8A727F87DCFA7FFCA
%27FD04F8277DCFA77D4B27FD1FF876A8CAA8CFA87D27FD04F87DA8CA7DFD
%04F82776F8F8A1A77D2727275252A17DA17DA8A8CAA8CFA8CAA8CF76FD0B
%F87D27FD0BF8277DCAA827F8F85252F852A8CAA7CF7DFD29F8A8CAFFCAFF
%CAFFCAFFA84BF8F8F8CACAFF7DF8F8F827A1F8F8A82727A7A1A752522727
%F8F827A8CAFFCAFFCAFFCAA7FD0BF8FFFD0DF8CA7DCFA1F8F87C27F8F8FF
%A752CA7DFD0AF827FD1DF852A8CFA8CA7DA7A8CFA8CFA852F8F827CFA8CF
%52F8F826A82720A8FD0CF827CFA8CFA8CFA8CFA727FD0AF8A7FD0DF827A8
%A8A17D277D27F852A8CFF8CFA8FD05F827274B207DCAA127FD1BF8A8CFCA
%52FD04F827A8CAFFCA52F8F851CFCAFF51F8F84BA8A752FD0CF8A876A7CA
%FFCACA5252A87D2727FD06F827A8FD0EF8A1FFA77CA8A8F8F87DFFCA27CA
%7DF8F8277CCA7D5276CAA8CAA8CF20FD19F827CFA87CFD07F852A8CFA852
%F8F876CAA8CA20F8F827A84BFD0BF827A1F8F8272727FD04F8517D7DCFA8
%A17DA1A7A77DA8FD09F84B27F8F8F876A8A8CAF8F8F8CAA8CF27CAA8F827
%A876FD04F827A77DFFCAA7FD19F876CAFF27FD08F852CAFFA827F8F8A1FF
%CAA8F8F827A1FD0BF827A851FD14F8A14BFD05F82752CACAFFCAFFA7A852
%52FD04F8CA7DCA7DCA7DF85252FD05F827A87DA8CF7DFD19F851CFA84BFD
%09F852A8CFA126F8F8A8CFA852F826A7FD0AF826A152FD14F827CFFD05F8
%27A87DA7A152CAF8F827A8A7F8F8F827CF52A8A7CFA127CF27FD06F8A8CA
%A1A17CFD19F827CAFFA8A7524BFD07F8A1CACF52F8F827CAFFA827F8FFA7
%27FD08F87D7DFD14F852CF4BFD06F8A8A17DF8F87C52F8A8527DA727F84B
%CA527DFFCA7DCAA176FD05F827A17DA8A77CFD1AF8CA7CF820527DA827FD
%06F8CAA8CA27F8F87CA8CF5227A8CFA827FD06F852A1FD14F87DA8FD05F8
%52A87DA852F8F8F84B76A827F8F852A84BF8CF5252A8CFFF5227A87CF8F8
%F87CA852F82727FD1AF87DCA52FD04F827CA76FD05F827FFCACAF8F8F8CF
%CACF4BFFCAA1A827FD04F827CAFD14F852A8FD05F8A17DCAA127FD05F8FF
%A7FD04F827A852CA7C52FFCAA8F8F8277CCAA8CA7C27FD1DF852A1CF27FD
%06F8A776FD05F87DCFA852F8F851CFA8CAA8CFA8CF7DFD04F8527DFD14F8
%2776FD04F852A127A1FD07F8A852FD05F827A8A87D52A8CF7DFD26F8A74B
%CA52FD07F8A84BFD04F827CACFA7F8F8F8A8FFCACFCAFFCACF52FD04F87D
%A87DFD12F87DA8FD04F87D7C7D52FD07F8CFF8F8F827522727A77DCF27CF
%CA27FD25F820A727CF76FD07F820CAFD05F87DA8CA27F8F852A8CFA8CAA7
%76207DA151F8F8F82752A827FD0FF87DA1FD05F8A127A120FD06F852A827
%52A87D7C7DA87D52A8CAA8CA27FD05F85227FD1EF8525251A8CFFD08F852
%7DFD04F826FFCAA8F8F827FFCAFF7D27F8F8F827A87DFD04F827CAFD0DF8
%7CA87DFD06F87D275252FD05F8CFCAFFCA7DFD04F826CA27FFCAFFCAFD05
%F87DA7CF7D52FD1CF8525227A77D52FD08F8A126FD04F87DCFA827F8CAA8
%CFA827FD05F8267CA8272727F87D27FD09F82752CA7C27FD07F8A127A727
%FD04F8A1A8CFA8A8FD05F8527CF8A8CFA8CFFD05F8A8A8527C7DCA7DFD1A
%F85252F8A84BA8FD08F87D4BFD04F852CACF52A8CACFCAFF52FD07F8277D
%7D7DA8A827FD07F8277DA87CFD0AF852274BCAA8A77DCFCACFCAFF51FD05
%F8A75227CFCAFF7DFD05F8CAF8A1A82727CFFD1AF8277DF8A7F8A127FD07
%F8277DFD05F8CAA8CAA8CF7DCAA8A8FD0BF827A87DF827275252A1A8A74B
%FD0CF8A127FD06F8CFA8CA7CCFA8CA76F8F8CAF852A8CAA87DFD05F87D27
%F84BA77D7D52FD1AF8A827527D27CAFD07F827A1FD05F87DFFCAFFA7F8A7
%FFCA27FD0BF8277CA8A17D52522727FD0EF87D52FD05F87D7DFFFD05F87D
%A7A127F87DFFA1FF76FD05F87D27F8F8F87C52A852FD19F87D2727A8F87C
%52FD07F8CFFD05F852A8CFA827F87DA8CF27FD22F8527CF8F8F827A876F8
%A1FD06F8A87DF8F8A7A852A8CA52FD04F8527DF8F8F8527D52A7A8FD18F8
%27CAF87D4B27A827FD06F8CAFD06F8FFCAA7F8F852CFCA52FD23F8CA517D
%A1CA27F8F8A8FD04F827A87DF8F8F8A8A87DCFCA7DFD04F8277DFD04F8CA
%527D52FD19F87D52F8CAF827A827FD05F8CAFD05F852A8CFA7F8F827A8CA
%52FD23F87DA12727FD04F87D27F8F8F87DA8A8F8F8F8CA76A8A8CAFF26FD
%04F8CAF8F8F87D7DCFCAA727FD18F851A827767DF852A827F8F8F8527DFD
%05F8A7FFCAFFF8F827FFCAA8FD23F827A8FD06F87D522727A87DA8CAA8F8
%F8CA7DCAFFCAA852FD04F85252F826A827767D27A8FD19F87D7CF87D52F8
%4BA87D27277D52FD04F827CFA8CFA827F826A8CF7DFD15F85227FD0DF87D
%7CFD05F8527DA1A151F8F8A7A87DF8CF7CCF7CCFCF52FD04F827A8F87DA1
%F8F8A17D7D52FD19F8A85127A827F82752CF7D27FD05F87CCACFA8FF52F8
%F8FFCAA7FD14F87CCACAA74B27FD0BF87DA87D52A852A7CA7CFD05F8A8CA
%A8CAA7CA7CCAA8A1FD05F8A876CA27F8F8F87CA8A7FD1AF8A87D7DA1F8F8
%F8A1FD07F87DCFA87DA87DF8F8A8CFA7FD0AF85252A17DA17D7D27F827A7
%F827277DA1A1FD0BF8275152277D5127FD07F87DA8CF7DCA27CFFF7DF8F8
%2752CFCAFF52FD05F8A8A176FD1AF85252A7A8FFCAA8FD07F8FFCAA152FF
%A8F8F8FFCAFFFD07F8277DCF7D5227F8F827277DA8CFCAFFA8CACAA8A752
%FD19F87DCAFFCA51CAA8A1F827A7CFA8CAA7CF5227F8F8F87D27CAFD0EF8
%277D7D7D5227FD0BF827FD07F827A8CF5227A8CFF8F8A8CFA8FD06F87DA8
%52FD09F852A1F8272627527DCF27FD1AF8CFA8CF27CFFF7D52CAFFA87CF8
%27A8A7A8A151277D7DA727FD0BF82752CA272752A1A8A8CACA7DA1525227
%27FD0AF827CFCA4BF8CFCA4BF8CFCAA8FD05F87D7D27FD0AF827A8F8527D
%CA52A8CACF52FD0CF827FD0CF8CAFFCAA8CAA8CAA8CA7CFD04F8527DF827
%7DA8CA7DCAFD09F82776A8A77C27A1A8CAA87DFD04F8275252A17DA827FD
%08F852A8CAF8F8A8CA4BF8A8CA7DFD04F8527DFD0CF827A7A87D52F8A17D
%CA277DFD0BF8A8A8FD0CF8CAA1CFA8CAFFCAFF52FD06F87CA127F8F8F8FF
%2752FD07F852CA7D27F84BCA52F8F827A752FD07F87C7D7DFD08F852FFA8
%F8F8A7CA7D27FFCAA8FD04F87D4BFD0DF8A852F827CF524BA17D52FD0AF8
%51CAFFFD0CF8A8CA7DFFCAA8CF27FD08F852A827F8F8A17D52FD07F8A752
%F8F87CA7FD05F827A7FD05F820CA7CA17D26FD07F876A8A1F8F852CF7D27
%A8CF76FD04F8A8FD0EF827A727CA20F87D4BA127FD0AF827CFA74B27767D
%A17626FD05F8A1A876A8CFCF4BFD0AF827A77D20A77C52FD07F8A87DF87C
%A8FD07F8A827F8F8F827A827F8F852A727FD06F852FF7DF8F852CACA52FF
%CA7CF82752A87DFD0FF8A1CF27F84BA827A7FD0BF87CCAA8CAA85227207D
%A1FD05F87DCFA8FFCA52FD0DF84BA8A8CA27FD04F827F8F8F8CA7D7DFD08
%F85276F8F8F8A820FD04F84BA727FD05F852A8A1F8F827CFA87DA8CF27F8
%7DCFA8A1FD0FF827A87DF8A1277652FD0BF87DA7527DFD05F87DFD05F852
%A8CAA8CF27FD0FF8277DFD04F876CACF4BF87DA8FD09F851A1F8F8CA27FD
%06F852A87CFD04F852FFA7F8F827CAFFCAFFCA4BA1FFA8A8CA27FD0DF827
%A17DA1CAA72727FF27FD09F826FF52CA52FD05F8277DFD04F827FFCAFFCA
%FD15F87D7D2652CA7CCA27FD0AF8CAF87C52FD08F8277CCF27F8F827A8CF
%F8F8F8CFA8CFA8CA52CF7DF8F8527CFD0CF852A752F8F8277DA8A827FD0A
%F827A8CAA826FD05F827A87DF8F8F852A8CFA8A8FD05F87DCA7C4BFD0AF8
%27A876274BFFCACA27FD0BF8A152A827FD0AF827A8F8F827CFCA27F8F87D
%FFCACFA1FFCA27F8F8F8A87CFD0AF87DA727FD12F852FF7D7CA127FD04F8
%51CFCAA8F8F8A7FFCACF7DFD05F852A8CAA8A852FD07F827CA27F8F8A14B
%27FD0DF8A1A752FD0CF827CAF8F8A8CA27F8F8A1A8CFA8CAA87DFD05F87D
%7D51FD06F827A852FD14F82752F8F8527D27F8F8F8A8277DA8A851CAA1CF
%A87CFD04F851A8FD04CAFF52FD06F8CA27F8F87C7DFD0FF876CAFD0EF852
%FFF8CFCA52F8F87DFFCAFFCAFF26FD06F851A1CF7D7D52A7A87D26FD1AF8
%A8A85252CA76F8F87DCAFFCA51A7FF7D52F8F87C7D27F84BA8272727FD05
%F827A1F8F8F8A827FD0FF85252FD0EF87D51F87DCF52F8F8A1A8CFA8CF7D
%FD0AF8FD0427FD1EF852525220FD04F8A7A8A1F8A8A8CFCAF827A7FD04F8
%A727FD07F8527CF8F827A1FD10F8527CFD0EF87D27F87DCAA8F8F87DCFCA
%FFCA52FD34F8A7FFA87CCACFA8A87DF8A8FD04F85227FD07F87D27F8F852
%4BFD10F87652FD06F8527DA15227F8F8F87D27F827CFA8F8F8A8A8CAA8CF
%20FD33F852CAA87D527D7DCFA7CA27A752F8F8F8CA27FD07F87D51F8F852
%51FD10F8527CFD04F852CF764BF87DA8A8CAFFA827F827CAFF4B52CAFFA1
%FFA8FD32F827A1CA4BFF7DCAA7CF7D27CF5152A8A87DCA52FD08F8A1F8F8
%F852A126FD0CF8277DA8CF7D27F8277DA1FD09F8A8F8F8F8A8A87DA1CFA8
%A8A87DFD31F87CA1A8A1CFA8A827F8767D27CAA8A7A8F827FD0AF87D27F8
%F8F8A8FD0CF84BFFCACFCAFFA8A8A752FD0AF8527CF8F852FFCACFCAFFCA
%CF52FD0EF827FD21F8CA76A1A127F85252F8F8CA27F8A8A8CAFD0DF87D27
%F8F8277DFD0BF827CAA8CFA8CAA8CF27FD0DF87DF8F827A8CFA8CA7DCFA8
%27FD0DF8A8A752FD1DF851A87D7D27A8F8F8F85252F87676F8F8A1FF7CF8
%27A1A1CF5227FD06F8527CF8F8277DFD0AF826CFCAFFCAFFCAFFCA7CFD0C
%F827A7F8F8F8CACAFFCA7DCAFFFD0DF8CA5227A8CF26FD1BF87D7D7CCFA8
%27F8F8F8CA2727CA27F8F87DA8A8A87D27F851CAA852FD05F8277DF8F876
%52FD0AF87DA8CFA8CFA8CFA8CF27FD0CF8A727F8F8F8A8CFA8CF76CFA8FD
%0CF8527D26A17D51A8FD1AF876A727A87D27F8F8F827A7F87DCFF8F827A1
%A852A17DF851A752A1A77DFD05F8A8F8F827CF7D7C52A87DCACAA8CAA8A8
%FFCACFCAFFCACF7DFD0CF87C7DF8F8F827CFCAFFCAA7CAA8FD0CF87D5252
%A8F8F852CA5252FD15F8A8A87D52CFCAA74B27F8F8527DA7CFCA27F87DA7
%7C7DF8CAF87D27F8F8F876A852F8F8277DFD04F8FD0527FD04F827CAA8CF
%A8CAA8CF7DFD0DF8A852F8F8F87DA8CAA8CFA8CA7CFD0CF8CAF8F8A127F8
%F82776A84BFD14F8A7F8767CF8F8277CA17DF8CAA77D51CA27F8FFA876F8
%F87D27A127FD05F87DA8F8767DFD0EF8A1FFCAFFCAFFA1CF765227525251
%FD07F8A827F8F8F8A8FFCAFFCAFFCA7DFD0CF8A7F8F827A1CF7CF8F827A7
%A87D27FD10F852A727CFFD06F876CFCA76F827CAA752A84BF8F8F87C51CA
%FD05F8277DCF527D27FD0EF87CA8CFA8CA27F8F852527652527CCA52FD04
%F827A1FD04F8CFA8A7A1CFA8CF27FD0CF8A7FD05F8A127F8F8F827CAFD11
%F87D52CA27FD05F827A7A8A1F8F8F8A7A8CF52FD04F827A1A7FD04F87DA8
%5227CA527DFD0DF84BA8527C7DFD0BF8A87DF8F827A827F8F8F827CAFF52
%52CAFFCA27FD0BF8277DFD05F827A7F8F8F85252FD11F8CA527DFD04F852
%A8A727CAA8F8F8F851CFCAFD06F8A8A827F8F8A17CF8F8F87D4B7DFD0CF8
%52A727F87D27FD0CF8A852F8767DFD04F852CAA827F8CAA8CFFD0CF827A1
%FD06F87D7CF8F85252FD11F8CFA852F8527DCA7627F8F852CF27F8F8F8A8
%CA52FD04F826CFCAFFA8CF52FD04F8FFF8CAFD0BF87DA127F8F87D51FD0D
%F8CA7DA8FD05F87DCACFF8F87DFFCA7DFD0BF84B7DFD06F8277CA7F827A7
%27FD0FF8277DFFA8A87652FD05F827A8CFF8F8F8A77D7D522752527DA8CF
%A8CF52FD04F8277DF85252FD08F827A87DFD04F8A127FD0CF826A1A1FD06
%F87DCF7DF8F8A7A8CFA827FD0AF827A1FD08F8767DF87C7CFD17F876A77D
%52F876A8A7F8F87D527D7C7D527C52FFCACFCA7DFD04F8527CF85276FD06
%F8277DA827FD05F85252FD0BF827A17DFD07F8A8CA7CF827CACFCAFF7DFD
%0AF84B7DFD08F8277DF8F8A74BFD15F8A7CFCAFFCAA827A8CA7DF8A87D20
%FD04F8527D7D7D527DCA7DA17DA852F8F8A1F82727767DA7A152FD07F852
%52FD0AF87DA852FD08F8A8CF27F827CFA8CAA8CFFD0AF827A1FD08F8277C
%F8F827A1FD14F827CF7D27277DA8CA27CAA84B52CF27F8F8F827A727FD05
%F84B275152FFF8F8CACFA1A7524BFD0AF827A1FD09F852CAFFA827FD07F8
%FFCA4BF87DCAFFCAFFCA52FD09F827A1FD08F84B7CF8F852CAA827FD12F8
%51CA52F8F8F852CAA852FFA851A8A1F8F826A152FD09F8CA27F8F827A727
%FD0DF826A7FD09F876CFA8CF7DFD06F827A8CF27F87CCFA7CFA8CFA1FD0A
%F8A8FD09F8A8FD04F827CA27FD11F827CFA8A75126F87DA87D52CF7CCFFF
%7DF827CAFD09F87D52FD04F87D52FD0EF8CAFD08F851A852FFCACF52FD05
%F827CFCA4BF8A8CA7CCACFCAFF27FD09F8CAFD08F84BA8CA27F8F87DA752
%FD11F8A8A1F8277DA127F8A8CA27A8CFCAA8A87D2752CA27FD06F852A727
%FD05F8CAFD0EF87C27FD06F84BCA20F876CFA8CA27FD04F827A8CA27F8A8
%CAF8CFA8CAA852FD09F8A7FD07F827A1277D27F8517DFD12F827A8CAF8F8
%F87D52F827CA7652A8CA51F852A77DA7A7F8F8F8274BCAA127FD06F87D7C
%FD0DF87D27F8F85276A7A87D26F8F8F87DFFCACF26F8F8F827FFCA5127FF
%A1F8A7FFCAFFA1FD09F87D51FD06F87D76F8FFF8F8A84BFD12F852FFCA52
%F8F8F8CF26F8A7FF52FFCA27F8F827517DA85252A8A87D27FD08F826A827
%FD0CF85227F827A85227FD07F87CCFA8A8F8F8F876A8CF2752A87DF8A7A8
%CFA8CFFD09F87C27FD05F827A8F8F8A72776CF7D27FD11F8527DCFA1F8F8
%F85252F852A8CFA8CF7CFD05F84B525227FD0CF827A87CFD0BF87C2727A8
%27FD0AF87DCFCAA8F8F852FFCA2752FF52F852FFCACFCA4BFD08F8527CFD
%05F8A827F8F87CCA7CF8A1CA52FD11F8CF7DCF52F8F87C52F820CFCA7DCA
%7DFD17F876CA5227F8F8F8A85227F8277DA1A127FD0CF852CAA8A82052A8
%CF277DA876F852A8CFA8CA4BFD08F8277DFD04F8527DFD04F87D7DF8F851
%A827FD10F876A1A7CA27F85227F827A8A827CFA7FD09F8277D27FD0DF876
%A1CFCAFF7D7CA7CAA87C7627FD0EF84BFFCACFA1FFCA4B7DFF27F852FFCA
%FFCA7DFD09F8CAF8F8F827A727FD04F826CAF8F8F87D27FD10F827A8FF7C
%CF7DCAF8F876FFCA27CA7DF8F8F8277C7DA87D7DA8CFA8A1FD14F82726FD
%12F827CAA8CFA8CF27A1A827F827A8CFA8CF7DFD09F8A7F8F827A84BFD06
%F87C7CF8F85227FD11F852A8CF52CA27F8F8A8A8CF27CFA8F8F852CA5227
%F82776A77DFFCA7CFD28F827CFCACFCA4B7DCF27F827CFCAFFCAA7FD09F8
%A1527DA84BFD07F827A752F87C27FD0CF852A1A8767C4B52277C52F8F8F8
%CACACA7CCA7DF827A7FD05F827A8A7A8CF7DFD2AF8A8A8CA7DA8A827F876
%A8CAA8CF7DFD07F8277DA8A851FD0BF8A727277DFD0AF852CAA7CA7DCA52
%7C7DA87DFD04F8CA52CF7DCAA8F8A127FD06F8CFA1A8A87DFD2AF852FFCA
%FFCAFF27F852FFCACFCAA7FD05F8277DFFCAFFCA27FD0BF8527D27A827FD
%09F8A852CF27F8A827F852A8CF4BF8F84BCA7DA1FFCA76A7A84BFD06F87D
%CF7D7D52FD2AF852A8CFA8CFA827F87DA8CF7DCF7DFD04F827A1CFA8CFA8
%CFA852FD0BF8A8F87D52FD06F8265227A8A8F8F8F85252527D2627A852F8
%27CF517DA8CFCFA17CA727F8F8F8277DA8277D7D52FD2AF827FFCACFCAFF
%27F87DFFA7A7CAA8F8F8F852CACFCAFFCAA87DA8A87DFD0AF87D27F8CFFD
%05F827A8CFCA7DFD04F827CAA827F8F8F8A1A127CA7C52FFCAA827F87DA8
%7C527DA852FD2FF827A8CF7DCAA8A1F8CAA87D7DCA7DF8F852A8CFA8CAA7
%52F8F8A72752A827FD08F87627F87C52F8F8F827A827A727FD06F8A87DFD
%05F87D7DCF7652A8CFA8F8F8F827527D5227FD15F8277DFD19F827FFCA7C
%7DFFCA7CCAFF52FFCAA7F852CAFFCAFF7D27F8F8F87D52F827CA7D27FD06
%F87D4BF85276F8F8F87D7D527DFD07F8FF26FD06F8CAA1A827FFCA52FD1C
%F827A8CFFD19F827A8CF5227A8CFA8CFA852A8CF5252A8CFA8CA27FD06F8
%CAF8F8F876A827FD05F8A8F8F827A7F8F8F8A727A1FD08F8A8F8F8527CCA
%7CA17D7DA8A1A8CF4BFD1CF8A752A1FD1AF8CFCA7DF8A8CAFFCAA827FFCA
%A1CAFFCAA827FD07F8527DF8F8F84BA87DF8F8F827A7F8F8277DF8F8F87D
%277D52FD05F852A8CF7DCF7627F84B52A727FFCACFCAFD05F852A87D27FD
%13F827A120CAFD1AF8A8CA7DF851CAA8CF767CA8CFA8CAA8A8FD0AF8A727
%FD04F852CA762752CA7C527D52F8F8F8A1277D27FD04F852A8CFA8CAFD05
%F827A7F8A8CFA8CAFD05F8A7A77DA8A85227FD10F87D7DA77C76FD19F8A7
%CACAF827CAFFCA52A7FFCAFFCA7DFD0BF852A7FD06F87DA8FF52527DFF27
%F8F8F87C517D7D527D527CA8FFCAFF7CFD05F87D52F8FFCAFFA7FD05F8CF
%7CA77C277DCFFD10F852CAF8277DFD06F85252765227FD0EF87DCFA8F8F8
%A8A8CF27CFA8CFA87DFD0DF87D52FD07F827CF27F852CA20F8F87D272627
%52272752CFA8CFA87D5276F8F8F8CF274BA8CFA8A1FD05F8A727277D7D27
%A827FD0FF87C524B27CAF8F8F82752CF7D52527DA87DFD0DF87CCACF2727
%CACFCACFCACFCAA8FD0FF8A851FD07F87D52F8F852A1F8F87D27FD05F827
%A8CF7C27527C52CF51527DF852CFCAFF52FD05F8A127F8F852A1767DFD0F
%F852CA7D7DA77D277DA852FD06F852A8FD0CF827CFA84B4BCAA8CAA8CFA8
%A7FD11F8CA20FD06F8A8F8F8F8527DF8F85252FD04F852A727A8FD06F8CA
%A7F8F8A1A852A8A127FD04F85276F8F8F87676A1A152FD0DF8A727F8F852
%A77D5227FD08F852A8FD0BF851CAFF52CA52FFCAFFCACFFD12F827CF27FD
%05F8A827F8F8A14BF8F827A7F82727A77D27F8A7FD05F876A84BF8F8A7A7
%52FFCA7CFD04F84B7CFD04F8CA277C7DFD0DF87D52F8F8F8A1FD0CF87D52
%FD0BF8CFA8CF7D7DA8CFA8CF27FD13F827CA20FD04F87D27F820A8FD04F8
%A8A8A17D27F8F8F87D27F8F8F852A87DF8F8F8CF7DA1A8CFCFFD05F8CAF8
%F8F852CAA8A852FD0DF8CA7DA852527DFD0CF827A1FD0BF8A1FFCA52A7CF
%CACF7CFD15F851A8F8F8F827A827F87D4BFD04F8527DFD06F87D27F8F852
%A8CFCA52F8F8CA7CA8CFCAA827FD04F87D4BF8F87D52A1A87D7DFD0BF87D
%52F8F87CA17DFD0DF8CAFD0BF87CA8CF767D7DCFA827FD16F827CAF8F827
%52F8F8A8FD06F8A820FD05F8527627A17D2727CAA727F8CA52CFA7CAFF52
%FD04F8527DF827CAF851A827A127FD09F87CCA7DF8F8F8CA27FD0DF87D27
%FD0AF827FFCAFFF8A8CAFFFD18F827CF76A7A1F8527DFD06F827CF5227F8
%52F87DA7CA27F8F8F84BFFA852CAA8CA7CCAA87DFD05F8CA20CA52F8F852
%A77D76FD09F87D4BA126F8A727FD0EF8A17C26FD09F852A8CFA1F8A8CFA8
%FD1AF852277C52CAFD09F87DA8CFA7CAA87DFD06F827CAA8CF7DCF52CFCF
%7DFD04F87CA8CAA127F8F8F827CAA827FD08F8A8F87DA7CFA852FD0EF87D
%CFA852FD07F827A8CFCAFFF8CFCAA8FD1DF8A852FD17F827CFCACACA4BCA
%A8A1F8F851CAA8CFA87DFD05F87D52A8FD08F87D517D7DF8517DA1FD0DF8
%CFA8CAA87DFD06F852CFA8CAA876A8CA7CFD0CF8A1524BFD28F827CFA8CA
%27CFFF7D27A1FFCACA527DCAFF7D27F8F8764BA127FD07F8A7CA52FD04F8
%7C7DFD0BF851A87DCAFFCAA8FD05F8CFCAFFCAFFCAFFCA7DFD0BF827A87D
%76CF52FD27F8CAFFCA7DCAA8A77DCFA852F8F8F8A15252A7A876A8A8CAFD
%08F85152FD06F87D52FD0AF87C52F827A1CFA8CA20F8F87CA8CF7D7DA8CF
%A8CF27FD0CF827A87DA8CF7D522726FD15F8527CFD0CF8CFA8CFA8CFFFCA
%CFA727FD05F8A84BF8277C7CA85252FD0FF827A827FD08F851A8F8F8F827
%7DFFCAA8F827CACFCA4B27CFCAFFCA27FD0DF8CA7D277D7DCACFCAA827FD
%12F827CACFFD0CF8CAA8A8CFCAA8CF7DFD08F8A752F8F8F8A85152FD10F8
%527D27FD06F84BCA20FD05F876CFA8A77CCFA8A1F8F87DCAA8CF20FD0CF8
%27A1CA27A8F87DA77D27CA20FD11F827CFA827F8F82727FD07F8A7A87DA8
%CAFFA727FD09F8A8A127F8A8A17CFD11F852A87D2751277CA7A826FD07F8
%A1FFCAFFCAFFF8F8F852CAFFCAA8FD0AF8267CA72752CF7D7D7DFFA8A8A8
%A1FD11F876CACF7DA8A87D76CF52FD05F87DFF7DFFCA7D26FD0BF852A77D
%7D7D27FD12F827527C7D7D5227FD09F826A7CFA8CF52F8F8F827CFA8CFA8
%7CFD07F852A1A85227F8F8F84B76A82727F82627FD11F852A852A72726F8
%F8F8A8FD05F852A8CFA8CF27FD0EF851A1CA27FD23F852CACFCA27F8F8F8
%A1CACFA8FFCA27FD05F87D7D27FD07F85252FD16F8CAA7CF52FD05F84B52
%FD04F827CFCAFFCAFD11F827FD24F87CCFA8CA76F8F8F8A8CFA827A7CFA7
%FD04F827A1FD09F8277DFD15F827A87CA151FD05F8277D27F8F8F827A8CA
%A8CAFD36F8FFCAFFCACF274B4BFFCAA8F852CAFF52F8F8F8527DFD0AF8CA
%FD15F852CFA8CF27FD05F827FFA852F8F87DFFCAFFA1FD35F87DA8CF7DCF
%A1A77DA17DA8A8A776CAA8CAF8F8F82776FD0AF8A127FD14F852A827F8A8
%27FD04F87D7DCFA852F8CFA8CFA8A7FD34F852A8CFCAA87DFD08F8CA27FF
%CA7CF8F8F8CAFD0AF87D27FD15F827F8F827CF76F8F852A82727CFCAA8CA
%7DA8CF52FD05F8525127FD2BF8A17D51F8F8A827F8F8F876765252A852F8
%76CFA8F8F8F87652FD09F8A820FD19F827A8A8CA7C27F8F8F8CAA8A8F87D
%A87C27FD04F852FFCAA72727FD26F827CF52FD04F8A8F8A17DA8A1527C7D
%7D52F827CAFF52F8F827A151FD07F852A7FD23F8A1FF7DF8A1FFA827FD04
%F87DA8CAA1CFA827FD24F827A827F8F8F82727A87652FD06F87652F8F8A7
%A8A8FD04F8A87DFD05F852A827FD22F820CFA8CFF8CFA8CFA8F8F820A77D
%52A7CFA1A851FD22F84B7DA827277DCAA1A87DA8CA4BFD06F8A127F8F84B
%FFCA27F8F827FD04A8A77DFF7D27FD23F87DCAFFCAA8CAA1A8A827F8A827
%F8F8F87DFD23F852A87D52F852A752FD05F8A727FD05F827A8F8F8F827A8
%CF52F8F8CAA77CF8F820FD27F8A8CA4BCFA8CA4B7DFF7CF8A1FD04F8A127
%FD21F852A8F8F8F852A127FD06F8A127FD05F8A74BFD04F8CACAA8F8A7A8
%A7FD2AF827FFCA52CAFFCAA8A1A7CAF8CFFD04F87C27FD1DF852F8F8F87D
%52F8F827A727FD07F8CFFD05F8527DFD05F876CFA827A8CAFD2BF87DA8A8
%A852277D7DA87DCA5252CA512752CFFD1DF827CA7DF8F8CA4BF8F8A17CFD
%07F84B7DFD04F827A827FD05F87CCAFFA8A852FD2AF87DA7A152CFA7A851
%A15227CF767DA87D7D52FD1EF87D5227A87DCAF82776A7FD08F85276FD04
%F8767CFD06F827CAA8A8A7FD07F8277C5227FD1EF852CA7DCAA1767D7DF8
%F87D4B
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 2 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c148 79.164036, 2019/08/13-01:06:57        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:lr="http://ns.adobe.com/lightroom/1.0/"
   dc:format="application/postscript"
   xmp:CreatorTool="Adobe Illustrator CC 22.0 (Windows)"
   xmp:CreateDate="2020-06-05T07:53:55+06:00"
   xmp:ModifyDate="2020-06-05T07:53:55+06:00"
   xmp:MetadataDate="2020-09-21T12:07:54+01:00"
   xmp:Label="POD"
   xmpMM:OriginalDocumentID="uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7"
   xmpMM:DocumentID="xmp.did:548e078b-667c-844d-b6c7-a5b33a6b5a2f"
   xmpMM:InstanceID="xmp.iid:9ce72460-6d85-2a42-9627-247d990235ce"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Basic RGB"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:HasVisibleOverprint="False"
   pdf:Producer="Adobe PDF library 15.00">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">6 mak pattern</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:subject>
    <rdf:Bag>
     <rdf:li>Seamless</rdf:li>
    </rdf:Bag>
   </dc:subject>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="164"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgApAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8AjmitYeRfNelaZFrutwz6jpp1RJoy2jWq6zdzhT6seoxpbiyEUAV2aN+RFN6K&#xA;iqvqb8t/MGo+YPJ1lqWpSWs1/wCpdWtzcWDF7WZ7O6ltTNAx6xy+jzX2OKsAlm178wvOV5p9nqdz&#xA;aaRpV808U0XpG2it7VhbwzQrwBnupNQtbko0rSQxLHXh6nBsVSnWPMtj+TGh6rZ6Dd2evJGZpr+I&#xA;RzSarDeXJCw3Wp3SvPC/KaRFb1Vg+H7HIjiVUmup9a/Jjzh5c1zzJI+r2eoeX59DisrBW9OC8tmj&#xA;niij+GrtcsoDSMKvIzvRV+EKonSPy01PRYF86ecYYILXWdaivPM3l+WR5bd/0nL6JluYy/1YCC4u&#xA;FdI+DFF5cpH7Ksl8peU18s+SLLzxYeZn0OW90+21DU7O/SBdD9S5hRnU2VutqsJLsAjRMHrQfHUq&#xA;yrNvLnnfU/MPk3UdRsdLaHzNYRzxNolyJIK3iRerbrW4S2cRXCvG6s6rRW+KjBgFXzD5pFz5Yu5L&#xA;vzNfz23nTzFZhPNcmqNZT3Rs7qVUmGlw2gnjhdbYPGvrzR80BVIx8Kqq+gP+cedTa78iXVmLpdQg&#xA;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"/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:84c173a0-62e0-d541-a785-a3f82702c67c"
    stRef:documentID="xmp.did:84c173a0-62e0-d541-a785-a3f82702c67c"
    stRef:originalDocumentID="uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:a77589ff-59a1-ca48-9c52-5a087e3880ac"
      stEvt:when="2020-04-05T10:26:59+06:00"
      stEvt:softwareAgent="Adobe Illustrator CC 22.0 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:548e078b-667c-844d-b6c7-a5b33a6b5a2f"
      stEvt:when="2020-06-05T07:53:55+06:00"
      stEvt:softwareAgent="Adobe Illustrator CC 22.0 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:5b5fa644-d45a-d144-985c-0b7aefe0de7e"
      stEvt:when="2020-09-16T10:04:41+01:00"
      stEvt:softwareAgent="Adobe Bridge 2020 (Windows)"
      stEvt:changed="/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:9ce72460-6d85-2a42-9627-247d990235ce"
      stEvt:when="2020-09-21T12:07:54+01:00"
      stEvt:softwareAgent="Adobe Bridge 2020 (Windows)"
      stEvt:changed="/metadata"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="1000.000000"
    stDim:h="1000.000000"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="Р‘РµР»С‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="Р§РµСЂРЅС‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="R=255 G=203 B=106 1"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="203"
         xmpG:blue="106"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="РћС‚С‚РµРЅРєРё СЃРµСЂРѕРіРѕ"
       xmpG:groupType="1">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="R=0 G=0 B=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
   <lr:hierarchicalSubject>
    <rdf:Bag>
     <rdf:li>Seamless</rdf:li>
    </rdf:Bag>
   </lr:hierarchicalSubject>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                     
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1000 li
1000 1000 li
1000 0 li
cp
clp
1000 1000 mo
0 1000 li
0 0 li
1000 0 li
1000 1000 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
f
2.68018 122.06 mo
2.8999 122.23 3.1001 122.4 3.31006 122.57 cv
3.03027 122.75 2.75 122.93 2.47021 123.11 cv
2.68018 122.06 li
cp
43.27 130.03 mo
41.46 129.13 39.5601 128.56 37.8901 128.06 cv
36.5601 127.66 34.3398 127 34.02 126.53 cv
34.02 126.52 33.9502 125.96 34.8799 124.42 cv
36.9302 121.04 39.4199 118.36 42.0698 115.54 cv
46.1499 111.18 50.3398 106.69 53.21 99.3398 cv
56.75 102.07 60.98 103.55 65.3999 103.55 cv
66.29 103.55 67.1899 103.49 68.0898 103.37 cv
72.0103 102.84 75.4702 101.2 77.98 98.8101 cv
85.4102 106.64 102.38 106.62 112.94 106.6 cv
114.09 106.6 115.15 106.6 116.11 106.61 cv
116.59 106.61 li
120.02 106.61 122.34 106.23 124 105.36 cv
124.39 105.46 124.78 105.56 125.15 105.64 cv
127.96 106.29 128.32 106.37 127.73 109.05 cv
127.2 111.51 125.03 112.82 121.51 114.68 cv
117.89 116.6 113.78 118.77 112.86 123.72 cv
112.44 126.02 114.11 127.23 114.83 127.74 cv
114.94 127.82 115.1 127.94 115.2 128.02 cv
115.19 128.06 115.18 128.12 115.17 128.19 cv
114.49 129.33 110.58 132.18 109.28 133.13 cv
108.74 133.52 108.28 133.86 107.96 134.1 cv
104.48 136.79 100.58 138.43 96.4502 140.17 cv
93.8999 141.24 91.27 142.35 88.7002 143.73 cv
82.3198 147.17 76.3799 147.91 69.5103 148.75 cv
68.2202 148.91 66.8999 149.07 65.5498 149.26 cv
64.4502 149.41 63.3701 149.58 62.3198 149.75 cv
58.7998 150.33 55.46 150.87 54.0498 149.79 cv
53.3301 149.24 52.8701 148.05 52.6699 146.25 cv
52.6099 145.67 52.5498 145.11 52.5 144.57 cv
51.8999 138.47 51.46 134.06 43.27 130.03 cv
cp
49.3999 56.7002 mo
48.7202 53.0601 48.0103 49.3101 46.7803 45.4302 cv
46.6001 44.8501 46.29 43.4302 45.96 41.9302 cv
43.98 32.8599 42.77 28.8901 40.3999 27.7598 cv
35.3501 25.3701 28.4302 31.23 22.3398 36.9102 cv
21.7202 37.48 21.21 37.9697 20.8198 38.2998 cv
20.3198 38.7397 19.8799 39.1499 19.4502 39.5498 cv
18.8901 40.0801 18.4102 40.5298 17.8701 40.9399 cv
17.1499 40.5298 15.8198 39.9502 14.5 40.8301 cv
12.5498 42.1099 11.7002 43.6499 11.02 44.8799 cv
10.6602 45.54 10.3501 46.1001 9.8999 46.6299 cv
9.2002 47.4502 8.37988 48.1099 7.51025 48.73 cv
6.5 46.6899 6.33008 44.7002 7 42.6802 cv
8.12012 39.27 11.3999 36.1299 15.25 33.5801 cv
15.4302 33.4897 15.6001 33.3901 15.75 33.2598 cv
18.4502 31.5298 21.3799 30.0898 24.0303 29.0498 cv
24.9502 28.6899 li
31.5801 26.1001 35.96 24.3901 42.7402 23.98 cv
46.25 23.7598 49.5498 21.7197 52.7402 19.75 cv
58.25 16.3501 61.8999 14.4697 66.0303 16.9697 cv
66.2803 17.1299 66.79 17.9102 67.1299 18.4199 cv
67.8501 19.5098 68.75 20.8799 70.1401 21.7998 cv
72.3999 23.3101 75.1299 23.9199 77.5303 24.46 cv
78.3101 24.6299 79.0698 24.7998 79.79 24.9897 cv
80.3999 25.1602 81.0103 25.29 81.6099 25.4302 cv
82.6602 25.6602 83.3701 25.8398 83.8599 26.0298 cv
83.77 26.0498 83.6802 26.0698 83.6001 26.0898 cv
82.5801 26.3101 81.6099 26.5298 80.6899 26.54 cv
78.9502 26.54 76.8101 25.8901 74.7402 25.25 cv
70.52 23.9399 65.27 22.3101 61.6499 26.5898 cv
58.0898 30.7998 57.6099 39.5298 57.2002 47.2397 cv
57.04 50.1802 56.8901 52.9502 56.5698 54.79 cv
56.3198 56.2598 56.02 57.7598 55.7002 59.3501 cv
54.8501 63.5601 53.9902 67.8901 53.9702 72.1802 cv
51.3901 67.2197 50.4199 62.0898 49.3999 56.7002 cv
cp
88.9399 31.0498 mo
89.9302 31.73 90.4102 32.5298 91.02 33.5498 cv
92.0698 35.2998 93.3799 37.4697 97.1602 38.8301 cv
98.8501 39.4399 100.53 39.8501 102.15 40.2397 cv
105.47 41.0498 108.34 41.75 110.79 43.8999 cv
111.6 44.6201 112.2 45.3301 112.84 46.0801 cv
113.97 47.4199 115.21 48.8799 117.42 49.8599 cv
116.67 50.8599 115.68 51.8501 114.55 52.8101 cv
111.41 55.4897 107.19 57.98 103.74 60.0098 cv
101.86 61.1099 100.09 62.1602 98.6802 63.1099 cv
95.4399 65.2998 92.6602 67.7197 89.9702 70.0498 cv
86.1299 73.3799 82.48 76.52 77.8501 78.7397 cv
75.9502 74.75 71.0103 72.1499 64.46 71.7397 cv
62.6899 71.6401 60.8301 71.71 58.9702 71.9697 cv
59.0303 68.21 59.8198 64.2197 60.6001 60.3398 cv
60.9199 58.7798 61.2402 57.1802 61.5 55.6401 cv
61.8701 53.5098 62.02 50.73 62.1899 47.5098 cv
62.5303 41.2798 62.9902 32.75 65.4702 29.8198 cv
66.8101 28.2397 68.9702 28.6899 73.2603 30.02 cv
75.6899 30.7798 78.21 31.5898 80.7402 31.54 cv
82.1802 31.52 83.5 31.23 84.6699 30.9697 cv
86.7402 30.52 87.8599 30.3198 88.9399 31.0498 cv
cp
117.74 56.8198 mo
121.29 55.6499 121.93 55.4399 124.44 57.6602 cv
124.89 58.0498 124.93 58.1802 124.76 59.6001 cv
124.64 60.5601 124.49 61.7397 124.81 63.0698 cv
125.2 64.6699 126.05 65.9502 126.8 67.0801 cv
127.41 68 127.99 68.8599 128.15 69.6699 cv
128.8 72.75 127.22 77.0801 125.69 81.2598 cv
124.19 85.3599 122.65 89.6001 122.7 93.6201 cv
122.71 94.4302 li
122.75 96.77 122.78 98.73 122.47 99.8599 cv
121.73 99.98 121.05 100.43 120.68 101.15 cv
120.65 101.19 120.64 101.24 120.62 101.29 cv
119.59 101.52 118.1 101.63 116.16 101.61 cv
115.19 101.6 114.1 101.6 112.93 101.6 cv
103.48 101.62 86.27 101.64 80.9902 94.6299 cv
81.1001 94.3999 81.21 94.1699 81.2998 93.9302 cv
82.6401 90.4697 82.3599 86.7002 80.5601 82.98 cv
85.5303 80.4897 89.46 77.1099 93.25 73.8198 cv
95.8198 71.5898 98.4902 69.2798 101.49 67.25 cv
102.76 66.3799 104.47 65.3799 106.27 64.3198 cv
109.92 62.1699 114.06 59.73 117.41 56.9302 cv
117.74 56.8198 li
cp
11.27 133.61 mo
12.5898 134.95 14.3398 135.64 16.0303 136.29 cv
17 136.67 17.9102 137.03 18.6499 137.48 cv
20.0698 138.34 21.3301 139.41 22.6699 140.55 cv
24.3501 141.99 26.1001 143.48 28.3301 144.67 cv
30.1602 145.64 33.6401 147.32 36.29 147.58 cv
37.8198 147.73 39.23 147.27 40.3701 146.9 cv
41.02 146.68 41.8301 146.42 42.1802 146.47 cv
43.73 146.72 44.1802 147.37 45.0698 148.66 cv
45.98 149.98 47.2202 151.78 49.8799 152.78 cv
49.9302 152.8 49.9702 152.8 50.02 152.82 cv
50.3301 153.16 50.6499 153.49 51.02 153.77 cv
52.6401 155 54.5801 155.4 56.73 155.4 cv
58.73 155.4 60.8999 155.05 63.1299 154.69 cv
64.1299 154.52 65.1602 154.36 66.2202 154.21 cv
67.5601 154.03 68.8501 153.87 70.1201 153.72 cv
77.1899 152.84 83.8599 152.02 91.0698 148.14 cv
93.4302 146.86 95.9502 145.8 98.3901 144.78 cv
102.63 142.99 107.02 141.15 111.02 138.05 cv
111.31 137.83 111.73 137.53 112.22 137.17 cv
116.95 133.73 119.45 131.6 119.98 129.55 cv
120.83 126.26 118.98 124.6 117.99 123.86 cv
118.72 121.94 120.76 120.73 123.85 119.1 cv
127.46 117.18 131.55 115.02 132.62 110.11 cv
134.06 103.52 130.07 101.76 127.32 101.03 cv
127.78 99.2002 127.75 97 127.71 94.3501 cv
127.7 93.5498 li
127.66 90.4502 129.05 86.6499 130.39 82.98 cv
132.16 78.1299 133.99 73.1299 133.05 68.6499 cv
132.68 66.8999 131.77 65.5298 130.97 64.3198 cv
130.4 63.4502 129.85 62.6401 129.67 61.8901 cv
129.57 61.4502 129.64 60.8799 129.72 60.2197 cv
129.91 58.6699 130.23 56.0898 127.74 53.8999 cv
125.79 52.1802 124.12 51.3701 122.56 51.0898 cv
122.91 50.4502 123.22 49.7998 123.45 49.1299 cv
123.69 48.4302 123.6 47.6602 123.22 47.0298 cv
122.84 46.3999 122.2 45.9697 121.47 45.8501 cv
118.86 45.4502 118.08 44.52 116.66 42.8501 cv
115.96 42.0298 115.18 41.1001 114.09 40.1499 cv
110.72 37.1899 106.97 36.27 103.34 35.3799 cv
101.77 35 100.29 34.6401 98.8501 34.1201 cv
96.7402 33.3701 96.1699 32.4102 95.3101 30.9697 cv
94.5698 29.75 93.6499 28.2197 91.7603 26.9199 cv
91.0698 26.4502 90.3799 26.1299 89.7002 25.9199 cv
88.79 21.8799 85.04 21.0601 82.6802 20.54 cv
82.1602 20.4302 81.6299 20.3101 81.1099 20.1699 cv
80.3101 19.9502 79.4702 19.77 78.6201 19.5801 cv
76.54 19.1099 74.3999 18.6299 72.9102 17.6401 cv
72.3599 17.2798 71.8301 16.46 71.2998 15.6699 cv
70.5801 14.5601 69.8198 13.4199 68.6201 12.6899 cv
66.3999 11.3501 64.25 10.8198 62.1899 10.8198 cv
57.7002 10.8198 53.6099 13.3398 50.1099 15.5 cv
47.3301 17.2197 44.6899 18.8501 42.4302 18.9897 cv
36.0498 19.3799 31.54 20.8101 26.1899 22.8501 cv
30.9702 13.3901 35.2803 5.96973 39.4502 0 cv
33.4102 0 li
31.2998 0 li
25.3398 0 li
23.96 2.1499 22.5898 4.33984 21.29 6.58008 cv
20.96 4.46973 20.5303 2.27002 20.0103 0 cv
14.8799 0 li
12.4502 0 li
7.3501 0 li
9.31006 9.08984 10.9399 19.0298 11.9102 29.6602 cv
11.8901 29.7197 11.8799 29.79 11.8701 29.8599 cv
7.7998 32.6499 3.79004 36.4399 2.25 41.1099 cv
1.79004 42.5 1.58008 43.8901 1.6001 45.27 cv
1.06006 45.5098 .52002 45.79 0 46.1099 cv
0 52.3999 li
.959961 51.5098 1.89014 50.7798 2.72998 50.2798 cv
2.8999 50.6802 3.08984 51.0801 3.31006 51.4697 cv
2.18994 52.2397 1.06006 53.1499 0 54.27 cv
0 64.6601 li
.450195 62.3999 1.45996 60.1899 3.33984 58.02 cv
4.66992 56.4697 6.2998 55.4502 8.03027 54.3799 cv
9.9502 53.1699 11.9502 51.9199 13.7002 49.8799 cv
14.48 48.96 14.9702 48.0801 15.3999 47.2998 cv
15.73 46.7002 15.9902 46.23 16.3301 45.8101 cv
17.1499 46.21 18.3301 46.52 19.5498 45.8101 cv
20.98 44.9897 21.9502 44.0698 22.8799 43.1899 cv
23.2603 42.8398 23.6499 42.4697 24.1001 42.0801 cv
24.52 41.71 25.0801 41.1899 25.75 40.5698 cv
33.8901 32.9697 36.9102 31.9697 38.02 32.21 cv
39.0601 33.7798 40.46 40.1899 41.0801 43 cv
41.46 44.7598 41.7603 46.1499 42.0103 46.9399 cv
43.1499 50.5298 43.8301 54.1401 44.4902 57.6201 cv
45.5801 63.4102 46.7002 69.3799 49.9399 75.25 cv
48.3301 76.3599 46.9702 77.7397 46.0601 79.4302 cv
45.1099 81.1802 44.4399 83.6001 45.02 86.71 cv
37.3901 85.4697 28.4902 86.8799 22.0601 88.1699 cv
21.0601 88.3799 li
17.8398 89.04 15.2998 89.5601 12.3999 88.8398 cv
11.3101 88.5698 10.2998 88.1001 9.24023 87.6099 cv
7.45996 86.7798 5.5 85.8799 3.06006 85.9302 cv
2.68018 83.1699 2.03027 80.5 1.3999 77.8999 cv
.839844 75.6499 .319824 73.4897 0 71.3999 cv
0 102.23 li
.580078 100.27 .97998 98.0801 1.35986 95.9697 cv
1.68994 94.1899 2.03027 92.3799 2.41016 91.02 cv
3.9502 90.7197 5.16992 91.23 7.14014 92.1401 cv
8.31006 92.6899 9.62988 93.2998 11.1899 93.6899 cv
12.6299 94.0498 13.98 94.1899 15.2803 94.1899 cv
17.6099 94.1899 19.7998 93.7397 22.0601 93.2798 cv
23.0498 93.0801 li
30.0103 91.6699 40.0303 90.1001 47.2202 92.3398 cv
47.73 93.2197 48.3198 94.1201 49.0303 95.0698 cv
49.1099 95.1802 49.21 95.29 49.2998 95.4101 cv
46.79 103.15 42.7202 107.52 38.4199 112.12 cv
35.71 115.01 32.9199 118 30.6001 121.83 cv
29.0601 124.37 28.6499 126.49 29.3501 128.31 cv
30.3999 131.04 33.3398 131.92 36.46 132.85 cv
38.0103 133.32 39.6201 133.8 41.0601 134.51 cv
46.2402 137.06 46.8799 139.05 47.3799 143.62 cv
46.3799 142.69 45.0303 141.86 42.96 141.53 cv
41.4302 141.29 40.04 141.75 38.8101 142.15 cv
38.0498 142.4 37.2603 142.65 36.79 142.6 cv
35.5103 142.48 33.1699 141.58 30.6802 140.25 cv
28.9302 139.32 27.46 138.07 25.9102 136.74 cv
24.48 135.53 23.0103 134.27 21.23 133.2 cv
20.1299 132.53 18.9702 132.08 17.8501 131.64 cv
16.6401 131.17 15.3999 130.68 14.8301 130.1 cv
14.21 129.48 13.46 128.06 12.73 126.69 cv
11.6802 124.7 10.48 122.45 8.85986 120.83 cv
7.62012 119.6 6.12988 118.41 4.5498 117.14 cv
3.01025 115.91 1.39014 114.62 0 113.25 cv
0 130.94 li
0 133.35 li
0 139.35 li
3.10986 137.16 6.66016 135.06 10.7402 132.99 cv
10.9199 133.21 11.0801 133.43 11.27 133.61 cv
cp
.94902 .890196 .835294 rgb
f
0 977.156 mo
.119629 976.729 .214355 976.28 .245605 975.777 cv
.272949 975.339 .181152 974.917 0 974.54 cv
0 977.156 li
cp
f
0 957.52 mo
0 958.5 li
0 973.07 li
2.58008 980.82 5.18018 989.88 7.35986 1000 cv
12.46 1000 li
14.8799 1000 li
20 1000 li
15.8599 981.82 6.33008 959.03 0 944.96 cv
0 957.52 li
cp
f
77.5898 952.62 mo
77.48 951.68 77.2803 950.75 76.96 949.82 cv
78.6099 950.37 80.1001 951.15 81.3901 952.43 cv
80.1201 952.39 78.8599 952.48 77.5898 952.62 cv
cp
60.8901 954.25 mo
61.4399 953.25 61.9302 952.33 62.4102 951.42 cv
63.1099 950.09 63.79 948.8 64.6401 947.37 cv
65.0103 947.48 65.3799 947.57 65.75 947.66 cv
67.1899 948.87 68.5 951.91 68.6299 954.23 cv
65.9102 954.68 63.3599 954.87 60.8901 954.25 cv
cp
56.1201 990.63 mo
47.1201 993.11 34.4199 989.6 29.8599 980.42 cv
27.04 974.73 26.2998 970.28 27.6699 967.17 cv
28.8701 964.44 31.8901 962.36 36.6499 960.99 cv
37.1802 960.83 37.71 960.69 38.2202 960.55 cv
42.9102 959.25 47.0898 958.08 50.29 952.71 cv
51.1699 954.01 52.2603 955.23 53.7002 956.28 cv
57.2002 958.83 60.7603 959.63 64.25 959.64 cv
63.4302 963.4 64.6602 967.23 65.7002 970.47 cv
66.2603 972.21 66.79 973.85 66.8901 975.13 cv
67.7002 985.81 60.4902 989.43 56.1201 990.63 cv
cp
55.0498 940.79 mo
55.0801 940.84 55.1099 940.89 55.1499 940.94 cv
53.8198 941.28 52.4399 941.74 51.04 942.35 cv
50.6699 941.46 50.2603 940.57 49.7803 939.7 cv
52.0103 939.77 54.5 939.91 55.0498 940.79 cv
cp
59.9399 945.49 mo
59.21 946.78 58.5801 947.95 57.98 949.09 cv
57.4902 950.03 56.98 951 56.3999 952.03 cv
54.7202 950.71 53.73 948.99 52.8799 947 cv
55.4102 945.87 57.7803 945.37 59.9399 945.49 cv
cp
71.6001 943.63 mo
66.6499 942.9 62.3701 942.27 59.23 938.04 cv
57.1802 934.89 53.1401 934.79 49.23 934.68 cv
47.6001 934.64 45.9199 934.59 44.4902 934.33 cv
43.3398 934.11 42.1899 934.72 41.73 935.8 cv
41.27 936.88 41.6299 938.13 42.5801 938.82 cv
45.04 940.58 46.0601 943.26 47.2402 946.35 cv
47.3198 946.56 47.3999 946.78 47.4902 946.99 cv
45.0498 953.45 42.0898 954.28 36.8799 955.73 cv
36.3599 955.87 35.8198 956.02 35.2603 956.18 cv
29.02 957.98 24.9199 961 23.0898 965.15 cv
21.0698 969.75 21.8198 975.47 25.3799 982.64 cv
26.9302 985.76 29.1499 988.32 31.7803 990.36 cv
29.6802 993.41 27.4902 996.65 25.3398 1000 cv
31.2998 1000 li
33.4102 1000 li
39.4502 1000 li
40.2998 998.78 41.1401 997.62 41.9902 996.51 cv
42.23 996.19 42.3799 995.82 42.4502 995.45 cv
44.9902 996.08 47.5801 996.4 50.1201 996.4 cv
52.6699 996.4 55.1602 996.08 57.4502 995.45 cv
67.2603 992.75 72.6499 985.01 71.8701 974.75 cv
71.73 972.88 71.1099 970.97 70.46 968.94 cv
69.2998 965.32 68.1899 961.89 69.73 959.1 cv
70.8701 958.91 71.9902 958.69 73.0801 958.47 cv
77.5801 957.56 81.8301 956.7 85.6001 958.41 cv
86.5303 958.83 87.6299 958.64 88.3599 957.93 cv
89.1001 957.22 89.3301 956.14 88.9502 955.19 cv
85.0898 945.62 77.9199 944.56 71.6001 943.63 cv
cp
f
18.9399 698.22 mo
18.9399 698.28 18.9502 698.34 18.9502 698.4 cv
18.6699 698.35 18.3901 698.31 18.1201 698.29 cv
18.3999 698.24 18.6699 698.22 18.9399 698.22 cv
cp
26.77 685.48 mo
30.23 679.23 39.1602 674.04 50.1001 671.96 cv
60.5601 669.96 70.4302 671.24 76.4102 675.26 cv
75.6899 678.74 76.0698 681.92 76.96 684.85 cv
76.98 684.91 77 684.97 77.02 685.03 cv
77.8999 687.86 79.23 690.47 80.48 692.9 cv
80.7603 693.43 81.0303 693.96 81.2998 694.49 cv
82.02 695.91 83.1699 697.44 84.6201 698.95 cv
83.8198 699.63 li
75.9902 706.29 67.8901 713.17 58.2998 715.8 cv
47.52 718.74 34.0498 714.66 27.6201 706.49 cv
24.2803 702.25 21.4199 695.15 26.77 685.48 cv
cp
81.4502 675.47 mo
81.6201 675.16 81.73 674.83 81.75 674.49 cv
81.79 674.38 81.8301 674.28 81.8701 674.17 cv
85.2998 675.69 89.3501 675.27 93.2803 674.87 cv
96.2603 674.56 98.3799 674.45 99.9199 674.68 cv
96.2998 675.22 92.5 677.33 89.1499 679.18 cv
86.79 680.5 83.02 682.59 81.4702 682.47 cv
80.9102 680.25 80.7998 677.96 81.4502 675.47 cv
cp
87.4902 665.71 mo
89.7603 667.28 93.1802 668.03 96.7402 668.81 cv
98.0303 669.09 99.4902 669.41 100.86 669.78 cv
98.2002 669.34 95.29 669.64 92.77 669.89 cv
89.6602 670.22 86.4502 670.55 84.21 669.73 cv
85.0898 668.45 86.1699 667.12 87.4902 665.71 cv
cp
95.8901 683.87 mo
92.2998 686.11 88.1099 688.75 86.3101 693.16 cv
86.1001 692.84 85.9102 692.53 85.7603 692.24 cv
85.4902 691.7 85.21 691.15 84.9302 690.61 cv
84.3501 689.48 83.7803 688.37 83.2603 687.27 cv
85.8301 686.73 88.6499 685.18 91.5801 683.56 cv
95.8301 681.2 99.2803 679.45 101.76 679.58 cv
100.2 681.17 98.0898 682.49 95.8901 683.87 cv
cp
100.76 690.75 mo
100.52 691.14 li
98.5898 694.29 96.48 697.74 96.75 701.63 cv
94.4502 700.49 92.2603 699.02 90.4302 697.49 cv
90.6001 693.32 93.71 691.13 98.54 688.11 cv
100.34 686.98 102.17 685.83 103.81 684.47 cv
103.19 686.51 102.21 688.39 100.76 690.75 cv
cp
105.02 693.37 mo
107.95 688.6 109.19 685.31 109.56 680.72 cv
110.19 681.08 110.63 681.48 110.83 681.9 cv
111.55 683.4 110.03 686.47 108.68 689.18 cv
106.66 693.25 103.76 699.08 107.59 703.34 cv
106.44 703.82 105.05 703.97 103.41 703.78 cv
103.1 703.74 102.78 703.68 102.46 703.62 cv
100.79 700.54 102.09 698.15 104.78 693.76 cv
105.02 693.37 li
cp
16.1899 703.5 mo
17.0898 703.16 18.54 702.92 20.6699 704.69 cv
20.6899 704.71 20.71 704.72 20.73 704.73 cv
21.4902 706.41 22.48 708.03 23.6899 709.58 cv
29.6899 717.2 40.3701 721.77 50.8398 721.77 cv
53.8198 721.77 56.79 721.4 59.6201 720.62 cv
70.29 717.7 79.2002 710.12 87.0601 703.44 cv
88.3999 702.3 li
92.6401 705.54 97.9702 708.19 102.84 708.74 cv
103.48 708.82 104.1 708.85 104.71 708.85 cv
108.39 708.85 111.43 707.52 113.58 704.93 cv
114.06 704.36 114.26 703.6 114.12 702.86 cv
113.97 702.12 113.51 701.49 112.85 701.13 cv
109.75 699.46 110.16 697.45 113.16 691.41 cv
115.1 687.49 117.12 683.44 115.34 679.73 cv
114.46 677.9 112.79 676.51 110.26 675.54 cv
110.96 673.67 111 671.96 110.38 670.42 cv
108.73 666.31 103.18 665.1 97.8101 663.92 cv
95.02 663.31 90.3398 662.29 89.8301 661.1 cv
89.5103 660.35 88.8301 659.81 88.0303 659.65 cv
87.2202 659.48 86.3901 659.73 85.7998 660.3 cv
82.0498 663.92 79.5898 667.27 78.0801 670.4 cv
70.9502 666.16 60.4399 664.9 49.1602 667.05 cv
36.6201 669.44 26.6099 675.43 22.3901 683.06 cv
20.5103 686.48 19.3701 689.89 18.9702 693.23 cv
11.8101 693.2 5.29004 701.25 1.68994 707.2 cv
6.1001 688.51 6.76025 669.61 3.7998 649.48 cv
2.97998 643.9 1.70996 638.58 0 633.27 cv
0 659.83 li
0 687.55 li
0 740.79 li
1.85986 730.75 8.41992 706.41 16.1899 703.5 cv
cp
f
18.9365 210.017 mo
18.9429 210.076 18.9453 210.137 18.9521 210.196 cv
18.6626 210.143 18.3789 210.105 18.1021 210.083 cv
18.3843 210.037 18.6621 210.016 18.9365 210.017 cv
cp
26.769 197.278 mo
30.2261 191.022 39.1646 185.841 50.0957 183.757 cv
60.5591 181.763 70.4336 183.035 76.4058 187.057 cv
75.6899 190.538 76.0718 193.715 76.96 196.646 cv
76.9756 196.707 76.9956 196.766 77.0156 196.825 cv
77.8965 199.659 79.2334 202.264 80.4829 204.69 cv
80.7578 205.225 81.0313 205.756 81.2983 206.286 cv
82.0156 207.71 83.168 209.236 84.6206 210.744 cv
83.8213 211.422 li
75.9907 218.082 67.8936 224.968 58.2988 227.593 cv
47.521 230.541 34.0474 226.454 27.625 218.289 cv
24.2847 214.042 21.4243 206.949 26.769 197.278 cv
cp
81.4556 187.266 mo
81.6255 186.957 81.7256 186.624 81.7549 186.285 cv
81.7905 186.18 81.8306 186.074 81.8691 185.968 cv
85.3008 187.482 89.3506 187.07 93.2827 186.665 cv
96.2632 186.356 98.3853 186.241 99.9194 186.47 cv
96.3027 187.019 92.5 189.124 89.1538 190.98 cv
86.7886 192.291 83.0161 194.377 81.4688 194.266 cv
80.9131 192.042 80.7988 189.75 81.4556 187.266 cv
cp
87.4858 177.505 mo
89.7573 179.074 93.1797 179.823 96.7393 180.603 cv
98.0264 180.885 99.4873 181.206 100.855 181.58 cv
98.2002 181.133 95.2842 181.431 92.769 181.691 cv
89.6572 182.013 86.4551 182.341 84.2148 181.526 cv
85.0918 180.247 86.168 178.912 87.4858 177.505 cv
cp
95.8862 195.666 mo
92.3042 197.907 88.1133 200.546 86.313 204.951 cv
86.1006 204.635 85.9102 204.327 85.7642 204.037 cv
85.4902 203.494 85.21 202.949 84.9282 202.402 cv
84.3462 201.272 83.7769 200.164 83.2588 199.062 cv
85.8267 198.526 88.6548 196.974 91.5781 195.353 cv
95.8306 192.995 99.2764 191.244 101.762 191.375 cv
100.196 192.961 98.0894 194.288 95.8862 195.666 cv
cp
100.762 202.547 mo
100.523 202.936 li
98.5874 206.088 96.478 209.534 96.7466 213.43 cv
94.4517 212.286 92.2632 210.815 90.4263 209.288 cv
90.5991 205.111 93.7139 202.922 98.5376 199.905 cv
100.341 198.777 102.17 197.623 103.812 196.263 cv
103.193 198.308 102.212 200.181 100.762 202.547 cv
cp
105.024 205.16 mo
107.946 200.393 109.188 197.106 109.557 192.514 cv
110.189 192.875 110.631 193.271 110.834 193.693 cv
111.554 195.194 110.027 198.267 108.681 200.978 cv
106.658 205.048 103.764 210.873 107.588 215.133 cv
106.437 215.617 105.051 215.762 103.406 215.573 cv
103.096 215.537 102.78 215.477 102.465 215.419 cv
100.787 212.341 102.086 209.944 104.784 205.552 cv
105.024 205.16 li
cp
16.1943 215.291 mo
17.0938 214.953 18.5356 214.711 20.6694 216.486 cv
20.6885 216.501 20.7104 216.511 20.7295 216.526 cv
21.4941 218.205 22.4751 219.829 23.6948 221.38 cv
29.6875 228.999 40.3701 233.562 50.8394 233.561 cv
53.8198 233.561 56.7856 233.19 59.6182 232.416 cv
70.2856 229.497 79.1978 221.917 87.061 215.23 cv
88.4019 214.092 li
92.6411 217.334 97.9727 219.983 102.837 220.54 cv
103.479 220.614 104.103 220.65 104.711 220.65 cv
108.387 220.65 111.428 219.313 113.581 216.73 cv
114.061 216.154 114.257 215.393 114.116 214.657 cv
113.974 213.92 113.509 213.287 112.85 212.93 cv
109.751 211.255 110.156 209.245 113.158 203.203 cv
115.105 199.284 117.118 195.233 115.342 191.53 cv
114.462 189.697 112.79 188.31 110.265 187.331 cv
110.958 185.466 110.997 183.754 110.379 182.218 cv
108.726 178.11 103.176 176.895 97.8091 175.719 cv
95.0176 175.107 90.3447 174.084 89.8315 172.901 cv
89.5054 172.149 88.8315 171.605 88.0278 171.444 cv
87.2217 171.284 86.3926 171.527 85.8027 172.096 cv
82.0503 175.714 79.5938 179.069 78.0796 182.196 cv
70.9487 177.958 60.4409 176.694 49.1597 178.846 cv
36.6191 181.237 26.6133 187.223 22.3931 194.859 cv
20.5054 198.275 19.374 201.689 18.9731 205.022 cv
11.8076 204.998 5.29248 213.05 1.68555 218.999 cv
6.10059 200.31 6.75684 181.405 3.80371 161.275 cv
2.98486 155.694 1.70947 150.379 0 145.068 cv
0 252.584 li
1.86426 242.545 8.42236 218.202 16.1943 215.291 cv
cp
f
139.35 870.19 mo
138.71 873.37 138.42 876.88 138.13 880.28 cv
137.76 884.7 137.38 889.24 136.25 893.14 cv
136.15 892.99 136.05 892.82 135.93 892.63 cv
135.32 891.65 134.52 890.36 133.17 889.43 cv
133.43 887.88 132.96 886.43 132.58 885.31 cv
132.42 884.83 132.17 884.1 132.19 883.87 cv
132.25 883.45 132.82 882.25 133.16 881.54 cv
133.95 879.87 134.58 878.55 134.45 877.26 cv
134.28 875.59 133.2 874.41 132.24 873.38 cv
131.83 872.92 131.2 872.24 131.11 871.91 cv
130.9 871.18 131.16 870.05 131.41 868.96 cv
131.73 867.53 132.1 865.9 131.65 864.3 cv
130.6 860.58 128.02 859.24 125.3 858.64 cv
125.34 858.56 125.39 858.49 125.43 858.41 cv
125.64 858.35 125.84 858.26 126.03 858.14 cv
127.13 857.43 128.46 857.56 130.19 858.01 cv
138.12 861.39 140.79 862.99 139.35 870.19 cv
cp
128.64 879.39 mo
127.96 880.82 127.32 882.17 127.21 883.42 cv
127.1 884.72 127.49 885.88 127.84 886.91 cv
128.01 887.4 128.35 888.4 128.25 888.62 cv
127.9 889.4 127.48 889.61 127.07 889.73 cv
122.96 890.86 112.94 883.78 109.65 881.45 cv
109.09 881.05 108.61 880.71 108.23 880.45 cv
93.4102 870.34 84.0498 861.45 74.1802 847.45 cv
77.7603 849.18 81.4902 850.52 85.1602 851.83 cv
88.3799 852.99 91.4199 854.08 94.3398 855.41 cv
102.43 859.11 110.11 861.45 118.53 862.79 cv
119.5 862.95 120.44 863.04 121.34 863.13 cv
125.27 863.52 126.33 863.86 126.84 865.66 cv
126.94 866.04 126.71 867.09 126.53 867.86 cv
126.18 869.39 125.75 871.31 126.29 873.26 cv
126.71 874.74 127.73 875.86 128.56 876.76 cv
128.83 877.05 129.2 877.45 129.39 877.72 cv
129.23 878.16 128.88 878.88 128.64 879.39 cv
cp
84.6602 814.37 mo
84.8599 813.69 85.0698 812.87 85.3101 811.95 cv
86.9302 805.62 88.8599 799.77 91.9302 798.5 cv
91.7998 804.26 92.4199 809.35 98.4502 814.03 cv
99.23 814.64 100.17 814.88 101.01 815.08 cv
101.15 815.12 101.33 815.16 101.49 815.21 cv
101.49 815.33 li
101.53 815.94 101.58 816.97 102.32 818 cv
102.68 818.51 102.99 818.95 103.25 819.34 cv
104.98 821.84 105.65 822.67 109.62 825.06 cv
117.88 830.05 121.53 836.75 121.46 846.81 cv
121.46 847.59 121.49 848.45 121.53 849.35 cv
121.74 854.33 121.49 856.81 119.47 857.44 cv
119.22 857.52 119.01 857.63 118.81 857.77 cv
111.05 856.49 103.92 854.29 96.4199 850.87 cv
93.3101 849.44 90.02 848.27 86.8501 847.13 cv
79.98 844.67 73.48 842.33 68.1401 837.64 cv
77.2402 833.73 82.1299 823.06 84.6602 814.37 cv
cp
48.6401 782.62 mo
48.3501 780.99 48.0303 779.34 47.71 777.7 cv
45.9302 768.56 44.2603 759.92 47.5498 751.76 cv
48.3701 749.73 49.3599 748.48 50.3501 748.26 cv
51.25 748.05 52.54 748.6 54.0303 749.81 cv
51.02 752.7 48.1899 755.43 48.79 758.96 cv
49.3799 762.42 53.2002 764.52 56.02 765.81 cv
58.29 766.84 60.7998 766.48 62.8198 766.18 cv
63.6001 766.07 64.7803 765.9 65.0801 765.97 cv
65.5898 766.26 66.5698 768.05 67.1602 769.12 cv
68.21 771.02 69.3901 773.17 71.0898 774.53 cv
72.9102 775.97 75.1299 776.65 77.2803 777.31 cv
79.98 778.14 81.6802 778.74 82.2202 779.96 cv
82.27 780.25 82.3501 781 82.4102 781.6 cv
82.79 785.45 83.48 792.38 86.9302 795.93 cv
83.3101 799.65 81.5801 806.37 80.46 810.71 cv
80.2402 811.57 80.0498 812.34 79.8599 812.97 cv
77.5898 820.76 73.3101 830.36 65.6499 833.27 cv
58.6499 817.09 51.5103 798.88 48.6401 782.62 cv
cp
57.5 753.4 mo
58.0303 752.89 58.5698 752.37 59.1099 751.84 cv
64.96 757.4 70.0601 759.37 74.3198 757.71 cv
76 759.88 78.2402 761.45 80.8198 762.24 cv
82.6401 762.79 84.54 762.93 86.4302 762.67 cv
85.48 766.39 85.3599 769.99 90 775.26 cv
90.9902 776.38 92.2998 777.39 93.6802 778.45 cv
98.0303 781.8 99.3701 783.4 98.25 785.69 cv
97.7803 786.64 97.9702 787.79 98.71 788.54 cv
99.4502 789.3 100.59 789.5 101.55 789.06 cv
104.29 787.78 105.98 788.54 108.84 790.42 cv
106 792.98 105.08 796.4 104.31 799.3 cv
103.35 802.89 102.58 805.76 99 807.59 cv
96.7998 804.67 96.7998 801.37 97.02 796 cv
97.0698 794.79 96.25 793.72 95.0698 793.46 cv
94.1602 793.25 93.3101 793.18 92.5103 793.23 cv
92.3501 793.19 92.1899 793.16 92.02 793.15 cv
88.5498 792.92 87.6699 784.03 87.3799 781.11 cv
87.23 779.51 87.1499 778.84 86.9302 778.26 cv
85.52 774.61 81.9199 773.5 78.7402 772.53 cv
76.96 771.98 75.2803 771.47 74.21 770.61 cv
73.29 769.88 72.3599 768.19 71.54 766.71 cv
70.2803 764.43 69.1001 762.27 67.1001 761.4 cv
65.5801 760.73 63.8901 760.98 62.1001 761.24 cv
60.6602 761.44 59.02 761.68 58.0898 761.26 cv
54.0498 759.42 53.7402 758.25 53.7202 758.12 cv
53.5601 757.19 55.9399 754.91 57.5 753.4 cv
cp
118.18 811.48 mo
119.44 812.71 119.46 813.18 119.53 814.95 cv
119.57 816.03 119.62 817.36 119.99 819.11 cv
121.12 824.42 124.01 828.34 127.4 832.55 cv
132.43 838.79 135.52 843.01 135.77 850.85 cv
135.84 853.02 135.6 853.9 135.47 854.2 cv
134.95 854.19 133.82 853.85 133.04 853.62 cv
131.22 853.07 128.94 852.39 126.59 852.72 cv
126.62 851.46 126.57 850.23 126.53 849.13 cv
126.49 848.32 126.46 847.55 126.46 846.84 cv
126.54 835.15 121.88 826.62 112.2 820.78 cv
108.98 818.84 108.77 818.53 107.37 816.5 cv
107.12 816.13 106.83 815.72 106.49 815.25 cv
106.49 815.06 li
106.45 814.37 106.38 813.1 105.33 811.82 cv
104.83 811.22 104.19 810.87 103.54 810.62 cv
104.87 809.59 105.85 808.43 106.61 807.2 cv
108.72 806.88 115.98 809.35 118.18 811.48 cv
cp
139.51 857.14 mo
140.72 855.37 140.84 852.84 140.77 850.69 cv
140.47 841.47 136.83 836.28 131.3 829.41 cv
128.32 825.71 125.78 822.3 124.88 818.07 cv
124.6 816.74 124.56 815.73 124.52 814.75 cv
124.44 812.67 124.35 810.51 121.66 807.89 cv
119.41 805.71 113.29 802.95 108.66 802.33 cv
108.84 801.74 108.99 801.15 109.14 800.58 cv
110.22 796.54 111 794.18 114.43 792.77 cv
115.31 792.41 115.91 791.58 115.97 790.64 cv
116.04 789.69 115.57 788.79 114.75 788.3 cv
113.96 787.84 113.18 787.31 112.42 786.8 cv
109.91 785.11 107.14 783.24 103.62 783.42 cv
103.17 779.46 99.4399 776.58 96.73 774.49 cv
95.54 773.58 94.4199 772.71 93.75 771.95 cv
90.1001 767.81 90.6001 766.13 91.79 762.05 cv
92.0303 761.25 92.2803 760.39 92.52 759.46 cv
92.7603 758.5 92.4102 757.48 91.6201 756.87 cv
90.8398 756.26 89.77 756.18 88.8901 756.66 cv
86.7603 757.82 84.4102 758.11 82.2803 757.46 cv
80.2002 756.82 78.4502 755.32 77.3599 753.22 cv
77.02 752.56 76.3999 752.09 75.6802 751.93 cv
74.9502 751.78 74.2002 751.94 73.6099 752.4 cv
70.8901 754.52 66.6001 752.54 60.8701 746.52 cv
60.3799 746.01 59.7002 745.72 59 745.75 cv
58.4702 745.76 57.96 745.94 57.5498 746.25 cv
54.6401 743.76 51.8398 742.78 49.23 743.38 cv
46.5303 744 44.3999 746.19 42.9102 749.89 cv
39.0601 759.43 40.9702 769.2 42.7998 778.65 cv
43.1201 780.27 43.4302 781.88 43.7202 783.49 cv
46.3599 798.48 52.4702 814.93 58.8301 830.02 cv
51.3901 832.49 30.4199 840.96 11.1899 862.61 cv
17.2402 830.91 8.37012 802.89 0 785.15 cv
0 798 li
0 805.64 li
0 854.42 li
.700195 851.41 1.28027 848.57 1.75 845.9 cv
1.52002 850.4 .930176 854.99 0 859.68 cv
0 878.38 li
0 882.61 li
0 894.5 li
.580078 893.39 1.14014 892.28 1.66992 891.17 cv
27.2603 857.62 60.1001 844.82 65.1602 843 cv
77.3901 861.97 87.5801 872.41 105.41 884.58 cv
105.77 884.83 106.23 885.15 106.76 885.53 cv
113.68 890.42 120.74 894.83 126.16 894.83 cv
126.94 894.83 127.69 894.74 128.39 894.55 cv
129.14 894.34 129.82 894.03 130.42 893.61 cv
130.81 893.91 131.15 894.41 131.68 895.27 cv
132.62 896.78 134.04 899.07 137.21 899.47 cv
137.31 899.48 137.42 899.49 137.53 899.49 cv
138.51 899.49 139.41 898.91 139.81 898 cv
142.1 892.81 142.62 886.65 143.12 880.7 cv
143.4 877.29 143.67 874.07 144.25 871.17 cv
145.73 863.75 143.37 859.84 139.51 857.14 cv
cp
f
48.6401 294.42 mo
48.3501 292.78 48.0303 291.14 47.71 289.49 cv
45.9302 280.35 44.2603 271.72 47.5498 263.55 cv
48.3701 261.52 49.3599 260.28 50.3501 260.05 cv
51.25 259.84 52.5498 260.39 54.0303 261.6 cv
51.02 264.49 48.1899 267.22 48.79 270.76 cv
49.3799 274.21 53.2002 276.32 56.02 277.6 cv
58.29 278.64 60.7998 278.27 62.8198 277.98 cv
63.6001 277.87 64.7803 277.69 65.0801 277.77 cv
65.5898 278.06 66.5698 279.85 67.1602 280.91 cv
68.21 282.81 69.3901 284.97 71.0898 286.32 cv
72.9102 287.77 75.1299 288.45 77.2803 289.11 cv
79.98 289.93 81.6802 290.53 82.2202 291.76 cv
82.27 292.05 82.3501 292.79 82.4102 293.4 cv
82.79 297.25 83.48 304.18 86.9302 307.72 cv
83.3101 311.44 81.5801 318.17 80.46 322.51 cv
80.2402 323.37 80.0498 324.13 79.8599 324.76 cv
77.5898 332.55 73.3101 342.15 65.6499 345.07 cv
58.6499 328.88 51.5103 310.67 48.6401 294.42 cv
cp
57.5 265.2 mo
58.0303 264.69 58.5698 264.17 59.1099 263.63 cv
64.96 269.2 70.0601 271.16 74.3198 269.5 cv
76 271.67 78.2402 273.25 80.8198 274.03 cv
82.6401 274.59 84.54 274.73 86.4302 274.47 cv
85.48 278.19 85.3599 281.79 90 287.05 cv
90.9902 288.18 92.2998 289.18 93.6802 290.25 cv
98.0303 293.6 99.3701 295.19 98.25 297.49 cv
97.7803 298.44 97.9702 299.58 98.71 300.34 cv
99.4502 301.1 100.59 301.3 101.55 300.85 cv
104.29 299.57 105.98 300.33 108.84 302.22 cv
106 304.78 105.08 308.2 104.31 311.09 cv
103.35 314.69 102.58 317.56 99 319.39 cv
96.7998 316.47 96.7998 313.16 97.02 307.8 cv
97.0698 306.59 96.25 305.51 95.0698 305.25 cv
94.1602 305.05 93.3101 304.98 92.5103 305.02 cv
92.3501 304.98 92.1899 304.95 92.02 304.94 cv
88.5498 304.72 87.6699 295.83 87.3799 292.9 cv
87.23 291.31 87.1499 290.64 86.9302 290.06 cv
85.52 286.4 81.9199 285.3 78.7402 284.32 cv
76.96 283.78 75.2803 283.27 74.21 282.41 cv
73.29 281.68 72.3599 279.99 71.54 278.5 cv
70.2803 276.22 69.1001 274.07 67.1001 273.2 cv
65.5801 272.53 63.8901 272.77 62.1001 273.03 cv
60.6602 273.24 59.02 273.48 58.0898 273.05 cv
54.0498 271.21 53.7402 270.04 53.7202 269.92 cv
53.5601 268.98 55.9399 266.7 57.5 265.2 cv
cp
118.18 323.28 mo
119.44 324.5 119.46 324.98 119.53 326.75 cv
119.57 327.82 119.62 329.16 119.99 330.9 cv
121.12 336.21 124.01 340.13 127.4 344.34 cv
132.43 350.58 135.52 354.81 135.77 362.65 cv
135.84 364.82 135.6 365.7 135.47 366 cv
134.95 365.99 133.82 365.65 133.04 365.42 cv
131.22 364.87 128.94 364.18 126.59 364.52 cv
126.62 363.25 126.57 362.02 126.53 360.93 cv
126.49 360.12 126.46 359.34 126.46 358.64 cv
126.54 346.94 121.88 338.42 112.2 332.58 cv
108.98 330.63 108.77 330.32 107.37 328.3 cv
107.12 327.93 106.83 327.52 106.49 327.04 cv
106.49 326.85 li
106.45 326.17 106.38 324.89 105.33 323.62 cv
104.83 323.02 104.19 322.66 103.54 322.42 cv
104.87 321.39 105.85 320.22 106.61 318.99 cv
108.72 318.68 115.98 321.15 118.18 323.28 cv
cp
139.35 381.98 mo
138.71 385.17 138.42 388.68 138.13 392.07 cv
137.76 396.49 137.38 401.03 136.25 404.94 cv
136.15 404.79 136.05 404.62 135.93 404.43 cv
135.32 403.45 134.52 402.15 133.17 401.22 cv
133.43 399.67 132.96 398.22 132.58 397.1 cv
132.42 396.62 132.17 395.9 132.19 395.66 cv
132.25 395.25 132.82 394.05 133.16 393.33 cv
133.95 391.66 134.58 390.35 134.45 389.05 cv
134.28 387.39 133.2 386.21 132.24 385.17 cv
131.83 384.72 131.2 384.04 131.11 383.71 cv
130.9 382.98 131.16 381.85 131.41 380.76 cv
131.73 379.32 132.1 377.7 131.65 376.1 cv
130.59 372.37 128.02 371.03 125.3 370.44 cv
125.34 370.36 125.39 370.29 125.43 370.21 cv
125.64 370.14 125.84 370.06 126.03 369.93 cv
127.13 369.22 128.45 369.35 130.19 369.8 cv
138.12 373.19 140.79 374.78 139.35 381.98 cv
cp
128.64 391.19 mo
127.96 392.62 127.32 393.97 127.21 395.22 cv
127.1 396.51 127.49 397.68 127.84 398.71 cv
128.01 399.19 128.35 400.2 128.25 400.42 cv
127.9 401.2 127.48 401.41 127.07 401.52 cv
122.95 402.65 112.94 395.57 109.65 393.25 cv
109.09 392.85 108.61 392.51 108.23 392.25 cv
93.4102 382.13 84.0498 373.25 74.1802 359.24 cv
77.7603 360.98 81.4902 362.32 85.1602 363.63 cv
88.3799 364.78 91.4199 365.87 94.3398 367.21 cv
102.43 370.9 110.11 373.25 118.53 374.59 cv
119.5 374.75 120.43 374.84 121.34 374.93 cv
125.27 375.32 126.33 375.66 126.84 377.46 cv
126.94 377.83 126.71 378.88 126.53 379.65 cv
126.18 381.19 125.75 383.1 126.29 385.05 cv
126.71 386.54 127.73 387.66 128.56 388.56 cv
128.83 388.84 129.2 389.24 129.39 389.52 cv
129.23 389.96 128.88 390.67 128.64 391.19 cv
cp
98.4502 325.83 mo
99.23 326.44 100.17 326.67 101 326.88 cv
101.15 326.91 101.33 326.96 101.49 327 cv
101.49 327.13 li
101.53 327.74 101.58 328.77 102.32 329.8 cv
102.68 330.31 102.99 330.75 103.25 331.14 cv
104.98 333.64 105.65 334.46 109.62 336.86 cv
117.88 341.84 121.53 348.55 121.46 358.61 cv
121.46 359.38 121.49 360.24 121.53 361.14 cv
121.74 366.13 121.49 368.61 119.47 369.24 cv
119.22 369.31 119.01 369.43 118.81 369.56 cv
111.05 368.28 103.92 366.09 96.4199 362.66 cv
93.3101 361.24 90.02 360.06 86.8501 358.92 cv
79.98 356.46 73.48 354.13 68.1401 349.43 cv
77.2402 345.53 82.1299 334.86 84.6602 326.16 cv
84.8599 325.49 85.0698 324.67 85.3101 323.75 cv
86.9302 317.42 88.8599 311.57 91.9302 310.3 cv
91.7998 316.05 92.4199 321.14 98.4502 325.83 cv
cp
65.1602 354.79 mo
77.3901 373.77 87.5801 384.21 105.41 396.38 cv
105.77 396.63 106.23 396.95 106.77 397.33 cv
113.68 402.22 120.74 406.63 126.16 406.63 cv
126.94 406.63 127.69 406.54 128.39 406.34 cv
129.14 406.14 129.82 405.82 130.42 405.4 cv
130.81 405.7 131.15 406.21 131.68 407.07 cv
132.62 408.58 134.04 410.86 137.21 411.27 cv
137.31 411.28 137.42 411.29 137.53 411.29 cv
138.51 411.29 139.41 410.71 139.81 409.79 cv
142.1 404.6 142.62 398.44 143.12 392.49 cv
143.4 389.08 143.67 385.87 144.25 382.96 cv
145.73 375.54 143.37 371.63 139.51 368.94 cv
140.72 367.17 140.84 364.63 140.77 362.48 cv
140.47 353.27 136.83 348.08 131.3 341.21 cv
128.32 337.51 125.78 334.1 124.88 329.87 cv
124.6 328.53 124.56 327.52 124.52 326.55 cv
124.44 324.46 124.35 322.31 121.66 319.69 cv
119.41 317.51 113.29 314.75 108.66 314.13 cv
108.84 313.53 108.99 312.95 109.14 312.38 cv
110.22 308.33 111 305.98 114.43 304.56 cv
115.31 304.2 115.91 303.38 115.97 302.43 cv
116.04 301.48 115.57 300.58 114.75 300.1 cv
113.96 299.63 113.18 299.11 112.42 298.6 cv
109.91 296.9 107.15 295.05 103.62 295.22 cv
103.17 291.25 99.4399 288.37 96.73 286.29 cv
95.54 285.37 94.4199 284.51 93.75 283.75 cv
90.1001 279.61 90.6001 277.92 91.79 273.85 cv
92.0303 273.04 92.2803 272.19 92.52 271.26 cv
92.7603 270.3 92.4102 269.28 91.6201 268.67 cv
90.8398 268.06 89.77 267.98 88.8901 268.45 cv
86.7603 269.62 84.4102 269.9 82.2803 269.25 cv
80.2002 268.62 78.4502 267.11 77.3599 265.02 cv
77.02 264.36 76.3999 263.89 75.6802 263.73 cv
74.96 263.57 74.2002 263.74 73.6099 264.2 cv
70.8901 266.32 66.6001 264.34 60.8701 258.32 cv
60.3799 257.81 59.7002 257.52 59 257.54 cv
58.4702 257.56 57.9702 257.74 57.5498 258.05 cv
54.6401 255.55 51.8398 254.58 49.23 255.18 cv
46.5303 255.8 44.3999 257.99 42.9102 261.68 cv
39.0601 271.22 40.9702 281 42.7998 290.45 cv
43.1201 292.07 43.4302 293.68 43.7202 295.28 cv
46.3599 310.28 52.4702 326.72 58.8198 341.81 cv
51.3901 344.29 30.4199 352.76 11.1899 374.4 cv
17.2402 342.7 8.37012 314.69 0 296.94 cv
0 309.79 li
0 317.45 li
0 366.21 li
.700195 363.21 1.29004 360.37 1.75 357.7 cv
1.52002 362.2 .930176 366.78 0 371.48 cv
0 390.18 li
0 394.4 li
0 406.3 li
.580078 405.18 1.14014 404.07 1.66992 402.97 cv
27.2603 369.42 60.1001 356.61 65.1602 354.79 cv
cp
f
2.68018 610.26 mo
2.8999 610.44 3.1001 610.61 3.31006 610.78 cv
3.03027 610.95 2.75 611.13 2.47021 611.31 cv
2.68018 610.26 li
cp
43.27 618.23 mo
41.46 617.33 39.5601 616.77 37.8901 616.27 cv
36.5601 615.87 34.3398 615.2 34.02 614.73 cv
34.02 614.73 33.9502 614.16 34.8799 612.62 cv
36.9302 609.24 39.4199 606.57 42.0698 603.74 cv
46.1401 599.38 50.3398 594.89 53.21 587.54 cv
56.75 590.27 60.98 591.76 65.3999 591.76 cv
66.29 591.76 67.1899 591.7 68.0898 591.58 cv
72.0103 591.05 75.4702 589.4 77.98 587.01 cv
85.4102 594.85 102.37 594.82 112.94 594.81 cv
114.09 594.8 115.16 594.8 116.11 594.81 cv
116.59 594.81 li
120.02 594.81 122.34 594.43 124 593.56 cv
124.39 593.67 124.78 593.76 125.15 593.84 cv
127.96 594.49 128.32 594.57 127.73 597.26 cv
127.2 599.71 125.03 601.02 121.51 602.88 cv
117.89 604.8 113.78 606.98 112.86 611.92 cv
112.44 614.22 114.11 615.43 114.83 615.95 cv
114.94 616.03 115.1 616.14 115.2 616.22 cv
115.19 616.27 115.18 616.32 115.17 616.4 cv
114.49 617.54 110.58 620.38 109.29 621.33 cv
108.74 621.72 108.28 622.06 107.96 622.3 cv
104.48 625 100.58 626.64 96.4502 628.37 cv
93.8999 629.45 91.27 630.55 88.7002 631.94 cv
82.3198 635.38 76.3799 636.11 69.5103 636.96 cv
68.2202 637.12 66.8999 637.28 65.5498 637.46 cv
64.4502 637.61 63.3701 637.79 62.3301 637.96 cv
58.7998 638.53 55.46 639.07 54.0498 637.99 cv
53.3301 637.44 52.8701 636.25 52.6699 634.45 cv
52.6099 633.87 52.5498 633.31 52.5 632.77 cv
51.8999 626.67 51.46 622.27 43.27 618.23 cv
cp
49.3999 544.9 mo
48.7202 541.27 48.0103 537.51 46.7803 533.63 cv
46.6001 533.06 46.29 531.64 45.96 530.13 cv
43.98 521.07 42.77 517.1 40.3999 515.97 cv
35.3501 513.57 28.4302 519.43 22.3398 525.11 cv
21.7202 525.69 21.21 526.17 20.8198 526.5 cv
20.3198 526.94 19.8799 527.36 19.46 527.75 cv
18.8901 528.28 18.4102 528.74 17.8701 529.14 cv
17.1499 528.73 15.8198 528.16 14.5 529.03 cv
12.5498 530.31 11.7002 531.85 11.02 533.09 cv
10.6602 533.74 10.3501 534.3 9.8999 534.83 cv
9.2002 535.65 8.37988 536.32 7.51025 536.94 cv
6.5 534.9 6.33008 532.91 7 530.88 cv
8.12012 527.47 11.4102 524.33 15.2603 521.78 cv
15.4302 521.69 15.6001 521.59 15.75 521.46 cv
18.4399 519.73 21.3799 518.29 24.0303 517.26 cv
24.9502 516.9 li
31.5801 514.31 35.96 512.6 42.7402 512.18 cv
46.25 511.96 49.5498 509.93 52.7402 507.96 cv
58.25 504.55 61.8999 502.67 66.0303 505.17 cv
66.2803 505.33 66.79 506.11 67.1299 506.62 cv
67.8501 507.72 68.75 509.08 70.1401 510.01 cv
72.3999 511.51 75.1299 512.12 77.5303 512.66 cv
78.3101 512.83 79.0698 513 79.79 513.2 cv
80.3999 513.36 81.0103 513.5 81.6099 513.63 cv
82.6602 513.86 83.3701 514.04 83.8599 514.24 cv
83.77 514.26 83.6802 514.27 83.6001 514.29 cv
82.5801 514.52 81.6099 514.73 80.6899 514.74 cv
78.9199 514.73 76.8101 514.09 74.7402 513.45 cv
70.52 512.14 65.27 510.52 61.6499 514.79 cv
58.0898 519.01 57.6099 527.74 57.2002 535.44 cv
57.04 538.38 56.8901 541.16 56.5698 543 cv
56.3198 544.47 56.02 545.97 55.7002 547.55 cv
54.8501 551.77 53.9902 556.1 53.9702 560.38 cv
51.3901 555.42 50.4199 550.3 49.3999 544.9 cv
cp
88.9399 519.25 mo
89.9302 519.93 90.4102 520.74 91.02 521.75 cv
92.0698 523.5 93.3799 525.67 97.1602 527.03 cv
98.8501 527.64 100.53 528.05 102.15 528.45 cv
105.47 529.26 108.34 529.96 110.79 532.11 cv
111.6 532.82 112.2 533.53 112.84 534.29 cv
113.97 535.62 115.21 537.08 117.42 538.07 cv
116.67 539.06 115.68 540.05 114.55 541.01 cv
111.41 543.69 107.19 546.18 103.74 548.21 cv
101.86 549.32 100.09 550.36 98.6802 551.31 cv
95.4399 553.51 92.6602 555.92 89.9702 558.25 cv
86.1299 561.58 82.48 564.73 77.8501 566.94 cv
75.9502 562.95 71.0103 560.35 64.46 559.95 cv
62.6899 559.84 60.8301 559.91 58.9702 560.16 cv
59.0303 556.41 59.8198 552.43 60.6001 548.54 cv
60.9199 546.99 61.2402 545.38 61.5 543.84 cv
61.8701 541.71 62.02 538.93 62.1899 535.71 cv
62.5303 529.48 62.9902 520.95 65.4702 518.02 cv
66.8101 516.45 68.9702 516.9 73.2603 518.23 cv
75.6899 518.98 78.1699 519.73 80.7402 519.74 cv
82.1802 519.73 83.5 519.43 84.6699 519.18 cv
86.7402 518.72 87.8599 518.52 88.9399 519.25 cv
cp
117.74 545.03 mo
121.29 543.86 121.93 543.65 124.44 545.86 cv
124.89 546.25 124.93 546.39 124.76 547.81 cv
124.64 548.76 124.49 549.95 124.81 551.27 cv
125.2 552.87 126.05 554.16 126.8 555.29 cv
127.41 556.2 127.99 557.07 128.15 557.88 cv
128.8 560.96 127.22 565.28 125.69 569.47 cv
124.19 573.57 122.65 577.81 122.7 581.82 cv
122.71 582.63 li
122.75 584.97 122.78 586.93 122.47 588.06 cv
121.73 588.19 121.05 588.64 120.68 589.35 cv
120.65 589.4 120.64 589.45 120.62 589.5 cv
119.59 589.73 118.1 589.83 116.15 589.81 cv
115.19 589.8 114.1 589.8 112.93 589.81 cv
103.49 589.83 86.27 589.85 80.9902 582.84 cv
81.1001 582.6 81.21 582.37 81.2998 582.14 cv
82.6401 578.68 82.3599 574.91 80.5601 571.19 cv
85.5303 568.7 89.46 565.32 93.25 562.03 cv
95.8198 559.79 98.4902 557.48 101.49 555.45 cv
102.76 554.59 104.47 553.58 106.27 552.52 cv
109.92 550.37 114.06 547.93 117.41 545.13 cv
117.74 545.03 li
cp
29.8599 468.62 mo
27.04 462.94 26.2998 458.48 27.6699 455.37 cv
28.8701 452.64 31.8901 450.56 36.6499 449.19 cv
37.1802 449.04 37.71 448.89 38.2202 448.75 cv
42.9102 447.45 47.0898 446.28 50.29 440.92 cv
51.1699 442.21 52.2603 443.43 53.7002 444.48 cv
57.2002 447.03 60.7603 447.83 64.25 447.84 cv
63.4302 451.6 64.6602 455.43 65.7002 458.68 cv
66.2603 460.42 66.79 462.06 66.8901 463.33 cv
67.7002 474.02 60.4902 477.63 56.1201 478.83 cv
47.1201 481.31 34.4199 477.8 29.8599 468.62 cv
cp
55.0498 428.99 mo
55.0801 429.04 55.1099 429.1 55.1499 429.15 cv
53.8198 429.48 52.4399 429.94 51.04 430.55 cv
50.6699 429.67 50.2603 428.78 49.7803 427.9 cv
52.0103 427.97 54.5 428.12 55.0498 428.99 cv
cp
59.9399 433.7 mo
59.21 434.98 58.5801 436.15 57.98 437.3 cv
57.4902 438.24 56.98 439.2 56.3999 440.23 cv
54.7202 438.92 53.73 437.19 52.8799 435.2 cv
55.4102 434.07 57.7803 433.57 59.9399 433.7 cv
cp
62.4102 439.63 mo
63.1099 438.29 63.79 437.01 64.6401 435.57 cv
65.0103 435.68 65.3799 435.78 65.75 435.87 cv
67.1899 437.07 68.5 440.11 68.6299 442.43 cv
65.9102 442.89 63.3501 443.07 60.8901 442.45 cv
61.4399 441.46 61.9302 440.53 62.4102 439.63 cv
cp
81.3901 440.64 mo
80.1201 440.59 78.8599 440.67 77.5898 440.82 cv
77.48 439.88 77.2803 438.95 76.96 438.03 cv
78.6099 438.57 80.1001 439.36 81.3901 440.64 cv
cp
11.27 621.82 mo
12.5898 623.16 14.3398 623.84 16.0303 624.5 cv
17 624.88 17.9102 625.24 18.6499 625.68 cv
20.0801 626.54 21.3301 627.62 22.6699 628.75 cv
24.3501 630.19 26.1001 631.68 28.3301 632.87 cv
30.1602 633.84 33.6299 635.52 36.29 635.78 cv
37.8198 635.94 39.23 635.47 40.3701 635.1 cv
41.02 634.89 41.8398 634.62 42.1802 634.68 cv
43.73 634.92 44.1802 635.57 45.0698 636.86 cv
45.98 638.18 47.2202 639.98 49.8799 640.98 cv
49.9302 641 49.9702 641.01 50.02 641.02 cv
50.3301 641.37 50.6499 641.69 51.02 641.97 cv
52.6401 643.2 54.5801 643.61 56.73 643.61 cv
58.73 643.61 60.8999 643.25 63.1299 642.89 cv
64.1299 642.73 65.1602 642.56 66.2202 642.42 cv
67.5601 642.24 68.8501 642.08 70.1201 641.92 cv
77.1899 641.05 83.8701 640.22 91.0698 636.34 cv
93.4302 635.07 95.9502 634.01 98.3901 632.98 cv
102.63 631.2 107.02 629.35 111.02 626.26 cv
111.31 626.04 111.73 625.73 112.23 625.37 cv
116.95 621.93 119.45 619.81 119.98 617.76 cv
120.83 614.46 118.98 612.8 117.99 612.07 cv
118.72 610.14 120.76 608.94 123.85 607.3 cv
127.46 605.39 131.55 603.22 132.62 598.32 cv
134.06 591.72 130.07 589.96 127.32 589.23 cv
127.78 587.41 127.75 585.2 127.71 582.55 cv
127.7 581.75 li
127.66 578.66 129.05 574.86 130.39 571.18 cv
132.16 566.34 133.99 561.33 133.05 556.86 cv
132.96 556.42 132.83 556 132.68 555.61 cv
132.23 554.42 131.57 553.43 130.97 552.52 cv
130.4 551.66 129.85 550.84 129.67 550.09 cv
129.57 549.66 129.64 549.08 129.72 548.42 cv
129.91 546.88 130.23 544.3 127.74 542.11 cv
125.79 540.39 124.12 539.57 122.56 539.29 cv
122.91 538.65 123.22 538 123.45 537.33 cv
123.69 536.63 123.6 535.86 123.22 535.23 cv
122.84 534.6 122.2 534.17 121.47 534.06 cv
118.86 533.65 118.08 532.73 116.66 531.05 cv
115.96 530.23 115.18 529.31 114.09 528.35 cv
110.72 525.39 106.97 524.47 103.34 523.59 cv
101.77 523.21 100.29 522.85 98.8501 522.33 cv
96.7402 521.57 96.1699 520.62 95.3101 519.18 cv
94.5698 517.95 93.6499 516.42 91.7603 515.13 cv
91.0698 514.66 90.3799 514.34 89.7002 514.12 cv
88.79 510.09 85.04 509.26 82.6802 508.75 cv
82.1602 508.63 81.6299 508.52 81.1099 508.38 cv
80.3101 508.16 79.4702 507.97 78.6201 507.78 cv
76.54 507.32 74.3999 506.84 72.9102 505.84 cv
72.3599 505.48 71.8198 504.66 71.2998 503.87 cv
70.5801 502.77 69.8198 501.63 68.6201 500.9 cv
61.5698 496.63 55.2202 500.55 50.1099 503.7 cv
47.3301 505.42 44.6899 507.05 42.4302 507.19 cv
35.29 507.63 30.5 509.37 24.2402 511.81 cv
28.7603 498.97 33.5801 490.43 40.3901 483.06 cv
43.5698 484.08 46.8901 484.6 50.1201 484.6 cv
52.6699 484.6 55.1602 484.28 57.4502 483.65 cv
67.2603 480.95 72.6499 473.21 71.8701 462.95 cv
71.73 461.09 71.1099 459.17 70.46 457.15 cv
69.2998 453.53 68.1899 450.1 69.73 447.31 cv
70.8701 447.11 71.9902 446.9 73.0801 446.68 cv
77.5801 445.77 81.8301 444.91 85.6001 446.61 cv
86.5303 447.03 87.6299 446.84 88.3599 446.13 cv
89.1001 445.43 89.3301 444.34 88.9502 443.4 cv
85.0898 433.82 77.9199 432.77 71.6001 431.84 cv
66.6499 431.11 62.3701 430.48 59.23 426.25 cv
57.1802 423.1 53.1401 422.99 49.2202 422.89 cv
47.6001 422.84 45.9199 422.8 44.4902 422.53 cv
43.3398 422.31 42.1899 422.93 41.73 424.01 cv
41.27 425.09 41.6299 426.34 42.5801 427.02 cv
45.04 428.79 46.0601 431.46 47.2402 434.56 cv
47.3198 434.77 47.3999 434.98 47.4902 435.19 cv
45.0498 441.65 42.0898 442.49 36.8799 443.93 cv
36.3599 444.08 35.8198 444.23 35.2603 444.39 cv
29.02 446.19 24.9199 449.2 23.0898 453.36 cv
21.0698 457.95 21.8198 463.67 25.3799 470.84 cv
26.9302 473.96 29.1499 476.52 31.7803 478.57 cv
28.4102 483.46 24.79 488.79 21.5303 494.38 cv
18.8599 475.81 7.1001 456.44 0 446.13 cv
0 455.3 li
1.02002 456.94 2.08008 458.67 3.14014 460.51 cv
2.08008 458.73 1.02002 457.12 0 455.69 cv
0 465.35 li
.0102539 465.33 .0200195 465.3 .0302734 465.27 cv
5.95996 476.03 11.9302 493.01 11.9199 517.78 cv
11.8999 517.87 11.8799 517.97 11.8701 518.07 cv
7.7998 520.86 3.79004 524.64 2.25 529.32 cv
1.79004 530.71 1.58008 532.1 1.6001 533.48 cv
1.06006 533.71 .52002 534 0 534.32 cv
0 540.61 li
.959961 539.71 1.89014 538.98 2.72998 538.49 cv
2.8999 538.89 3.08984 539.28 3.31006 539.68 cv
2.18994 540.45 1.06006 541.35 0 542.48 cv
0 552.87 li
.450195 550.6 1.45996 548.4 3.33984 546.22 cv
4.66992 544.68 6.2998 543.66 8.03027 542.58 cv
9.9502 541.37 11.9502 540.12 13.7002 538.08 cv
14.48 537.16 14.9702 536.28 15.3999 535.5 cv
15.73 534.91 15.9902 534.43 16.3301 534.02 cv
17.1499 534.41 18.3301 534.72 19.5498 534.02 cv
20.98 533.19 21.9502 532.28 22.8799 531.39 cv
23.2603 531.04 23.6499 530.67 24.1001 530.28 cv
24.52 529.92 25.0801 529.39 25.75 528.77 cv
33.8901 521.18 36.9102 520.18 38.02 520.41 cv
39.0601 521.98 40.46 528.4 41.0801 531.2 cv
41.46 532.96 41.7603 534.35 42.0103 535.14 cv
43.1499 538.73 43.8301 542.34 44.4902 545.83 cv
45.5801 551.61 46.7002 557.58 49.9399 563.45 cv
48.3301 564.56 46.9702 565.94 46.0601 567.64 cv
45.1099 569.38 44.4399 571.81 45.02 574.92 cv
37.3901 573.67 28.4902 575.08 22.0601 576.38 cv
21.0498 576.58 li
17.8301 577.25 15.29 577.77 12.3999 577.05 cv
11.3101 576.77 10.3101 576.31 9.24023 575.81 cv
7.45996 574.98 5.49023 574.07 3.06006 574.13 cv
2.68018 571.37 2.03027 568.71 1.3999 566.11 cv
.839844 563.85 .319824 561.69 0 559.6 cv
0 590.43 li
.580078 588.48 .97998 586.28 1.35986 584.18 cv
1.68994 582.39 2.03027 580.58 2.41016 579.23 cv
3.9502 578.93 5.16992 579.44 7.14014 580.35 cv
8.31006 580.89 9.62988 581.51 11.1899 581.9 cv
12.6299 582.26 13.98 582.4 15.2803 582.4 cv
17.6099 582.4 19.79 581.95 22.0601 581.48 cv
23.0498 581.28 li
30.0103 579.88 40.0303 578.31 47.2202 580.55 cv
47.73 581.42 48.3198 582.33 49.0303 583.27 cv
49.1099 583.39 49.21 583.5 49.2998 583.61 cv
46.79 591.35 42.7202 595.72 38.4199 600.33 cv
35.71 603.22 32.9199 606.21 30.6001 610.03 cv
29.0601 612.58 28.6499 614.7 29.3501 616.51 cv
30.3999 619.24 33.3398 620.12 36.46 621.06 cv
38.0103 621.52 39.6201 622 41.0601 622.71 cv
46.2402 625.27 46.8799 627.25 47.3799 631.82 cv
46.3799 630.89 45.0303 630.07 42.96 629.74 cv
41.4302 629.49 40.04 629.95 38.8101 630.35 cv
38.0498 630.6 37.2603 630.86 36.79 630.81 cv
35.5103 630.68 33.1699 629.78 30.6802 628.46 cv
28.9302 627.52 27.46 626.27 25.9102 624.95 cv
24.4902 623.73 23.0103 622.47 21.23 621.4 cv
20.1299 620.73 18.9702 620.28 17.8501 619.84 cv
16.6401 619.37 15.3999 618.89 14.8301 618.31 cv
14.21 617.68 13.46 616.26 12.73 614.89 cv
11.6802 612.91 10.48 610.66 8.85986 609.04 cv
7.62012 607.8 6.12988 606.61 4.5498 605.35 cv
3.01025 604.12 1.39014 602.82 0 601.46 cv
0 619.14 li
0 621.56 li
0 627.56 li
3.10986 625.37 6.66016 623.27 10.7402 621.2 cv
10.9199 621.41 11.0801 621.63 11.27 621.82 cv
cp
f
782.35 163 mo
782.38 164.65 li
782.48 171.32 782.55 175.96 780.95 178.5 cv
779.8 178.09 778.49 178.57 777.9 179.68 cv
777.7 180.06 777.62 180.47 777.62 180.87 cv
775.19 181.71 771.52 182.08 766.3 182.02 cv
764.32 182 762.11 182.01 759.72 182.01 cv
739.34 182.04 701.79 182.1 691.27 165.32 cv
691.72 164.48 692.14 163.62 692.48 162.73 cv
695.24 155.65 694.27 147.8 689.82 140.09 cv
700.89 135.07 709.05 128 717.68 120.52 cv
723.01 115.89 728.53 111.1 734.81 106.85 cv
737.49 105.04 741.02 102.96 744.75 100.76 cv
752.29 96.3198 760.87 91.27 767.65 85.54 cv
768.75 85.1802 li
776.23 82.7197 778.75 81.8901 785.02 87.4101 cv
787.01 89.1601 786.92 90.6802 786.55 93.6802 cv
786.32 95.52 786.06 97.5898 786.61 99.8398 cv
787.29 102.67 788.83 104.99 790.32 107.24 cv
791.71 109.33 793.02 111.3 793.47 113.46 cv
794.94 120.5 791.73 129.3 788.32 138.62 cv
785.33 146.8 782.25 155.26 782.35 163 cv
cp
792.6 195.21 mo
791.17 201.79 785.03 205.05 778.52 208.49 cv
771.29 212.32 763.81 216.28 762.16 225.17 cv
761.59 228.25 763.81 229.85 765.14 230.81 cv
766.73 231.95 767.38 232.42 766.79 234.73 cv
766.18 237.06 756.85 243.85 753.79 246.08 cv
752.7 246.87 751.77 247.54 751.15 248.03 cv
743.75 253.75 735.6 257.18 726.97 260.81 cv
721.81 262.98 716.47 265.22 711.32 268 cv
697.83 275.28 685.44 276.8 671.1 278.57 cv
668.47 278.9 665.78 279.23 663.02 279.6 cv
660.77 279.91 658.59 280.26 656.48 280.61 cv
648.34 281.93 641.32 283.07 637.53 280.18 cv
635.43 278.58 634.17 275.61 633.68 271.12 cv
633.55 269.92 633.44 268.77 633.33 267.66 cv
632.14 255.57 631.35 247.59 615.88 239.96 cv
612.35 238.22 608.59 237.1 605.26 236.1 cv
600.73 234.74 596.45 233.46 595.64 231.36 cv
595.12 230.02 595.8 227.74 597.6 224.77 cv
601.94 217.61 607.14 212.04 612.66 206.14 cv
621.45 196.73 630.53 187.02 636.22 170.32 cv
643.51 177.06 652.72 180.77 662.38 180.77 cv
664.08 180.77 665.79 180.65 667.51 180.42 cv
676.07 179.26 683.45 175.36 688.24 169.74 cv
701.38 187.1 737.59 187.06 759.73 187.01 cv
762.1 187.01 764.29 187 766.25 187.02 cv
766.58 187.03 766.92 187.03 767.24 187.03 cv
774.48 187.03 779.03 186.2 782.06 184.29 cv
783.14 184.61 784.24 184.86 785.33 185.11 cv
791.15 186.44 794.35 187.18 792.6 195.21 cv
cp
626.99 271.45 mo
624.84 268.33 622.39 264.79 615.99 263.77 cv
613.48 263.37 611.06 264.17 608.72 264.93 cv
606.82 265.55 605.02 266.14 603.49 265.99 cv
600.51 265.69 595.47 263.78 590.01 260.87 cv
586.17 258.82 583.06 256.17 579.77 253.37 cv
576.93 250.94 573.99 248.44 570.54 246.35 cv
568.47 245.1 566.2 244.21 564 243.35 cv
561.16 242.24 558.47 241.2 556.91 239.61 cv
555.37 238.05 553.81 235.11 552.16 232 cv
550.09 228.1 547.74 223.68 544.69 220.63 cv
542.27 218.21 539.27 215.81 536.09 213.27 cv
527.97 206.78 518.84 199.49 518.27 190.58 cv
524.64 189.06 526.66 178.07 528.62 167.39 cv
529.41 163.06 530.23 158.61 531.27 155.55 cv
536.23 153.99 539.73 155.6 544.12 157.64 cv
546.53 158.76 549.01 159.91 551.96 160.65 cv
554.65 161.32 557.2 161.59 559.69 161.59 cv
564.24 161.59 568.57 160.7 573.06 159.77 cv
575.09 159.36 li
589.93 156.37 611.44 153 626.82 158.2 cv
626.84 158.2 626.86 158.21 626.88 158.21 cv
627.96 160.18 629.3 162.26 630.92 164.44 cv
631.37 165.04 631.83 165.61 632.3 166.18 cv
627.03 183.44 617.87 193.25 609 202.73 cv
603.56 208.55 597.93 214.57 593.33 222.18 cv
590.58 226.71 589.83 230.2 590.97 233.15 cv
592.66 237.54 597.84 239.09 603.83 240.89 cv
607.12 241.87 610.52 242.89 613.67 244.45 cv
626.65 250.84 627.18 256.27 628.36 268.15 cv
628.47 269.27 628.58 270.44 628.71 271.66 cv
628.81 272.56 628.95 273.41 629.1 274.23 cv
628.34 273.39 627.68 272.45 626.99 271.45 cv
cp
621.52 567.24 mo
621.64 563.85 621.71 560.39 621.77 557.03 cv
622.05 543.07 622.32 528.76 626.9 515.9 cv
628.42 511.61 630.42 507.48 633.06 503.59 cv
635.18 500.45 638.51 496.69 642.3 496.63 cv
646.21 496.61 649.8 500.44 652.13 503.69 cv
652.4 504.05 652.74 504.31 653.12 504.48 cv
652.23 505.05 651.33 505.61 650.45 506.15 cv
645.01 509.52 639.81 512.74 637.95 517.07 cv
637.89 517.21 637.83 517.35 637.78 517.49 cv
637.47 518.33 637.28 519.21 637.24 520.14 cv
637.05 524.65 640.38 529.29 647.71 534.74 cv
651.19 537.32 655.75 537.63 659.77 537.91 cv
662.24 538.08 664.79 538.25 665.78 538.97 cv
667.31 540.07 668.49 544.02 669.54 547.51 cv
670.81 551.73 672.12 556.09 674.61 559.13 cv
677.31 562.42 681.24 564.62 685.04 566.74 cv
690.11 569.56 694.49 572.01 695.15 576.22 cv
695.19 576.69 694.98 578.51 694.8 580.12 cv
693.86 588.4 692.08 604.15 699.11 611.3 cv
689.49 615.69 682.46 629.77 678.12 638.45 cv
677.28 640.14 676.55 641.6 675.91 642.79 cv
667.34 658.67 653.21 677.66 634.31 678.96 cv
627.04 642.79 620.22 602.05 621.52 567.24 cv
cp
659.08 506.56 mo
668.92 521.8 678.56 528.15 687.81 525.45 cv
689.92 530.91 693.68 535.33 698.62 538.07 cv
702.89 540.45 707.77 541.44 712.75 540.99 cv
712.74 541.02 712.72 541.05 712.71 541.08 cv
708.31 549.18 704.84 555.58 712.42 569.1 cv
713.79 571.56 715.9 574.04 718.13 576.68 cv
724.91 584.68 728.99 590.38 724.22 596.46 cv
723.56 597.29 723.5 598.44 724.07 599.34 cv
724.64 600.23 725.7 600.68 726.74 600.44 cv
735.05 598.54 739.04 602.69 744.58 608.44 cv
744.97 608.85 745.36 609.26 745.76 609.67 cv
737.46 612.8 733.94 619.69 730.79 625.88 cv
727.16 632.99 723.73 639.7 713.68 641.85 cv
713.4 641.91 713.14 642.03 712.91 642.17 cv
708.05 633.87 709.61 626.35 712.73 614.29 cv
713.04 613.12 712.46 611.9 711.36 611.39 cv
709.73 610.65 708.16 610.22 706.63 610.04 cv
706.38 609.85 706.09 609.7 705.77 609.61 cv
696.77 607.06 698.87 588.58 699.77 580.68 cv
700.1 577.75 700.24 576.42 700.1 575.49 cv
699.05 568.83 693.17 565.54 687.48 562.37 cv
684.09 560.48 680.58 558.52 678.48 555.96 cv
676.62 553.69 675.46 549.82 674.33 546.07 cv
672.93 541.41 671.61 537 668.71 534.91 cv
666.55 533.36 663.42 533.15 660.11 532.92 cv
656.78 532.69 652.99 532.43 650.69 530.73 cv
645.05 526.53 642.12 522.95 642.23 520.35 cv
642.38 517.03 647.57 513.81 653.08 510.41 cv
655.06 509.18 657.09 507.93 659.08 506.56 cv
cp
753.15 653.6 mo
755.73 657.47 755.43 659.21 754.77 663.03 cv
754.41 665.1 753.96 667.68 753.95 671.12 cv
753.93 678.54 755.9 685.09 758.75 691.67 cv
758.94 692.11 759.13 692.54 759.33 692.98 cv
760.38 695.31 761.53 697.64 762.73 700.03 cv
770.35 715.18 774.86 725.31 771.85 741.93 cv
770.66 748.54 769.12 750.18 768.31 750.56 cv
766.95 751.21 764.1 749.65 761.35 748.13 cv
757.2 745.85 752.17 743.09 746.56 744.04 cv
747.72 740.61 748.35 736.88 748.91 733.61 cv
749.2 731.9 749.48 730.29 749.79 728.87 cv
752.69 715.83 752.19 704.42 748.14 694.17 cv
747.95 693.69 747.76 693.22 747.55 692.75 cv
744.51 685.69 739.74 679.16 733.21 673.02 cv
727.18 667.35 726.76 666.34 724.75 661.47 cv
724.37 660.54 723.93 659.49 723.41 658.27 cv
723.26 657.94 723.3 657.62 723.43 656.78 cv
723.63 655.53 723.93 653.65 722.77 651.42 cv
721.92 649.77 720.12 648.89 718.39 648.04 cv
717.63 647.66 716.48 647.1 716.2 646.77 cv
716.11 646.66 716.02 646.55 715.93 646.44 cv
721.68 644.96 725.6 642.18 728.54 638.85 cv
728.69 638.87 728.85 638.88 729.02 638.86 cv
734.07 638.46 749.22 647.71 753.15 653.6 cv
cp
777.49 783.15 mo
774.44 788.9 771.83 795.54 769.3 801.97 cv
765.35 812.04 761.27 822.42 755.3 830.17 cv
754 828.97 753.46 827.22 752.76 824.65 cv
751.81 821.16 750.63 816.83 745.59 814.54 cv
745.83 812.77 745.63 810.97 745.45 809.4 cv
745.26 807.79 745.08 806.26 745.39 805.25 cv
745.75 804.11 747.41 801.94 748.75 800.2 cv
751.04 797.23 752.45 795.31 752.65 793.49 cv
752.94 790.95 751.57 788.63 750.25 786.39 cv
749.31 784.78 748.33 783.12 748.25 781.79 cv
748.12 779.58 749.26 777.13 750.36 774.76 cv
751.55 772.19 752.79 769.53 752.61 766.8 cv
752.07 758.43 746.28 755.58 740.01 753.45 cv
741.64 752.43 742.96 751.05 744.02 749.44 cv
744.55 749.62 745.14 749.63 745.71 749.42 cv
750.22 747.71 754.65 750.15 758.94 752.51 cv
760.62 753.44 762.26 754.33 763.87 754.94 cv
766 756.7 768.04 758.29 769.85 759.69 cv
780.22 767.71 784.1 770.71 777.49 783.15 cv
cp
740.62 803.79 mo
740 805.8 740.24 807.92 740.48 809.97 cv
740.73 812.14 740.96 814.19 740.07 815.42 cv
738.78 817.19 737.25 818.08 735.26 818.19 cv
735.1 818.2 734.95 818.2 734.79 818.2 cv
724.79 818.2 708.77 800.79 701.87 793.29 cv
700.93 792.26 700.12 791.39 699.47 790.7 cv
671.31 761.08 655.9 737.35 640.77 698.91 cv
649.19 707.21 659.15 713.4 668.87 719.43 cv
674.61 723 680.54 726.68 685.91 730.68 cv
700.31 741.41 714.5 749.3 730.55 755.52 cv
732.35 756.22 734.15 756.8 735.88 757.36 cv
743.34 759.75 747.25 761.27 747.62 767.12 cv
747.72 768.58 746.8 770.56 745.83 772.65 cv
744.52 775.45 743.05 778.62 743.26 782.1 cv
743.41 784.62 744.76 786.91 745.94 788.92 cv
746.81 790.39 747.78 792.05 747.69 792.87 cv
747.51 793.61 745.88 795.74 744.79 797.15 cv
742.96 799.53 741.23 801.78 740.62 803.79 cv
cp
635.48 684.72 mo
635.42 684.45 635.37 684.18 635.31 683.91 cv
656.14 682.09 671.23 661.98 680.31 645.17 cv
680.99 643.91 681.73 642.41 682.6 640.68 cv
689.42 627.01 697.46 612.85 707.33 615.26 cv
703.86 629.01 702.67 638.43 712.37 649.98 cv
713.33 651.12 714.78 651.83 716.19 652.53 cv
716.91 652.88 718.11 653.47 718.33 653.72 cv
718.71 654.46 718.66 654.95 718.49 656 cv
718.32 657.08 718.09 658.57 718.82 660.25 cv
719.33 661.45 719.76 662.47 720.13 663.38 cv
722.38 668.83 723.24 670.51 729.79 676.67 cv
744.73 690.71 749.54 706.96 744.91 727.79 cv
744.57 729.33 744.28 731 743.98 732.77 cv
742.35 742.32 740.58 749.67 734.02 750.26 cv
733.44 750.31 732.93 750.56 732.54 750.93 cv
732.48 750.91 732.42 750.89 732.35 750.86 cv
716.74 744.81 702.93 737.12 688.9 726.67 cv
683.36 722.54 677.33 718.8 671.51 715.19 cv
658.26 706.96 644.56 698.44 635.48 684.72 cv
cp
514.94 757.8 mo
515.18 757.55 515.37 757.25 515.48 756.91 cv
528.83 717.03 532.85 688.88 532.85 668.26 cv
537.93 701.49 533.36 735.95 518.85 774.69 cv
517.84 769.38 516.56 763.69 514.94 757.8 cv
cp
520.9 923.01 mo
520.24 924.65 518.78 925.76 516.61 927.31 cv
514.34 928.93 511.65 930.86 510.36 934.2 cv
507.17 933.11 504.07 934.39 501.56 935.42 cv
500.06 936.04 498.66 936.6 497.59 936.6 cv
496.39 936.57 493.85 935.56 491.81 934.74 cv
488.33 933.36 486.1 932.52 484.29 932.82 cv
481.77 933.24 479.91 935.19 478.11 937.07 cv
476.82 938.41 475.49 939.81 474.24 940.25 cv
472.15 940.98 469.48 940.55 466.89 940.14 cv
464.1 939.69 461.21 939.22 458.62 940.14 cv
450.71 942.94 449.55 949.29 449.21 955.9 cv
447.79 954.61 446.1 953.72 444.26 953.14 cv
444.29 952.58 444.14 952 443.78 951.52 cv
441.5 948.43 441.76 944.68 442.51 940.87 cv
448.54 923.74 451.97 916.26 469.11 918.55 cv
475.55 919.41 482.69 919.55 489.6 919.69 cv
500.41 919.89 511.57 920.11 520.9 923.01 cv
cp
433.92 923.21 mo
436.24 919.57 438.52 915.95 440.77 912.34 cv
441.27 913.68 441.65 914.97 442.06 916.38 cv
442.64 918.39 443.3 920.67 444.48 923.43 cv
444.5 923.48 444.53 923.51 444.55 923.55 cv
443.96 924.52 443.39 925.55 442.85 926.63 cv
442.73 926.47 442.61 926.31 442.48 926.16 cv
440.8 924.25 438.08 923.3 433.92 923.21 cv
cp
367.7 592.62 mo
365.68 594.99 365.17 598.03 364.68 600.98 cv
364.35 602.94 364.04 604.79 363.32 606.22 cv
357.85 617.04 347.77 625.11 336.37 627.81 cv
334.66 628.22 332.24 628.33 329.67 628.46 cv
325.71 628.65 321.61 628.85 318.65 630.17 cv
314.7 631.93 310.94 637.22 306.96 642.82 cv
302.98 648.43 298.03 655.41 294.59 655.41 cv
293.53 655.4 292.41 654.58 291.27 652.97 cv
289.69 650.73 290.16 641.62 290.47 635.59 cv
290.7 631.08 290.9 627.19 290.57 624.66 cv
289.82 618.88 288.6 613.16 287.42 607.63 cv
286.51 603.4 285.58 599.02 284.87 594.67 cv
282.68 581.18 279.67 562.71 284.5 548.59 cv
284.51 548.56 284.51 548.53 284.52 548.5 cv
286.15 548.21 287.81 547.81 289.51 547.26 cv
297.08 544.85 304.71 540.1 311.32 534.2 cv
312.75 535 314.13 536 315.56 537.03 cv
317.82 538.66 320.14 540.34 322.9 541.45 cv
329.91 544.27 336.27 543.44 342.43 542.64 cv
345.42 542.25 348.52 541.85 351.73 541.85 cv
372.77 541.85 380.73 551.63 391.75 565.17 cv
393.36 567.15 395.02 569.18 396.77 571.25 cv
394.46 573.45 392.6 575.47 390.96 577.25 cv
387.43 581.08 384.65 584.1 379.13 587.27 cv
378.54 587.61 377.73 587.73 376.69 587.9 cv
374.27 588.27 370.97 588.78 367.7 592.62 cv
cp
285.42 652.64 mo
282.31 655.68 277.19 658.28 272.06 659.44 cv
266.31 660.73 262.38 658.15 257.82 655.17 cv
253.79 652.53 249.62 649.83 244.05 649.97 cv
243.25 650 242.5 650.41 242.06 651.08 cv
241.61 651.76 241.51 652.6 241.8 653.36 cv
241.96 653.79 242.05 654.84 242.13 655.68 cv
242.16 655.99 242.19 656.3 242.22 656.62 cv
223.8 661.83 198.58 651.96 182.41 640.17 cv
177.36 636.49 175.95 633.28 173.99 628.84 cv
172.9 626.37 171.67 623.56 169.62 620.31 cv
168.74 618.92 167.87 617.65 167.03 616.43 cv
163.38 611.13 160.96 607.63 163.01 600.93 cv
163.11 600.61 163.14 600.29 163.11 599.99 cv
169.21 598.26 175.37 597.49 181.78 596.69 cv
188.92 595.8 196.31 594.89 203.7 592.5 cv
223.8 586.01 255.04 563.62 268.48 546.32 cv
271.63 548.05 275.23 548.93 279.17 548.96 cv
274.82 563.91 277.75 582.06 279.93 595.47 cv
280.66 599.94 281.61 604.38 282.53 608.68 cv
283.69 614.11 284.89 619.72 285.61 625.3 cv
285.88 627.38 285.69 631.25 285.47 635.33 cv
285.09 642.8 284.9 648.5 285.77 652.37 cv
285.65 652.45 285.53 652.54 285.42 652.64 cv
cp
154.95 597.51 mo
154.48 595.17 154.03 592.83 153.6 590.53 cv
151.98 582.05 150.31 573.27 147.61 564.8 cv
147.01 562.91 146.28 560.95 145.51 558.87 cv
143.2 552.65 140.58 545.59 141.37 539.7 cv
141.76 536.81 142.4 535.83 143.08 534.8 cv
143.59 534.02 144.18 533.13 144.6 531.73 cv
147.65 521.5 145.58 512.47 143.39 502.9 cv
142.1 497.25 140.76 491.42 140.52 485.18 cv
139.89 468.78 143.98 442.44 154.91 433.19 cv
161.69 436.1 167.36 428.46 172.4 421.67 cv
175.97 416.87 180 411.44 183.45 411.03 cv
189.81 410.28 198.7 418.49 204.02 423.38 cv
204.21 423.56 204.39 423.73 204.58 423.9 cv
200.06 426.61 195.19 426.93 189.36 423.38 cv
188.3 422.73 186.92 422.96 186.13 423.92 cv
185.5 424.68 185.4 425.72 185.79 426.57 cv
185.79 426.69 185.78 426.89 185.75 427.2 cv
185.46 429.88 184.33 432.49 182.48 434.75 cv
176.09 442.57 172.36 450.25 169.61 461.26 cv
169.46 461.85 169.28 462.51 169.1 463.2 cv
167.84 467.88 166.13 474.28 167.82 478.86 cv
168.7 481.23 171.05 482.05 172.93 482.72 cv
173.6 482.96 174.7 483.34 175 483.63 cv
176.25 487.72 174.08 492.24 171.79 497.02 cv
169.04 502.78 166.19 508.73 168.9 514.85 cv
174.8 528.14 194.33 525.79 215.02 523.29 cv
231.57 521.29 248.69 519.23 256.72 525.88 cv
257.14 526.23 257.64 526.41 258.15 526.44 cv
257.71 532.26 259.08 537.82 263.35 542.34 cv
263.7 542.71 264.07 543.04 264.44 543.38 cv
251.49 560.01 221.49 581.51 202.16 587.75 cv
195.23 589.98 188.07 590.87 181.16 591.73 cv
172.6 592.8 163.77 593.9 154.95 597.51 cv
cp
222.25 412.38 mo
223.49 410.69 224.67 409.1 225.77 407.73 cv
235.06 396.2 253.49 380.09 268.25 373.09 cv
275 369.89 280.75 369.9 285.82 373.11 cv
300.69 382.51 307.75 418.87 309.87 454.34 cv
309.65 457.13 309.7 459.92 310.14 462.67 cv
310.17 462.87 310.23 463.06 310.3 463.24 cv
310.5 468.35 310.59 473.4 310.59 478.29 cv
310.59 478.41 310.61 478.53 310.62 478.65 cv
294.78 475.55 281.4 486.88 277.05 491.12 cv
270.65 497.37 261.79 509.45 258.97 521.3 cv
249.08 514.14 231.47 516.27 214.42 518.33 cv
196.45 520.5 177.87 522.74 173.47 512.82 cv
171.69 508.81 173.93 504.13 176.3 499.18 cv
178.8 493.96 181.64 488.04 179.74 482.04 cv
178.95 479.54 176.44 478.65 174.6 478.01 cv
173.89 477.76 172.71 477.34 172.51 477.12 cv
171.37 474.04 172.91 468.3 173.93 464.5 cv
174.12 463.77 174.3 463.09 174.46 462.47 cv
177.02 452.24 180.46 445.12 186.35 437.92 cv
188.41 435.4 189.8 432.53 190.43 429.52 cv
205.18 435.59 215.35 421.76 222.25 412.38 cv
cp
215.87 400.08 mo
210.03 393.49 206.82 389.86 213.73 382.3 cv
219.3 376.2 226.64 375.07 234.41 373.87 cv
241.02 372.85 247.85 371.79 253.84 367.61 cv
254.74 366.99 255.24 366.02 255.86 364.79 cv
256.53 363.48 257.36 361.85 258.54 361.09 cv
262.76 358.36 266.24 358.45 271.52 358.56 cv
271.94 358.57 li
274.28 358.62 276.66 359.16 279.03 359.92 cv
279.18 359.97 279.33 360.02 279.48 360.07 cv
279.62 360.12 279.77 360.16 279.92 360.22 cv
281.99 360.93 284.06 361.8 286.1 362.65 cv
290.59 364.52 295.22 366.46 299.82 366.71 cv
304.78 366.99 308.23 366.44 311.27 365.96 cv
315.55 365.28 318.94 364.74 325.44 366.73 cv
329.97 368.12 334.42 368.75 338.71 369.35 cv
341.27 369.71 343.69 370.05 345.95 370.54 cv
352.48 371.93 357.81 371.96 362.1 371.99 cv
366.48 372.02 369.65 372.05 371.13 373.58 cv
372.42 374.92 373.1 377.86 373.2 382.69 cv
363.7 378.26 362.74 378.72 353.38 386.08 cv
353.26 386.17 li
344.42 393.12 336.41 401.55 330.1 410.56 cv
325.33 417.36 318.13 427.63 313.7 438.89 cv
310.95 411.03 304.31 378.89 288.49 368.88 cv
285.44 366.95 282.17 365.9 278.7 365.73 cv
278.34 365.71 277.98 365.7 277.62 365.7 cv
273.98 365.7 270.13 366.66 266.1 368.57 cv
250.7 375.88 231.52 392.62 221.88 404.59 cv
221.51 405.04 221.14 405.52 220.77 406 cv
219.18 403.81 217.44 401.86 215.87 400.08 cv
cp
390.24 402.04 mo
395.38 407.67 400.69 413.5 410.01 416.72 cv
417.09 419.17 417.13 419.24 419.29 422.84 cv
420.11 424.21 421.24 426.09 423.02 428.63 cv
427.28 434.68 432.62 438.69 438.29 442.29 cv
431.33 448.94 432.53 457.43 433.68 465.66 cv
433.82 466.62 433.96 467.6 434.08 468.58 cv
429.69 468.38 425.47 469.28 421.37 470.16 cv
416.94 471.11 412.74 472.01 408.68 471.43 cv
405.82 471.03 403.24 469.64 400.51 468.17 cv
397.63 466.63 394.66 465.03 390.99 464.3 cv
376.1 461.3 364.92 468.74 354.12 475.94 cv
345.09 481.95 336.56 487.62 326.39 486.91 cv
326.29 486.9 326.19 486.91 326.09 486.92 cv
324.94 485.64 323.59 484.48 322.03 483.44 cv
319.66 481.88 317.31 480.72 315 479.88 cv
315.36 479.45 315.59 478.9 315.59 478.29 cv
315.59 472.88 315.47 464.33 314.89 454.31 cv
316.3 438.97 327.65 422.76 334.19 413.43 cv
340.23 404.82 347.89 396.75 356.35 390.1 cv
356.47 390.02 li
360.45 386.89 362.64 385.17 364.18 384.89 cv
365.51 384.66 367.17 385.39 371.14 387.24 cv
372.82 388.02 li
380.82 391.71 385.61 396.96 390.24 402.04 cv
cp
438.05 495.04 mo
439.01 503.63 431.77 513.83 425.95 522.03 cv
424.6 523.94 423.32 525.74 422.21 527.43 cv
421.73 528.15 421.67 529.08 422.05 529.87 cv
422.42 530.66 423.19 531.2 424.06 531.29 cv
424.27 531.31 424.88 531.53 425.33 531.68 cv
425.75 531.83 426.2 531.99 426.69 532.13 cv
423.77 540.71 408.72 563.14 401.68 569.3 cv
399.54 566.83 397.56 564.39 395.62 562.01 cv
384.64 548.51 375.15 536.85 351.74 536.85 cv
348.19 536.85 344.93 537.27 341.78 537.68 cv
335.76 538.47 330.56 539.15 324.77 536.82 cv
322.58 535.93 320.59 534.5 318.49 532.98 cv
317.39 532.18 316.25 531.37 315.07 530.62 cv
323.31 522.19 329.36 512.1 330.59 503.15 cv
331.17 498.99 330.73 495.22 329.33 491.93 cv
339.72 491.51 348.44 485.73 356.89 480.1 cv
367.31 473.16 377.14 466.61 390 469.2 cv
392.94 469.79 395.47 471.15 398.14 472.58 cv
401.14 474.19 404.24 475.85 407.97 476.38 cv
412.92 477.08 417.75 476.05 422.42 475.05 cv
424.1 474.69 425.75 474.34 427.37 474.07 cv
427.42 474.81 427.79 475.51 428.41 475.95 cv
430.13 477.88 437.67 491.62 438.05 495.04 cv
cp
374.01 221.12 mo
393.5 232.75 409.69 258.03 414.31 284.03 cv
416.68 297.42 416.23 315.57 409.64 323.77 cv
407.27 326.73 404.27 328.24 400.49 328.4 cv
381.5 329.21 361.78 306.83 349.69 285.65 cv
340.87 270.21 325.55 243.35 329.55 221.12 cv
329.83 220.18 330.11 219.24 330.41 218.31 cv
330.53 218.18 330.64 218.05 330.73 217.9 cv
331.02 217.42 331.13 216.88 331.08 216.36 cv
331.63 214.75 332.22 213.15 332.84 211.56 cv
344.94 208.83 358.79 212.04 374.01 221.12 cv
cp
394.02 334.8 mo
394.58 339.85 393.86 343.3 391.89 345.05 cv
388.12 348.41 379.36 346.39 371.62 344.61 cv
369.78 344.18 368 343.78 366.3 343.44 cv
366.47 342.89 366.45 342.29 366.21 341.74 cv
363.79 336.01 359.29 331.1 354.94 326.36 cv
352.04 323.2 349.31 320.21 347.21 317.07 cv
338.75 304.39 331.33 288.38 327.35 274.25 cv
324.64 264.64 324.02 253.41 325.31 241.75 cv
328.97 259.42 338.84 276.74 345.34 288.13 cv
351.08 298.18 370.55 329.11 394.52 333.01 cv
394.15 333.5 393.95 334.14 394.02 334.8 cv
cp
349.01 341.01 mo
330.13 332.38 311.17 290.44 308.56 275.76 cv
305.68 259.58 307.53 246.47 314.39 234.51 cv
316.65 230.57 319.96 227.05 323.16 223.65 cv
323.38 223.42 323.59 223.19 323.81 222.95 cv
318.81 241.5 318.26 260.4 322.54 275.61 cv
326.65 290.22 334.32 306.75 343.05 319.84 cv
345.36 323.3 348.36 326.57 351.26 329.74 cv
354.74 333.54 358.32 337.45 360.59 341.59 cv
356.95 343.09 353.14 342.89 349.01 341.01 cv
cp
302.36 120.67 mo
299.07 121.47 295.71 122.35 292.47 123.21 cv
274.46 127.93 255.84 132.81 237.98 126.92 cv
237.69 126.82 237.39 126.72 237.09 126.61 cv
242.43 124.95 247.3 120.38 249.18 118.47 cv
249.71 118.56 250.24 118.62 250.77 118.62 cv
251.43 118.62 252.09 118.54 252.76 118.39 cv
257.15 117.34 260.71 112.87 263.95 104.33 cv
265.49 100.28 264.55 95.8101 263.71 91.8599 cv
263.2 89.4399 262.67 86.9399 263.09 85.79 cv
263.73 84.02 267.22 81.7998 270.29 79.8398 cv
274 77.48 277.84 75.0298 280.08 71.7998 cv
282.51 68.2998 283.55 63.9199 284.56 59.6899 cv
285.9 54.04 287.05 49.1602 290.93 47.3799 cv
291.37 47.21 293.18 46.9199 294.77 46.6499 cv
303 45.2998 318.64 42.7197 323.6 34.0098 cv
330.44 42.0601 345.91 44.9897 355.44 46.79 cv
357.3 47.1499 358.91 47.4502 360.22 47.7397 cv
377.83 51.6602 399.96 60.0698 406.37 77.9101 cv
373.55 94.7598 336.2 112.43 302.36 120.67 cv
cp
232.84 122.21 mo
231.44 122.08 230.36 121.35 229.43 119.92 cv
229.21 119.58 228.92 119.32 228.59 119.13 cv
228.03 115.57 230.55 111.46 232.87 108.54 cv
233.15 108.19 233.3 107.79 233.37 107.37 cv
234.15 108.08 234.93 108.79 235.7 109.49 cv
238.57 112.11 241.35 114.65 244.14 116.39 cv
240.7 119.55 236.19 122.53 232.84 122.21 cv
cp
452.26 894.47 mo
452.15 894.29 452.02 894.13 451.88 893.99 cv
461.17 878.25 469.64 862.81 477.21 847.8 cv
481.76 859.88 486.82 870.55 492.36 879.56 cv
492.37 879.59 492.4 879.61 492.42 879.63 cv
489.31 891.16 485.44 902.91 480.74 914.45 cv
476.93 914.3 473.26 914.06 469.77 913.6 cv
466.23 913.13 463.16 913.05 460.46 913.32 cv
458.5 904.85 454.78 898.66 452.26 894.47 cv
cp
495.04 764.96 mo
490.91 776.05 486.91 785.02 481.61 795.98 cv
475.08 765.91 471.77 734.4 470.14 707.8 cv
483.38 724.33 490.12 744.36 495.04 764.96 cv
cp
486.62 816.33 mo
485.47 812.19 484.39 808 483.38 803.76 cv
488.91 792.51 493.05 783.68 497.03 773.7 cv
497.93 777.84 498.79 781.98 499.63 786.11 cv
499.4 786.35 499.21 786.63 499.08 786.96 cv
495.27 796.65 491.8 804.86 486.62 816.33 cv
cp
501.29 794.92 mo
503.21 808.41 502.53 828.3 498.74 850.75 cv
494.97 842.27 491.67 833.18 488.77 823.7 cv
494.14 811.94 497.76 803.63 501.29 794.92 cv
cp
469.71 602.9 mo
470.19 583.72 474.93 561.41 483.79 536.55 cv
487.78 545.78 492.15 555.17 496.91 564.77 cv
495.48 570.99 li
487.12 607.46 479.2 642.01 478.48 689.16 cv
475.6 685.75 472.65 682.52 469.66 679.5 cv
469.7 679.32 469.72 679.14 469.71 678.95 cv
468.67 644.23 469.43 614.21 469.71 602.9 cv
cp
511.63 637.98 mo
516.01 670.42 514.14 700.46 505.73 732 cv
505.65 731.82 505.57 731.63 505.48 731.44 cv
501.89 723.61 497.55 715.83 492.73 708.39 cv
492.76 651.85 495.61 634.37 503.04 600.29 cv
503.51 602.04 503.99 603.78 504.46 605.47 cv
507.24 615.46 509.86 624.9 511.63 637.98 cv
cp
509.38 419.13 mo
507.35 398.85 503.67 379.24 499.81 358.73 cv
498.67 352.65 497.48 346.35 496.36 340.1 cv
494.24 328.3 490.61 311.26 488.18 300.7 cv
493.31 290.27 498.81 281.16 506.76 272.38 cv
519.15 315.74 520.04 364.87 509.38 419.13 cv
cp
494.05 510.76 mo
494.03 510.99 494.02 511.23 494 511.47 cv
493.96 511.37 493.91 511.28 493.86 511.18 cv
493.92 511.04 493.99 510.9 494.05 510.76 cv
cp
495.37 463.34 mo
491.81 470.93 487.83 478.43 483.61 486.38 cv
483.06 487.41 li
474.26 464.46 468.69 437.21 465.78 403.29 cv
464.35 386.71 470.61 352.67 477.97 327.57 cv
482.76 350.24 488.24 382.02 494.29 422.27 cv
496.12 434.44 495.79 447.11 495.46 459.37 cv
495.36 463.17 li
495.36 463.23 495.37 463.28 495.37 463.34 cv
cp
503.99 529.83 mo
504 530.2 504.09 530.54 504.24 530.85 cv
504.08 531.56 503.92 532.25 503.76 532.93 cv
502.07 529.09 500.36 525.23 498.61 521.35 cv
498.7 511.61 499.64 502.65 501.4 494.71 cv
502.05 493.33 502.71 491.95 503.39 490.57 cv
504 489.32 504.58 488.08 505.17 486.84 cv
503.94 503.45 503.69 514.4 503.99 529.83 cv
cp
529.67 229.09 mo
532.17 216.54 li
532.44 216.76 532.7 216.97 532.97 217.18 cv
535.36 219.09 537.64 220.92 539.58 222.68 cv
539.51 222.72 539.43 222.75 539.36 222.79 cv
536.05 224.79 532.82 226.9 529.67 229.09 cv
cp
424.73 71.8101 mo
444.43 56.98 459.17 43.54 472.17 28.0298 cv
476.25 51.8198 492.37 96.8198 505.43 119.78 cv
505.68 120.22 506.04 120.54 506.46 120.76 cv
505.7 124.26 504.6 127.99 503.44 131.91 cv
499.27 145.99 494.55 161.95 504.86 173.18 cv
507.59 176.15 510.57 177.17 512.96 177.99 cv
516.38 179.16 517.53 179.56 516.64 185.54 cv
516.63 185.6 516.64 185.66 516.63 185.72 cv
516.5 185.73 516.36 185.73 516.22 185.71 cv
515.54 185.6 514.84 185.77 514.29 186.2 cv
513.74 186.62 513.39 187.25 513.33 187.94 cv
512.81 193.43 514.62 198.21 517.63 202.49 cv
517.24 202.86 516.95 203.36 516.86 203.94 cv
512.22 235.02 li
507 223.88 500.93 212.21 494.01 199.51 cv
486.2 185.17 475.47 173.02 465.09 161.27 cv
455.19 150.07 444.95 138.48 437.34 125.06 cv
430.03 112.15 418.8 88.27 424.73 71.8101 cv
cp
512.65 107.21 mo
512.7 99.9697 512.74 93.7197 517.4 87.2798 cv
522.36 80.4199 529.44 72.8799 535.4 70.7002 cv
536.11 72.9302 537.15 75.1499 538.54 77.3398 cv
538.58 77.4101 538.64 77.46 538.69 77.5298 cv
535.51 79.5601 532.32 81.8301 529.47 85.1299 cv
516.03 100.68 520.01 116.94 523.85 132.66 cv
525.37 138.84 526.91 145.21 527.47 151.62 cv
525.79 155.14 524.77 160.65 523.7 166.49 cv
523.04 170.11 522.22 174.56 521.16 178.28 cv
519.99 175.42 517.52 174.27 514.58 173.26 cv
512.53 172.56 510.41 171.83 508.54 169.79 cv
500.15 160.66 504.26 146.76 508.23 133.33 cv
509.73 128.27 511.14 123.49 511.91 118.96 cv
512.61 114.84 512.63 110.96 512.65 107.21 cv
cp
540.25 57.8701 mo
542.76 50.25 550 43.2998 558.41 37.75 cv
558.62 37.6499 558.82 37.5298 558.99 37.3701 cv
564.75 33.6299 571.02 30.5498 576.67 28.3501 cv
578.55 27.6099 li
592.36 22.2197 601.49 18.6499 615.78 17.77 cv
622.32 17.3701 628.51 13.5498 635.05 9.50976 cv
645.08 3.31982 654.56 -2.53027 665.01 3.7998 cv
666 4.3999 667.02 5.93994 668.09 7.56006 cv
669.51 9.71973 671.11 12.1499 673.51 13.75 cv
677.74 16.5698 682.85 17.71 687.78 18.8101 cv
689.45 19.1899 691.03 19.54 692.53 19.9502 cv
693.75 20.2798 694.95 20.54 696.12 20.7998 cv
701.41 21.96 704.14 22.7397 704.78 26.4302 cv
703.21 26.6201 701.67 26.9502 700.2 27.2798 cv
698.07 27.75 695.86 28.23 693.71 28.25 cv
689.68 28.2798 685.14 26.8701 680.72 25.5 cv
672.41 22.9199 662.99 20 656.69 27.4302 cv
649.95 35.3901 649.01 52.8101 648.18 68.1802 cv
647.85 74.2798 647.54 80.0298 646.87 83.9502 cv
646.35 87 645.72 90.0898 645.06 93.3599 cv
643.09 103.16 641.05 113.26 641.65 123.02 cv
640.65 123.33 639.67 123.67 638.71 124.06 cv
631.63 112.39 629.38 100.49 627.01 87.8999 cv
625.63 80.5298 624.19 72.9199 621.72 65.1201 cv
621.31 63.8301 620.7 61 619.98 57.71 cv
616.27 40.73 613.83 32.3301 610.02 30.52 cv
601.17 26.3101 587.79 37.75 575.95 48.79 cv
574.67 49.9897 573.56 51.02 572.77 51.71 cv
571.75 52.5898 570.88 53.4102 570.04 54.2002 cv
568.36 55.79 567 57.0698 565.11 58.2397 cv
564.84 58.1001 564.49 57.8901 564.26 57.7397 cv
563.16 57.0601 561.31 55.9199 559.53 57.1001 cv
556.09 59.3701 554.59 62.0801 553.27 64.48 cv
552.5 65.8799 551.77 67.2002 550.67 68.4897 cv
548.39 71.1499 545.72 73.0498 542.87 74.8799 cv
542.84 74.8101 542.81 74.7397 542.77 74.6802 cv
539.21 69.0298 538.38 63.5298 540.25 57.8701 cv
cp
624.23 152.29 mo
608.26 148.47 588.24 151.61 574.1 154.46 cv
572.05 154.88 li
565.41 156.24 559.67 157.42 553.17 155.8 cv
550.68 155.18 548.42 154.13 546.23 153.11 cv
542.11 151.19 537.88 149.22 532.37 150.14 cv
531.71 143.73 530.19 137.51 528.71 131.47 cv
524.84 115.66 521.5 102 533.25 88.3999 cv
536.25 84.9399 539.74 82.75 543.45 80.4302 cv
547.23 78.0698 551.14 75.6201 554.47 71.7397 cv
555.9 70.0601 556.83 68.3799 557.65 66.8901 cv
558.73 64.9199 559.62 63.3101 561.44 61.8799 cv
561.51 61.9199 561.58 61.96 561.63 62 cv
562.9 62.7798 565.02 64.0801 567.14 62.8501 cv
569.79 61.3101 571.58 59.6201 573.47 57.8398 cv
574.28 57.0801 575.1 56.2998 576.05 55.48 cv
576.9 54.7397 578.04 53.6802 579.36 52.4502 cv
585.38 46.8398 601.35 31.9302 607.82 35 cv
610.28 36.73 613.78 52.75 615.09 58.7798 cv
615.87 62.3198 616.48 65.1201 616.96 66.6299 cv
619.34 74.1401 620.74 81.6001 622.1 88.8198 cv
624.53 101.73 626.84 113.94 634.19 126.23 cv
630.31 128.47 627.09 131.45 625.04 135.23 cv
622.98 139.05 621.65 144.7 624.23 152.29 cv
cp
712.05 32.71 mo
714.55 34.4302 715.73 36.3799 717.09 38.6499 cv
719.12 42.04 721.43 45.8701 728.3 48.3398 cv
731.64 49.54 735.01 50.3701 738.27 51.1602 cv
745.11 52.8301 751.57 54.4102 757.06 59.23 cv
758.87 60.8198 760.23 62.4199 761.54 63.9697 cv
764.35 67.29 767.02 70.4399 772.89 72.0698 cv
767.81 81.3901 753.16 90.0098 742.21 96.4502 cv
738.41 98.6899 734.82 100.81 732.01 102.71 cv
725.48 107.12 719.85 112.01 714.4 116.74 cv
705.95 124.07 697.97 130.99 687.36 135.72 cv
687.25 135.77 687.15 135.83 687.05 135.9 cv
686.64 135.36 686.23 134.82 685.79 134.28 cv
682.55 126.64 673.06 121.63 660.27 120.85 cv
655.87 120.58 651.15 120.86 646.6 121.76 cv
646.23 112.92 648.12 103.5 649.96 94.3501 cv
650.63 91.04 651.26 87.9199 651.79 84.79 cv
652.51 80.5898 652.83 74.6899 653.17 68.4502 cv
653.92 54.5898 654.85 37.3398 660.5 30.6602 cv
664.38 26.0801 670.17 27.46 679.24 30.27 cv
684.03 31.7598 688.94 33.2798 693.75 33.25 cv
696.43 33.23 698.89 32.6802 701.28 32.1602 cv
705.49 31.23 708.81 30.5 712.05 32.71 cv
cp
580.94 374.1 mo
588.39 360.62 607.39 349.51 630.52 345.1 cv
653.45 340.73 675.17 343.87 687.82 353.27 cv
684.23 367.28 690.13 378.76 695.58 389.35 cv
696.15 390.45 696.72 391.55 697.27 392.64 cv
698.92 395.93 701.87 399.56 705.62 403.08 cv
704.36 404.15 703.08 405.24 701.8 406.33 cv
685.54 420.16 668.72 434.46 648.51 439.99 cv
625.11 446.39 596.91 437.81 582.92 420.02 cv
572.56 406.85 571.85 390.54 580.94 374.1 cv
cp
692.81 353.81 mo
693.11 353.37 693.25 352.88 693.25 352.39 cv
693.67 351.11 694.18 349.81 694.8 348.48 cv
694.94 348.63 695.1 348.76 695.29 348.87 cv
701.99 352.8 710.74 351.89 719.2 351.02 cv
730.86 349.81 738.66 349.43 741.97 356.54 cv
733.2 353.17 722.2 359.26 712.29 364.76 cv
704.66 368.99 696.8 373.33 693.09 371.2 cv
691.52 365.75 691.07 360.06 692.81 353.81 cv
cp
707.39 331.3 mo
711.32 335.19 719.03 336.88 727.11 338.65 cv
735.75 340.54 745.54 342.69 747.42 347.36 cv
748.11 349.08 747.75 351.33 746.35 354.07 cv
741.34 343.71 729.39 344.94 718.69 346.05 cv
711.03 346.84 703.11 347.66 697.81 344.55 cv
697.57 344.41 697.3 344.32 697.04 344.27 cv
699.47 340.22 702.84 335.92 707.39 331.3 cv
cp
750.39 361.7 mo
754.27 363.01 756.76 364.75 757.79 366.89 cv
759.82 371.12 756.53 377.72 753.36 384.11 cv
748.74 393.41 743.08 404.8 753.14 412.36 cv
749.81 415.03 745.38 416.07 739.91 415.44 cv
738.83 415.32 737.74 415.13 736.64 414.89 cv
731.31 406.4 735.51 399.56 740.8 390.95 cv
741.29 390.14 li
747.77 379.57 750.04 372.7 750.39 361.7 cv
cp
710.97 401.17 mo
710.74 389.86 719.17 384.58 728.85 378.53 cv
734.88 374.76 741.08 370.86 745.19 365.22 cv
744.45 373.89 742.05 379.34 737.03 387.53 cv
736.54 388.33 li
731.85 395.97 727.02 403.82 730.15 412.92 cv
723.12 410.2 716.29 405.78 710.97 401.17 cv
cp
706.31 396.66 mo
704.26 394.43 702.69 392.28 701.73 390.39 cv
701.17 389.28 700.6 388.18 700.03 387.06 cv
698.26 383.62 696.51 380.23 695.08 376.78 cv
695.18 376.78 695.28 376.79 695.39 376.79 cv
700.9 376.79 707.67 373.04 714.71 369.13 cv
724.54 363.68 734.66 358.08 741.44 361.86 cv
737.95 366.93 732.23 370.51 726.2 374.29 cv
717.66 379.63 708.18 385.56 706.31 396.66 cv
cp
587.21 932.33 mo
580.98 919.79 579.5 910.19 582.67 902.97 cv
585.5 896.54 592.07 891.92 602.74 888.85 cv
603.85 888.53 604.93 888.23 605.98 887.94 cv
616.47 885.03 625 882.66 631.27 869.07 cv
633.26 872.98 635.88 876.64 639.94 879.6 cv
646.6 884.46 653.33 886 660.04 886 cv
661.23 886 662.42 885.95 663.6 885.86 cv
660.31 893.91 663.13 902.72 665.47 910 cv
666.67 913.71 667.79 917.21 668.01 920.13 cv
669.34 937.49 660.61 950.05 644.06 954.61 cv
624.61 959.97 597.13 952.29 587.21 932.33 cv
cp
625.45 844.99 mo
626.64 845.04 627.84 845.07 629.02 845.1 cv
635.38 845.27 641.39 845.43 643.37 848.6 cv
643.41 848.66 643.44 848.71 643.48 848.76 cv
644.4 850.01 645.36 851.12 646.34 852.15 cv
641.61 852.66 636.66 854.19 631.54 856.72 cv
629.96 852.65 628.21 848.57 625.45 844.99 cv
cp
652.5 857.11 mo
653.3 857.6 654.11 858.04 654.93 858.45 cv
652.75 862.05 651.09 865.19 649.49 868.23 cv
648.07 870.91 646.6 873.69 644.76 876.82 cv
644.13 876.43 643.51 876.02 642.89 875.56 cv
637.93 871.94 635.5 866.9 633.34 861.42 cv
640.23 857.94 646.67 856.5 652.5 857.11 cv
cp
659.6 860.37 mo
661.13 860.88 662.68 861.3 664.25 861.66 cv
668.8 864.95 671.98 873.92 671.59 879.26 cv
671.58 879.42 671.59 879.57 671.6 879.73 cv
663.89 881.15 656.46 881.9 649.23 879.07 cv
651.05 875.96 652.51 873.21 653.91 870.56 cv
655.63 867.29 657.26 864.2 659.54 860.5 cv
659.56 860.46 659.57 860.41 659.6 860.37 cv
cp
673.94 863.36 mo
674.22 863.4 674.49 863.44 674.76 863.48 cv
678.38 868.28 680.08 873.06 679.92 878.08 cv
678.81 878.3 677.71 878.52 676.61 878.74 cv
676.71 874.03 675.03 867.87 672.06 863.08 cv
672.69 863.17 673.31 863.27 673.94 863.36 cv
cp
701.01 877.2 mo
695.67 876.05 690.27 876.38 684.91 877.2 cv
684.86 872.91 683.72 868.69 681.46 864.6 cv
689.28 866.17 696.09 868.95 701.01 877.2 cv
cp
365.41 851.06 mo
356.56 873.93 331.89 886.26 305.4 881.04 cv
289.52 877.91 282.49 867.37 275.04 856.22 cv
267.8 845.37 260.34 834.2 244.45 831.4 cv
249.63 827.8 254.33 823.39 257.67 817.04 cv
263.91 805.2 263.86 794.07 261.5 783.35 cv
270.87 787.39 283.8 780.78 294.62 775.23 cv
300.21 772.37 305.49 769.66 309.44 768.77 cv
328.52 764.46 346.99 771.06 358.85 786.41 cv
373.38 805.23 372.62 832.44 365.41 851.06 cv
cp
232.29 832.95 mo
224.72 827.77 220.47 819.12 220.78 809.43 cv
222.75 806.17 224.17 802.82 225.18 799.43 cv
225.24 799.46 225.3 799.5 225.37 799.53 cv
231.22 802.04 236.6 803.95 241.8 805.79 cv
246.04 807.3 250.43 808.86 255.08 810.75 cv
254.55 812.06 253.95 813.38 253.25 814.71 cv
248.55 823.62 240.7 828.25 232.29 832.95 cv
cp
212.19 847.46 mo
211.99 844.99 211.69 842.52 211.4 840.08 cv
210.29 830.84 209.25 822.11 213.71 818.31 cv
213.76 818.27 213.81 818.22 213.85 818.18 cv
214.67 817.37 215.44 816.55 216.17 815.73 cv
217.39 823.68 221.37 830.7 227.53 835.65 cv
221.97 838.84 216.53 842.37 212.19 847.46 cv
cp
227.58 783.8 mo
231.06 777.86 243.69 775.41 255.06 778.43 cv
257.76 787.54 259.17 796.57 256.67 806 cv
252.03 804.13 247.68 802.57 243.47 801.08 cv
238.11 799.18 233.05 797.38 227.34 794.94 cv
227.01 794.79 226.67 794.73 226.34 794.73 cv
227.05 791.12 227.4 787.46 227.58 783.8 cv
cp
227.75 773.17 mo
227.75 771.48 li
227.84 771.37 227.93 771.26 227.99 771.14 cv
232.74 761.86 238.5 752.31 245.65 750 cv
247.04 755.39 248.94 760.7 250.83 765.94 cv
251.67 768.28 252.51 770.61 253.29 772.92 cv
244.18 771.23 234.05 772.35 227.74 776.62 cv
227.75 775.47 227.75 774.32 227.75 773.17 cv
cp
243.92 730.05 mo
243.28 735.14 243.64 740.14 244.56 745.07 cv
237.86 747 232.6 753.16 228.06 760.66 cv
228.9 749.33 232.04 738.8 243.92 730.05 cv
cp
798.36 112.43 mo
797.71 109.34 796.07 106.86 794.49 104.47 cv
793.18 102.5 791.94 100.64 791.47 98.6699 cv
791.14 97.2998 791.32 95.8398 791.51 94.2998 cv
791.9 91.1499 792.38 87.23 788.33 83.6601 cv
782.9 78.8799 778.87 77.8799 774.64 78.4399 cv
776.48 76.0801 777.92 73.6299 778.78 71.0601 cv
779.02 70.3701 778.94 69.6001 778.55 68.9697 cv
778.17 68.3398 777.53 67.9101 776.8 67.79 cv
770.5 66.8101 768.34 64.2598 765.35 60.7397 cv
763.99 59.1299 762.44 57.3101 760.36 55.48 cv
753.95 49.8398 746.58 48.04 739.45 46.2998 cv
736.32 45.54 733.08 44.75 729.99 43.6401 cv
724.8 41.77 723.21 39.1299 721.38 36.0698 cv
719.92 33.6602 718.28 30.9199 714.87 28.5898 cv
713.2 27.4399 711.51 26.8101 709.84 26.5098 cv
708.96 18.5098 702.48 17.0801 697.19 15.9199 cv
696.09 15.6699 694.94 15.4199 693.84 15.1201 cv
692.23 14.6802 690.52 14.2998 688.87 13.9302 cv
684.38 12.9302 679.74 11.8901 676.28 9.58984 cv
674.73 8.56006 673.48 6.6499 672.26 4.81006 cv
671.1 3.04004 669.9 1.21973 668.3 0 cv
641.52 0 li
638.38 1.58008 635.34 3.4502 632.42 5.25977 cv
626.43 8.95996 620.76 12.4502 615.47 12.7798 cv
600.4 13.71 590.47 17.5898 576.73 22.96 cv
574.85 23.6899 li
574.54 23.8101 574.16 23.96 573.72 24.1401 cv
576.71 15.2002 579.75 7.22998 582.94 0 cv
577.48 0 li
572.38 0 li
566 0 li
558.76 0 li
553.74 0 li
554.83 9.85986 555.45 20.48 555.44 31.8901 cv
555.3 32.5898 555.18 33.29 555.06 33.98 cv
546.82 39.4897 538.56 47.02 535.5 56.3101 cv
534.46 59.46 534.09 62.6099 534.39 65.7598 cv
525.54 68.5898 516.86 79.4897 513.35 84.3501 cv
512.82 85.0801 512.35 85.8101 511.92 86.54 cv
498.36 73 490.84 19.2002 489.1 5.33008 cv
490.26 3.58984 491.42 1.81006 492.58 0 cv
485.34 0 li
484.3 .390137 483.61 1.43994 483.74 2.6001 cv
483.76 2.7998 483.82 3.31006 483.91 4.08008 cv
467.38 28.4697 450.17 46.1602 423.79 66.2598 cv
429.49 55.8901 432.72 44.6201 435.88 33.6201 cv
437.74 27.1299 439.67 20.4199 442.05 14.1602 cv
443.88 9.37988 445.48 4.68018 446.88 0 cv
441.66 0 li
440.4 4.08984 438.98 8.20019 437.38 12.3799 cv
434.92 18.8301 432.97 25.6499 431.08 32.2397 cv
426.77 47.23 422.31 62.73 411.58 75.2197 cv
411.34 75.3398 411.09 75.4697 410.85 75.5898 cv
403.42 56.0498 379.96 47.0098 361.31 42.8599 cv
359.91 42.5498 358.27 42.2397 356.37 41.8799 cv
341.36 39.04 325.54 35.1602 325.17 25.02 cv
339.34 24.6099 348.73 23.1802 357.2 10.7002 cv
358.04 9.46973 358.33 7.87988 358.61 6.33984 cv
358.75 5.5498 358.99 4.22998 359.17 3.9502 cv
359.78 3.37988 360.27 3.2998 361.32 3.16992 cv
362.41 3.04004 363.9 2.85986 365.32 1.7002 cv
366.12 1.0498 366.81 .509766 367.45 0 cv
356.11 0 li
355.99 .100098 355.87 .189941 355.75 .299805 cv
354.39 1.58008 354.03 3.54004 353.69 5.43994 cv
353.54 6.27978 353.31 7.54004 353.07 7.89014 cv
352.98 8.00976 352.9 8.12012 352.82 8.23975 cv
350.64 4.5 348.05 1.89014 345.26 0 cv
331.19 0 li
338.18 1.4502 344.66 3.43018 349.02 11.6602 cv
349.16 11.9102 349.34 12.1299 349.54 12.3101 cv
342.88 19.25 335.22 19.7998 322.77 20.0801 cv
321.55 20.1099 320.54 21 320.35 22.2002 cv
320.08 23.9697 320.1 25.6001 320.34 27.1099 cv
320.22 27.4102 320.15 27.7197 320.15 28.0601 cv
320.15 37.4102 301.8 40.4302 293.96 41.7197 cv
291.05 42.2002 289.73 42.4302 288.88 42.8198 cv
282.75 45.6401 281.2 52.2002 279.69 58.5298 cv
278.8 62.3101 277.87 66.2197 275.98 68.9502 cv
274.3 71.3501 270.89 73.5298 267.6 75.6299 cv
263.49 78.25 259.61 80.7197 258.39 84.0801 cv
257.49 86.5801 258.14 89.6401 258.82 92.8901 cv
259.51 96.1699 260.29 99.8799 259.28 102.55 cv
256.78 109.13 254.13 112.92 251.6 113.52 cv
248.37 114.29 243.85 110.17 239.08 105.8 cv
237.36 104.23 235.6 102.62 233.74 101.08 cv
245.73 87.4502 249.19 76.4399 244.08 68.2798 cv
248.76 64.77 251.99 59.9399 253.28 54.4399 cv
254.4 49.6802 254.03 44.71 252.24 40.04 cv
252.27 40.0498 252.3 40.0601 252.34 40.0698 cv
261.33 42.0898 268.43 43.6899 279.37 32.7002 cv
281.36 30.71 283.18 28.0098 285.1 25.1499 cv
290.96 16.4399 295.33 10.9502 302.47 13.8999 cv
303.45 14.2998 304.58 14.04 305.29 13.25 cv
305.99 12.46 306.13 11.3101 305.62 10.3799 cv
303.46 6.43994 303.26 3.2002 304.13 0 cv
299.01 0 li
298.5 2.52002 298.48 5.18994 299.29 8.08984 cv
290.77 7.73975 285.21 16.0298 280.95 22.3599 cv
279.17 25.0098 277.48 27.52 275.83 29.1802 cv
266.84 38.2002 262.08 37.1299 253.43 35.1899 cv
251.77 34.8101 250.05 34.4302 248.14 34.0698 cv
247.16 33.8901 246.17 34.3101 245.61 35.1299 cv
245.06 35.9502 245.04 37.0298 245.57 37.8701 cv
248.62 42.6802 249.63 48.1602 248.42 53.29 cv
247.23 58.3198 243.96 62.6699 239.22 65.54 cv
238.58 65.9199 238.15 66.5698 238.04 67.2998 cv
237.92 68.0298 238.14 68.7798 238.64 69.3301 cv
244.45 75.8999 241.06 85.8198 228.27 99.6802 cv
227.8 100.2 227.56 100.89 227.62 101.59 cv
227.68 102.29 228.03 102.94 228.59 103.36 cv
229.12 103.76 229.64 104.18 230.15 104.6 cv
229.69 104.75 229.27 105.03 228.95 105.43 cv
224.26 111.35 222.58 116.71 223.97 121.35 cv
225.34 125.93 229.53 129.4 236.41 131.67 cv
242.87 133.8 249.33 134.65 255.78 134.65 cv
268.57 134.65 281.3 131.31 293.74 128.04 cv
296.96 127.2 300.29 126.32 303.54 125.53 cv
335.99 117.63 371.42 101.28 403.13 85.1699 cv
409.78 109.17 421.14 133.01 436.97 156.08 cv
443.61 165.76 450.8 174.66 457.75 183.27 cv
468.85 197.01 479.33 209.99 488.02 226.11 cv
492.87 235.11 497.1 244.44 500.72 254.07 cv
493.76 261.53 487.48 269.56 481.93 278.12 cv
471.84 245.62 458.11 218.72 438.93 193.88 cv
416.74 165.15 395.65 147.54 359.18 148.54 cv
339.99 149.07 326.52 160.09 320.2 180.4 cv
317.57 188.86 316.44 206.72 323.74 215.59 cv
322.42 217.13 320.99 218.66 319.52 220.22 cv
316.12 223.83 312.6 227.57 310.05 232.02 cv
302.68 244.88 300.58 259.47 303.64 276.64 cv
306.08 290.38 324.77 335.43 346.93 345.56 cv
349.91 346.91 352.82 347.59 355.66 347.59 cv
357.19 347.59 358.7 347.39 360.18 346.99 cv
360.56 347.39 361.07 347.67 361.67 347.73 cv
364.23 348.03 367.27 348.74 370.5 349.48 cv
375.44 350.62 380.74 351.84 385.46 351.84 cv
389.26 351.84 392.68 351.05 395.22 348.79 cv
398.51 345.85 399.75 341.1 398.99 334.25 cv
398.95 333.94 398.86 333.65 398.72 333.39 cv
398.97 333.39 399.22 333.42 399.47 333.42 cv
399.88 333.42 400.29 333.41 400.7 333.39 cv
405.93 333.18 410.25 330.99 413.54 326.9 cv
422.24 316.08 421.21 294.31 419.23 283.16 cv
414.38 255.81 397.23 229.15 376.57 216.83 cv
362.8 208.61 349.94 204.9 338.23 205.73 cv
338.23 205.69 338.24 205.65 338.23 205.61 cv
338.08 204.17 li
336.65 190.8 335.04 175.66 356 170.15 cv
379.69 163.92 405.06 179.94 418.6 197.47 cv
444.99 231.61 454.47 252.51 469.58 297.99 cv
469.72 298.4 469.96 298.75 470.26 299.03 cv
453.76 333.68 447.25 374.79 451.77 419.09 cv
452.45 425.8 453.33 432.5 454.42 439.21 cv
454.46 439.49 454.51 439.76 454.56 440.04 cv
454.58 440.14 454.59 440.23 454.61 440.33 cv
454.61 440.36 454.62 440.38 454.62 440.41 cv
458.27 462.55 464.13 484.82 472.43 507.89 cv
472.08 508.61 471.72 509.32 471.38 510.03 cv
459.68 534.15 450.99 598.15 450.41 663.49 cv
436.03 653.26 425.6 644.05 415.96 633.1 cv
411.23 627.73 406.77 621.57 402.05 615.05 cv
395.92 606.6 389.6 597.89 382.63 591.01 cv
388.16 587.67 391.18 584.39 394.64 580.63 cv
396.29 578.84 398.01 576.97 400.18 574.9 cv
400.53 575.07 400.92 575.17 401.3 575.17 cv
401.73 575.17 402.16 575.06 402.55 574.84 cv
409.8 570.68 431.8 538.83 432.17 530.2 cv
432.21 529.49 431.94 528.81 431.44 528.31 cv
430.94 527.82 430.26 527.55 429.55 527.59 cv
429.19 527.61 428.75 527.52 428.28 527.39 cv
428.84 526.59 429.43 525.77 430.03 524.92 cv
436.34 516.03 444.19 504.97 443.02 494.49 cv
442.64 491.04 436.49 478.48 432.78 473.56 cv
434.01 473.55 435.24 473.64 436.47 473.86 cv
437.23 474 438.02 473.77 438.6 473.25 cv
439.17 472.72 439.47 471.96 439.4 471.18 cv
439.21 469.06 438.92 466.98 438.64 464.97 cv
437.4 456.19 436.43 449.26 444.02 444.08 cv
444.7 443.62 445.1 442.85 445.1 442.04 cv
445.1 441.95 li
445.1 441.84 445.09 441.74 445.07 441.63 cv
445.02 441.32 444.92 441.03 444.77 440.76 cv
444.56 440.4 444.26 440.1 443.9 439.88 cv
437.35 435.9 431.56 432.08 427.11 425.75 cv
425.44 423.37 424.41 421.65 423.58 420.27 cv
420.79 415.63 419.95 414.87 411.65 412 cv
403.53 409.19 398.87 404.08 393.94 398.67 cv
389.62 393.94 385.17 389.06 378.21 385.17 cv
378.31 377.17 377.28 372.75 374.72 370.11 cv
371.78 367.06 367.52 367.03 362.13 366.99 cv
358.07 366.97 353.02 366.93 346.99 365.65 cv
344.56 365.13 342.06 364.77 339.41 364.4 cv
335.3 363.82 331.06 363.23 326.9 361.95 cv
319.3 359.62 315.02 360.3 310.49 361.02 cv
307.56 361.48 304.53 361.96 300.09 361.72 cv
296.35 361.52 292.31 359.83 288.03 358.04 cv
282.95 355.91 277.68 353.7 272.05 353.58 cv
271.63 353.57 li
266.11 353.44 261.33 353.33 255.83 356.89 cv
253.52 358.38 252.25 360.87 251.41 362.52 cv
251.21 362.9 250.96 363.4 250.81 363.63 cv
245.8 367.05 239.89 367.96 233.65 368.92 cv
225.36 370.2 216.79 371.53 210.03 378.92 cv
200.09 389.81 206.21 396.71 212.13 403.39 cv
214.02 405.53 215.96 407.75 217.61 410.24 cv
214.56 414.36 211.63 418.05 208.62 420.82 cv
208.23 420.46 207.83 420.1 207.41 419.71 cv
201.07 413.87 191.5 405.05 182.87 406.07 cv
177.28 406.72 172.76 412.81 168.39 418.69 cv
163.09 425.83 159.37 430.35 156.06 428.14 cv
155.2 427.56 154.08 427.58 153.23 428.17 cv
137.33 439.3 135.06 473.23 135.52 485.37 cv
135.78 492.08 137.17 498.15 138.52 504.02 cv
140.55 512.92 142.48 521.33 139.8 530.3 cv
139.6 531 139.32 531.42 138.9 532.05 cv
138.03 533.37 136.95 535.01 136.41 539.04 cv
135.7 544.33 137.09 549.94 138.88 555.24 cv
138.98 555.53 139.08 555.82 139.18 556.11 cv
139.72 557.64 140.28 559.15 140.82 560.61 cv
141.57 562.63 142.28 564.54 142.85 566.32 cv
145.45 574.5 147.1 583.13 148.69 591.47 cv
149.32 594.78 149.97 598.2 150.67 601.56 cv
150.83 602.31 151.32 602.95 152.01 603.29 cv
152.36 603.46 152.74 603.55 153.12 603.55 cv
153.49 603.55 153.85 603.46 154.19 603.3 cv
155.35 602.76 156.5 602.26 157.65 601.81 cv
156.15 609.42 159.43 614.22 162.91 619.27 cv
163.73 620.45 164.56 621.67 165.39 622.98 cv
167.24 625.91 168.35 628.43 169.42 630.86 cv
171.43 635.42 173.32 639.73 179.46 644.21 cv
197.26 657.19 225.64 667.88 245.91 660.69 cv
246.53 660.46 247.05 660 247.33 659.4 cv
247.62 658.8 247.65 658.11 247.43 657.48 cv
247.28 657.07 247.19 656.08 247.11 655.27 cv
249.85 655.92 252.33 657.55 255.08 659.35 cv
259.01 661.93 263.37 664.78 269.09 664.78 cv
270.37 664.78 271.73 664.64 273.16 664.32 cv
278.8 663.04 284.27 660.33 288.06 656.98 cv
289.99 659.25 292.18 660.4 294.58 660.41 cv
300.61 660.4 305.68 653.27 311.04 645.72 cv
314.29 641.13 317.98 635.94 320.68 634.74 cv
322.79 633.8 326.58 633.62 329.92 633.45 cv
332.72 633.32 335.36 633.19 337.52 632.68 cv
350.34 629.64 361.65 620.59 367.78 608.48 cv
368.1 607.84 368.35 607.19 368.57 606.52 cv
383.37 627.81 403.55 645.21 423.12 662.08 cv
432.39 670.07 441.84 678.21 450.73 686.79 cv
452.2 738.03 458.49 784.3 468.72 821.45 cv
463.56 831.21 458.2 840.96 453.01 850.39 cv
448.2 859.15 443.47 867.74 438.94 876.27 cv
411.42 841.75 382.17 826.45 375.4 823.21 cv
375.34 809.28 371.72 794.9 362.81 783.35 cv
349.73 766.42 329.37 759.15 308.34 763.89 cv
303.77 764.92 298.22 767.77 292.34 770.78 cv
276.87 778.71 265.41 783.67 259.32 775.27 cv
258.16 771.56 256.84 767.89 255.53 764.24 cv
250.75 750.96 246.23 738.4 249.95 725.37 cv
250.23 724.39 249.89 723.33 249.08 722.71 cv
248.27 722.08 247.17 722.01 246.29 722.52 cv
222.77 736.29 222.76 755.04 222.75 773.17 cv
222.75 776.44 222.75 779.67 222.62 782.85 cv
222.61 782.95 222.61 783.04 222.61 783.13 cv
222.24 791.63 220.93 799.77 216.22 807.32 cv
216.18 807.38 216.14 807.44 216.1 807.51 cv
214.58 809.92 212.7 812.28 210.4 814.56 cv
203.97 820.11 205.17 830.1 206.43 840.67 cv
207.02 845.55 207.62 850.6 207.44 855.17 cv
207.4 856.34 208.17 857.39 209.3 857.69 cv
209.52 857.74 209.73 857.77 209.94 857.77 cv
210.86 857.77 211.73 857.26 212.16 856.41 cv
216.78 847.44 224.83 842.85 233.39 838.07 cv
233.52 837.99 233.64 837.93 233.77 837.86 cv
235.01 837.16 236.25 836.46 237.5 835.75 cv
255.62 836.15 262.7 846.74 270.88 858.99 cv
278.57 870.51 286.51 882.41 304.43 885.94 cv
308.83 886.81 313.19 887.23 317.44 887.23 cv
341.15 887.23 361.81 874.2 370.07 852.86 cv
371.04 850.37 371.9 847.73 372.63 844.97 cv
380.38 847.74 405.96 859.08 429.6 894.35 cv
424.59 904.41 419.93 914.49 415.79 924.76 cv
415.59 925.25 415.56 925.76 415.66 926.23 cv
405.43 929.76 397.85 936.12 388.25 944.92 cv
380.82 951.73 373.93 957.58 364.86 960.12 cv
361.95 960.93 359.68 961.17 357.68 961.38 cv
353.6 961.81 350.07 962.18 345.76 967.24 cv
341.45 972.29 336.14 987.53 336.66 996.17 cv
334.41 995.54 332.15 995.08 329.97 994.65 cv
322.21 993.11 315.52 991.78 311.45 983.46 cv
311.03 982.6 310.17 982.06 309.22 982.05 cv
308.29 982.09 307.4 982.58 306.97 983.43 cv
306.09 985.18 305.09 986.88 304.13 988.52 cv
302 992.17 299.84 995.88 299.01 1000 cv
304.13 1000 li
304.91 997.13 306.55 994.3 308.45 991.04 cv
308.74 990.55 309.02 990.06 309.31 989.56 cv
314.58 996.7 322.18 998.2 328.99 999.56 cv
329.73 999.7 330.46 999.85 331.19 1000 cv
345.26 1000 li
344.22 999.3 343.17 998.7 342.09 998.18 cv
342.06 998.02 342.02 997.87 341.97 997.71 cv
340.21 992.92 344.97 975.87 349.57 970.48 cv
352.58 966.94 354.34 966.76 358.2 966.35 cv
360.29 966.14 362.89 965.86 366.2 964.93 cv
371.9 963.34 376.73 960.67 381.28 957.35 cv
384.81 954.76 388.17 951.78 391.63 948.61 cv
404.13 937.15 412.64 930.04 429.45 928.4 cv
436.14 927.75 438.13 928.79 438.72 929.46 cv
439.72 930.6 438.99 933.76 438.28 936.82 cv
437.22 941.43 435.93 947.02 438.37 952.16 cv
434.76 951.99 431 952.39 427.7 952.75 cv
425.98 952.93 424.35 953.11 422.9 953.19 cv
410.55 953.9 400.35 957.03 391.95 962.8 cv
384.54 967.89 378.53 975.03 373.69 984.37 cv
369.88 991.72 369.01 992.39 364.88 995.66 cv
364.09 996.28 363.2 996.98 362.16 997.83 cv
361.89 998.05 361.57 998.1 360.72 998.21 cv
359.55 998.35 357.83 998.57 356.11 1000 cv
367.45 1000 li
367.62 999.86 367.81 999.71 367.97 999.58 cv
372.61 995.93 373.99 994.64 378.13 986.67 cv
387.57 968.46 401.89 959.41 423.19 958.18 cv
424.76 958.09 426.45 957.91 428.24 957.72 cv
437.87 956.69 445.42 956.38 447.78 962.54 cv
447.99 963.08 448.37 963.5 448.83 963.77 cv
448.82 963.84 448.82 963.91 448.81 963.97 cv
447.65 976.39 445.33 988.09 441.66 1000 cv
446.88 1000 li
450.4 988.27 452.64 976.69 453.79 964.44 cv
453.97 962.51 454.04 960.63 454.1 958.8 cv
454.37 950.98 454.76 946.81 460.29 944.85 cv
460.78 944.68 461.37 944.61 462.02 944.61 cv
463.21 944.61 464.63 944.84 466.1 945.07 cv
469.15 945.56 472.61 946.12 475.89 944.96 cv
478.28 944.13 480.11 942.21 481.73 940.52 cv
482.9 939.29 484.23 937.9 485.05 937.76 cv
485.82 937.69 488.3 938.73 489.95 939.39 cv
492.75 940.5 495.38 941.55 497.48 941.6 cv
499.6 941.65 501.56 940.83 503.47 940.04 cv
505.49 939.21 507.39 938.42 508.82 938.95 cv
509.49 939.2 510.08 939.5 510.59 939.86 cv
511.64 940.6 512.36 941.56 512.8 942.82 cv
516.06 952.25 503.36 972.91 497.94 981.74 cv
497.21 982.92 496.59 983.94 496.11 984.75 cv
492.94 990.1 489.83 995.12 486.7 999.89 cv
486.46 999.84 486.21 999.82 485.95 999.84 cv
485.73 999.87 485.53 999.93 485.34 1000 cv
492.58 1000 li
495.18 995.96 497.78 991.74 500.41 987.29 cv
500.88 986.5 501.49 985.51 502.2 984.36 cv
508.48 974.13 521.56 952.85 517.52 941.19 cv
516.93 939.47 516 938.02 514.77 936.84 cv
515.3 934.51 516.99 933.19 519.52 931.38 cv
522.39 929.33 525.96 926.78 526.29 921.5 cv
526.31 921.18 526.27 920.87 526.18 920.58 cv
525.95 919.86 525.39 919.26 524.65 918.99 cv
518.25 916.66 511.13 915.66 503.83 915.18 cv
505.29 908.51 506.91 901.68 508.62 894.46 cv
508.69 894.15 508.77 893.84 508.84 893.53 cv
512.78 897.28 520.49 905.55 528.53 919.21 cv
538.83 936.7 549.65 963.02 553.74 1000 cv
558.76 1000 li
566.01 1000 li
572.38 1000 li
580.73 983.56 591.66 967.64 601.29 953.66 cv
602.61 954.41 603.97 955.1 605.36 955.74 cv
594.04 968.04 585.31 981.76 577.48 1000 cv
582.94 1000 li
590.56 982.73 599.07 969.7 610.08 958 cv
610.16 957.92 610.22 957.83 610.28 957.74 cv
616.98 960.12 624.1 961.3 630.97 961.3 cv
635.99 961.3 640.88 960.67 645.38 959.43 cv
664.18 954.26 674.5 939.42 673 919.75 cv
672.73 916.24 671.52 912.47 670.23 908.47 cv
667.64 900.4 664.97 892.06 669.63 885.14 cv
672.29 884.71 674.94 884.18 677.58 883.65 cv
687.22 881.7 696.33 879.86 704.82 883.69 cv
705.76 884.11 706.85 883.92 707.58 883.21 cv
708.32 882.51 708.55 881.42 708.17 880.48 cv
700.82 862.26 687.53 860.31 674.67 858.41 cv
664.38 856.9 654.65 855.46 647.56 845.86 cv
644.12 840.5 636.52 840.3 629.16 840.1 cv
625.72 840.01 622.17 839.92 619.05 839.33 cv
617.91 839.12 616.76 839.73 616.3 840.81 cv
615.84 841.89 616.19 843.14 617.14 843.82 cv
622.83 847.9 625.15 854 627.61 860.46 cv
627.9 861.2 628.18 861.94 628.47 862.69 cv
622.95 878.04 615.63 880.08 604.65 883.12 cv
603.58 883.41 602.48 883.72 601.36 884.04 cv
589.34 887.5 581.51 893.19 578.1 900.96 cv
574.29 909.61 575.8 920.6 582.73 934.55 cv
586.11 941.34 591.12 946.81 597.06 950.99 cv
588.42 963.53 578.77 977.6 570.79 992.3 cv
566.96 936.87 517.38 874.22 515.14 871.42 cv
514.86 871.07 514.5 870.82 514.1 870.66 cv
518.49 850.57 522.12 829.62 522.26 809.35 cv
524.87 804.71 527.31 800.03 529.58 795.3 cv
580.53 728.34 627.95 708.76 637.91 705.23 cv
652.74 741.73 668.29 765.16 695.85 794.15 cv
696.48 794.81 697.27 795.67 698.19 796.67 cv
706.16 805.34 722.59 823.2 734.85 823.2 cv
735.08 823.2 735.32 823.2 735.55 823.18 cv
738.75 823 741.42 821.61 743.52 819.09 cv
746.28 820.35 747 822.53 747.94 825.96 cv
748.86 829.36 750.01 833.59 754.85 835.74 cv
755.17 835.88 755.52 835.96 755.86 835.96 cv
756.58 835.96 757.28 835.65 757.76 835.08 cv
765.01 826.56 769.56 814.99 773.96 803.8 cv
776.55 797.21 778.99 790.99 781.91 785.5 cv
790.49 769.33 783.5 763.92 772.91 755.73 cv
772.4 755.34 771.89 754.94 771.38 754.54 cv
773.95 752.79 775.64 749.1 776.77 742.82 cv
780 725 775.31 713.92 767.2 697.79 cv
762.67 688.78 758.92 680.56 758.95 671.14 cv
758.96 668.12 759.35 665.87 759.69 663.89 cv
760.39 659.84 761 656.35 757.31 650.83 cv
753.62 645.3 740.41 636.03 731.95 634.18 cv
733.17 632.19 734.23 630.14 735.24 628.15 cv
738.83 621.11 741.94 615.03 751.06 613.39 cv
751.99 613.22 752.75 612.54 753.01 611.63 cv
753.28 610.72 753 609.73 752.31 609.09 cv
750.86 607.76 749.5 606.34 748.18 604.97 cv
743.46 600.06 738.6 595.02 730.67 594.97 cv
733.33 586.9 726.87 579.26 721.94 573.45 cv
719.88 571 717.92 568.7 716.78 566.66 cv
710.55 555.54 712.88 551.25 717.1 543.47 cv
717.91 541.97 718.76 540.42 719.62 538.68 cv
720.06 537.79 719.93 536.72 719.29 535.96 cv
718.65 535.2 717.62 534.89 716.67 535.17 cv
711.21 536.79 705.66 536.27 701.05 533.7 cv
696.53 531.19 693.24 526.87 691.78 521.52 cv
691.58 520.8 691.08 520.21 690.4 519.9 cv
689.73 519.59 688.95 519.6 688.28 519.92 cv
680.49 523.67 671.62 517.54 661.91 501.68 cv
661.54 501.08 660.94 500.66 660.25 500.53 cv
659.56 500.4 658.84 500.56 658.28 500.98 cv
657.75 501.38 657.21 501.76 656.66 502.14 cv
656.65 501.66 656.49 501.18 656.19 500.76 cv
651.83 494.7 647.19 491.63 642.39 491.63 cv
642.23 491.63 li
637.46 491.7 632.98 494.78 628.92 500.79 cv
617.54 517.6 617.15 537.6 616.78 556.94 cv
616.71 560.27 616.64 563.71 616.52 567.05 cv
615.2 602.42 622.1 643.6 629.44 680.1 cv
618.97 683.65 585.93 698.06 546.51 747.71 cv
551.6 726.21 553.55 704.07 552.31 681.44 cv
550.3 644.76 539.67 606.75 521.56 571.53 cv
518.94 566.44 516.45 561.25 514.05 556.04 cv
514.1 555.93 514.14 555.81 514.17 555.68 cv
517.9 538.61 520.27 523.35 522.78 507.19 cv
523.58 502.01 524.4 496.72 525.29 491.22 cv
528.42 471.85 542.61 416.57 560.65 409.81 cv
564.5 408.37 568.35 409.31 572.41 412.7 cv
572.57 412.83 572.75 412.93 572.93 413.02 cv
574.44 416.52 576.46 419.9 579 423.12 cv
590.79 438.1 611.83 447.08 632.46 447.08 cv
638.36 447.08 644.22 446.34 649.83 444.81 cv
671.12 438.99 689.14 423.66 705.04 410.14 cv
706.38 408.99 707.72 407.85 709.06 406.73 cv
709.18 406.62 709.3 406.5 709.4 406.37 cv
717.99 413.33 729.31 419.26 739.34 420.41 cv
740.54 420.55 741.71 420.62 742.85 420.62 cv
749.59 420.62 755.15 418.2 759.04 413.53 cv
759.52 412.96 759.71 412.2 759.57 411.46 cv
759.43 410.72 758.97 410.09 758.31 409.73 cv
749.23 404.83 752.22 397.65 757.84 386.34 cv
761.55 378.87 765.38 371.16 762.29 364.73 cv
760.52 361.03 756.71 358.34 750.71 356.55 cv
752.91 352.33 753.35 348.7 752.06 345.5 cv
749.19 338.37 738.51 336.03 728.18 333.77 cv
720.4 332.06 711.58 330.13 710 326.48 cv
709.67 325.73 709 325.18 708.2 325.02 cv
707.4 324.86 706.56 325.1 705.97 325.67 cv
697.4 333.94 692.26 341.43 689.47 348.31 cv
675.57 338.84 653.07 335.71 629.59 340.19 cv
604.66 344.94 584.83 356.71 576.56 371.68 cv
572.4 379.21 570.1 386.73 569.64 394.01 cv
551.59 391.34 534.7 418.57 529.72 429.29 cv
518.65 453.09 513.03 481.92 509.05 507.35 cv
509.35 497.76 510.04 487.65 511.29 473.36 cv
535.36 417.26 542.45 362.33 533.6 302 cv
531.38 286.86 527.52 272.67 522.05 258.15 cv
530.09 251.91 539.63 246.08 551.17 240.36 cv
551.87 241.41 552.59 242.35 553.35 243.12 cv
555.66 245.47 558.98 246.76 562.18 248.01 cv
564.18 248.79 566.25 249.6 567.95 250.63 cv
571.06 252.5 573.71 254.77 576.53 257.17 cv
579.88 260.03 583.34 262.98 587.66 265.28 cv
590.55 266.82 597.81 270.44 603 270.96 cv
605.57 271.22 608.07 270.4 610.27 269.68 cv
612.13 269.08 613.88 268.5 615.2 268.71 cv
619.5 269.39 620.91 271.45 622.88 274.29 cv
624.73 276.97 626.82 280 631.51 281.77 cv
631.75 281.86 632.01 281.91 632.26 281.92 cv
632.92 282.77 633.66 283.52 634.5 284.16 cv
637.27 286.27 640.67 286.99 644.56 286.99 cv
648.39 286.99 652.68 286.29 657.28 285.54 cv
659.36 285.2 661.51 284.85 663.7 284.56 cv
666.43 284.19 669.1 283.86 671.71 283.54 cv
686.55 281.7 699.37 280.12 713.69 272.4 cv
718.63 269.74 723.86 267.54 728.91 265.42 cv
737.45 261.82 746.29 258.11 754.21 251.98 cv
754.81 251.52 755.69 250.88 756.73 250.12 cv
765.71 243.59 770.74 239.4 771.63 235.98 cv
773.08 230.36 769.81 228.01 768.06 226.75 cv
767.74 226.52 767.29 226.2 767.09 225.99 cv
768.34 219.54 774.42 216.32 780.86 212.91 cv
787.75 209.26 795.56 205.12 797.49 196.27 cv
800.29 183.41 791.96 181.5 786.45 180.24 cv
786.22 180.18 786.01 180.13 785.79 180.08 cv
787.55 176.42 787.49 171.4 787.38 164.57 cv
787.35 162.93 li
787.26 156.11 790.19 148.09 793.02 140.34 cv
796.51 130.77 800.13 120.87 798.36 112.43 cv
cp
f
641.516 1000 mo
668.301 1000 li
668.076 999.828 667.844 999.667 667.602 999.52 cv
658.216 993.837 649.514 995.974 641.516 1000 cv
cp
f
992.05 102.13 mo
992.43 102.26 992.95 102.44 993.03 102.47 cv
993.03 102.47 993.14 102.73 993.09 103.52 cv
992.82 103.61 992.56 103.73 992.33 103.91 cv
991.78 104.33 991.43 104.97 991.37 105.66 cv
991.11 108.37 991.91 110.75 993.24 112.88 cv
993.18 113.05 993.13 113.22 993.1 113.4 cv
991.45 124.45 li
989.32 120.13 986.95 115.62 984.33 110.81 cv
980.45 103.68 975.16 97.7002 970.05 91.9101 cv
965.26 86.4897 960.31 80.8799 956.66 74.4399 cv
953.91 69.5898 947.96 57.7002 950.5 49.8501 cv
959.18 43.29 965.89 37.27 971.8 30.5498 cv
974.43 42.75 981.7 62.6299 987.67 73.1299 cv
987.73 73.23 987.81 73.3101 987.88 73.3999 cv
987.52 74.8701 987.07 76.4302 986.59 78.0601 cv
984.46 85.2598 982.04 93.4199 987.57 99.4302 cv
989.12 101.12 990.81 101.7 992.05 102.13 cv
cp
997.52 461.13 mo
995 460.34 992.32 459.9 989.57 459.66 cv
990.07 457.43 990.6 455.16 991.16 452.8 cv
992.83 454.61 995.09 457.35 997.52 461.13 cv
cp
993.5 465.7 mo
992.56 466.37 991.33 467.26 990.48 468.65 cv
988.92 468.5 987.5 469.06 986.41 469.51 cv
985.95 469.71 985.25 469.99 985 469.99 cv
984.58 469.97 983.35 469.47 982.61 469.18 cv
980.89 468.5 979.53 467.95 978.26 468.17 cv
976.6 468.44 975.5 469.6 974.52 470.62 cv
974.1 471.06 973.46 471.73 973.14 471.85 cv
972.42 472.1 971.28 471.92 970.17 471.74 cv
968.72 471.5 967.08 471.24 965.51 471.8 cv
961.86 473.09 960.69 475.74 960.27 478.49 cv
960.19 478.46 960.11 478.41 960.03 478.38 cv
959.95 478.18 959.85 477.98 959.72 477.8 cv
958.94 476.75 958.98 475.42 959.32 473.66 cv
962.18 465.53 963.61 462.76 970.88 463.73 cv
974.1 464.16 977.63 464.23 981.03 464.3 cv
985.47 464.38 990.02 464.47 993.99 465.34 cv
993.85 465.45 993.68 465.57 993.5 465.7 cv
cp
984.04 492.64 mo
983.68 493.22 983.37 493.73 983.13 494.13 cv
974 509.56 965.73 519.48 952.39 530.24 cv
953.89 526.54 954.99 522.74 956.06 518.99 cv
957 515.7 957.9 512.6 959.04 509.6 cv
962.21 501.29 964.05 493.47 964.85 484.99 cv
964.94 484.01 964.97 483.07 965 482.16 cv
965.14 478.21 965.41 477.13 967.17 476.51 cv
967.27 476.48 967.41 476.46 967.57 476.46 cv
968.06 476.46 968.8 476.58 969.38 476.67 cv
970.94 476.92 972.88 477.24 974.79 476.57 cv
976.24 476.06 977.29 474.96 978.14 474.07 cv
978.41 473.79 978.79 473.4 979.04 473.19 cv
979.49 473.32 980.23 473.61 980.76 473.82 cv
982.23 474.41 983.62 474.97 984.88 474.99 cv
986.17 475.01 987.31 474.55 988.32 474.14 cv
988.79 473.94 989.77 473.54 990 473.62 cv
990.8 473.92 991.03 474.33 991.17 474.73 cv
992.57 478.76 986.15 489.21 984.04 492.64 cv
cp
992.05 590.33 mo
992.43 590.46 992.95 590.64 993.03 590.68 cv
993.03 590.68 993.14 590.93 993.09 591.72 cv
992.82 591.81 992.56 591.94 992.33 592.12 cv
991.78 592.54 991.43 593.17 991.37 593.86 cv
991.11 596.58 991.91 598.96 993.24 601.08 cv
993.18 601.25 993.13 601.42 993.1 601.6 cv
991.45 612.65 li
989.32 608.33 986.95 603.82 984.33 599.02 cv
980.45 591.89 975.16 585.9 970.05 580.11 cv
965.26 574.69 960.31 569.08 956.66 562.65 cv
953.91 557.79 947.96 545.9 950.5 538.05 cv
959.18 531.49 965.89 525.48 971.8 518.75 cv
974.43 530.95 981.7 550.84 987.67 561.34 cv
987.73 561.44 987.81 561.51 987.88 561.6 cv
987.52 563.07 987.07 564.63 986.59 566.26 cv
984.46 573.46 982.04 581.62 987.57 587.64 cv
989.12 589.33 990.81 589.91 992.05 590.33 cv
cp
988.56 855.87 mo
987.15 853.1 985.57 850.36 983.87 847.71 cv
983.89 823.49 985 814.1 987.78 800.68 cv
988.85 804.64 989.84 808.66 990.54 813.86 cv
992.5 828.36 991.88 841.86 988.56 855.87 cv
cp
984.5 911.72 mo
983.61 909.37 982.78 906.94 982.02 904.46 cv
983.44 901.33 984.61 898.7 985.66 896.26 cv
985.61 900.51 985.2 905.8 984.5 911.72 cv
cp
993.99 977.14 mo
993.85 977.25 993.68 977.36 993.5 977.49 cv
992.56 978.16 991.33 979.05 990.48 980.45 cv
988.92 980.29 987.5 980.86 986.41 981.31 cv
985.95 981.5 985.25 981.79 985 981.79 cv
984.58 981.76 983.35 981.27 982.61 980.98 cv
980.89 980.29 979.53 979.75 978.26 979.96 cv
976.6 980.24 975.5 981.39 974.52 982.41 cv
974.1 982.86 973.46 983.53 973.13 983.64 cv
972.42 983.89 971.28 983.71 970.17 983.53 cv
968.72 983.3 967.08 983.03 965.51 983.59 cv
961.86 984.88 960.69 987.54 960.27 990.29 cv
960.19 990.25 960.11 990.21 960.03 990.18 cv
959.95 989.97 959.85 989.78 959.72 989.59 cv
958.94 988.54 958.98 987.21 959.32 985.45 cv
962.18 977.33 963.6 974.56 970.88 975.53 cv
974.1 975.96 977.62 976.03 981.03 976.09 cv
985.47 976.18 990.02 976.26 993.99 977.14 cv
cp
957.86 976.21 mo
956.01 975.12 953.48 975.16 951.33 975.37 cv
951.01 975.4 950.69 975.44 950.38 975.48 cv
951.63 967.76 954 960.29 956.89 953.26 cv
958.84 958.03 961.44 965.19 962.01 970.7 cv
962.05 971.08 962.19 971.43 962.38 971.74 cv
960.43 972.78 959 974.34 957.86 976.21 cv
cp
971.57 924.72 mo
972.72 922.73 973.79 920.87 974.76 919.15 cv
976.67 923.85 978.84 928.27 981.31 932.29 cv
979.33 942.74 976.78 953.63 973.81 963.45 cv
970.76 954.63 965.27 940.58 963.96 938.31 cv
966.56 933.39 969.2 928.83 971.57 924.72 cv
cp
923.97 611.28 mo
933.18 616.77 940.85 628.76 943.04 641.11 cv
944.18 647.57 943.86 655.96 941.02 659.49 cv
940.1 660.65 938.98 661.21 937.5 661.27 cv
937.36 661.28 937.21 661.28 937.07 661.28 cv
928.49 661.28 919.48 650.89 913.86 641.05 cv
907.79 630.4 902.6 619.5 904.12 610.61 cv
904.24 610.2 904.36 609.8 904.49 609.4 cv
904.52 609.36 904.56 609.32 904.58 609.28 cv
904.82 608.9 904.92 608.49 904.94 608.08 cv
905.11 607.59 905.29 607.11 905.47 606.63 cv
910.9 605.63 917.11 607.19 923.97 611.28 cv
cp
932.51 669.73 mo
931.16 670.92 926.87 669.94 923.75 669.22 cv
923.18 669.09 922.63 668.96 922.09 668.84 cv
922.06 668.75 922.04 668.66 922 668.56 cv
920.73 665.57 918.46 663.09 916.26 660.69 cv
914.88 659.18 913.58 657.76 912.61 656.31 cv
908.55 650.23 904.99 642.55 903.08 635.77 cv
902.41 633.41 902.02 630.84 901.88 628.15 cv
904.15 634.1 907.25 639.54 909.52 643.53 cv
912.29 648.38 921.47 662.95 933.12 665.79 cv
933.34 667.79 933.12 669.18 932.51 669.73 cv
cp
912.95 667.54 mo
904.02 663.46 895.04 642.85 893.93 636.63 cv
892.58 629.04 893.44 622.92 896.63 617.35 cv
896.96 616.76 897.35 616.2 897.77 615.65 cv
896.37 623.29 896.5 630.83 898.27 637.13 cv
900.34 644.49 904.05 652.49 908.45 659.08 cv
909.63 660.86 911.13 662.49 912.57 664.07 cv
913.85 665.47 915.09 666.81 916.06 668.18 cv
915.07 668.26 914.06 668.05 912.95 667.54 cv
cp
889.34 559.9 mo
887.73 560.29 886.11 560.71 884.49 561.14 cv
876.46 563.25 868.82 565.24 861.34 563.69 cv
862.48 562.93 863.45 562.08 864.15 561.4 cv
864.25 561.4 864.33 561.42 864.42 561.42 cv
864.85 561.42 865.28 561.37 865.73 561.27 cv
869.14 560.46 870.99 556.51 872.09 553.61 cv
872.98 551.29 872.45 548.8 872.03 546.81 cv
871.87 546.03 871.62 544.86 871.67 544.57 cv
871.93 544.04 873.65 542.94 874.68 542.29 cv
876.5 541.12 878.58 539.8 879.82 538.01 cv
881.15 536.1 881.68 533.84 882.2 531.66 cv
882.85 528.91 883.34 527.18 884.53 526.55 cv
884.82 526.49 885.55 526.36 886.15 526.27 cv
889.97 525.64 896.84 524.5 900.16 520.83 cv
904.11 524.2 910.93 525.5 915.33 526.33 cv
916.2 526.49 916.98 526.64 917.62 526.78 cv
925.54 528.55 935.39 532.2 938.8 539.65 cv
923.1 547.69 905.38 555.99 889.34 559.9 cv
cp
857.95 551.43 mo
863.12 545.23 864.76 540.02 862.83 535.88 cv
864.89 534.06 866.31 531.72 866.93 529.1 cv
867.37 527.25 867.39 525.33 867 523.47 cv
870.78 524.18 874.38 524.07 879.33 519.1 cv
880.39 518.04 881.31 516.67 882.28 515.22 cv
885.35 510.66 886.86 509.23 889.21 510.19 cv
890.19 510.6 891.32 510.34 892.03 509.55 cv
892.74 508.76 892.87 507.61 892.36 506.68 cv
890.91 504.03 891.56 502.29 893.25 499.32 cv
895.99 501.99 899.46 502.68 902.4 503.26 cv
906.05 503.99 908.96 504.58 911.02 508.03 cv
908.25 510.41 904.95 510.63 899.58 510.75 cv
898.37 510.78 897.35 511.67 897.17 512.87 cv
897.02 513.79 897.01 514.64 897.1 515.43 cv
897.07 515.59 897.05 515.76 897.05 515.93 cv
897.05 519.4 888.24 520.85 885.34 521.33 cv
883.76 521.59 883.09 521.71 882.53 521.97 cv
878.97 523.61 878.1 527.27 877.33 530.51 cv
876.91 532.32 876.5 534.03 875.72 535.16 cv
875.04 536.12 873.42 537.16 871.99 538.07 cv
869.79 539.47 867.72 540.79 866.98 542.84 cv
866.41 544.4 866.76 546.07 867.14 547.84 cv
867.44 549.27 867.78 550.88 867.42 551.84 cv
865.84 555.99 864.69 556.37 864.57 556.4 cv
863.64 556.64 861.22 554.4 859.61 552.93 cv
859.07 552.44 858.52 551.93 857.95 551.43 cv
cp
855.83 560.62 mo
855.68 560.6 855.44 560.58 855.12 560.08 cv
855.05 559.97 854.96 559.87 854.88 559.78 cv
854.91 558.94 855.38 557.86 856.25 556.64 cv
857.22 557.52 858.16 558.38 859.12 559.12 cv
857.82 560.09 856.57 560.69 855.83 560.62 cv
cp
913.67 488.65 mo
914.81 487.31 915.28 487.26 917.04 487.07 cv
918.11 486.96 919.44 486.82 921.16 486.34 cv
926.38 484.88 930.11 481.73 934.09 478.08 cv
940 472.66 944.01 469.31 951.82 468.55 cv
953.98 468.33 954.87 468.53 955.18 468.63 cv
955.21 469.15 954.94 470.3 954.76 471.09 cv
954.33 472.94 953.79 475.26 954.28 477.59 cv
953.01 477.64 951.79 477.77 950.7 477.89 cv
949.89 477.97 949.12 478.06 948.42 478.1 cv
936.74 478.77 928.53 483.97 923.33 494 cv
921.6 497.35 921.3 497.58 919.37 499.1 cv
919.02 499.38 918.63 499.69 918.17 500.06 cv
918.11 500.07 918.05 500.07 917.99 500.08 cv
917.31 500.16 916.04 500.31 914.83 501.44 cv
914.26 501.98 913.95 502.64 913.75 503.3 cv
912.64 502.04 911.41 501.14 910.14 500.46 cv
909.68 498.38 911.68 490.97 913.67 488.65 cv
cp
975.21 667.71 mo
977.28 678.23 979.58 691.91 982.08 708.57 cv
982.96 714.4 982.8 720.52 982.64 726.45 cv
982.59 728.12 li
981.21 731.07 979.69 734.01 978.08 737.04 cv
974.39 726.52 972 714.14 970.7 699 cv
970.12 692.27 972.33 679.01 975.21 667.71 cv
cp
988.84 637.87 mo
993.62 656 994.32 676.17 990.94 698.19 cv
989.94 691.2 988.64 684.27 987.3 677.11 cv
986.73 674.11 986.17 671.09 985.62 668.04 cv
984.61 662.42 982.9 654.38 981.71 649.2 cv
983.76 645.08 985.96 641.39 988.84 637.87 cv
cp
982.37 875.6 mo
980.86 879.64 979.4 883.07 977.63 886.84 cv
975.3 875.04 973.93 862.95 973.13 852.16 cv
977.71 859.18 980.36 867.27 982.37 875.6 cv
cp
974.43 835.39 mo
973.83 834.74 973.23 834.1 972.62 833.47 cv
972.13 816.64 972.49 802.09 972.63 796.6 cv
972.84 788.16 974.78 778.45 978.38 767.68 cv
979.91 771.1 981.54 774.57 983.28 778.1 cv
982.68 780.7 li
978.78 797.72 975.08 813.9 974.43 835.39 cv
cp
959.45 484.4 mo
959.54 484.63 959.67 484.84 959.81 485.03 cv
959.04 492.85 957.31 500.11 954.37 507.81 cv
953.15 511.02 952.19 514.37 951.26 517.61 cv
949.24 524.62 947.33 531.26 942.99 536.89 cv
938.51 528.06 927.54 523.87 918.7 521.9 cv
918.02 521.75 917.19 521.59 916.25 521.42 cv
909.83 520.2 903.87 518.65 902.41 515.67 cv
908.16 515.43 913.19 514.48 917.48 508.17 cv
918.04 507.34 918.21 506.39 918.37 505.55 cv
918.39 505.4 918.42 505.22 918.46 505.06 cv
918.5 505.05 918.54 505.05 918.58 505.04 cv
919.19 504.97 920.21 504.85 921.19 504.05 cv
921.68 503.65 922.1 503.32 922.47 503.03 cv
924.85 501.15 925.64 500.42 927.77 496.31 cv
932.21 487.74 938.67 483.67 948.71 483.09 cv
949.49 483.04 950.34 482.95 951.24 482.86 cv
956.2 482.32 958.69 482.42 959.45 484.4 cv
cp
956.83 462.47 mo
956.98 462.98 957.16 463.54 957.38 464.14 cv
956.96 463.95 956.5 463.81 956.04 463.71 cv
956.3 463.29 956.57 462.88 956.83 462.47 cv
cp
974.82 431.1 mo
976.65 435.57 978.71 439.77 981.03 443.62 cv
979.63 448.81 977.91 454.05 975.88 459.14 cv
974.38 459.07 972.93 458.96 971.54 458.78 cv
970.17 458.59 968.94 458.54 967.81 458.59 cv
966.82 455.01 965.25 452.26 964.15 450.42 cv
968 443.86 971.58 437.41 974.82 431.1 cv
cp
920.57 302.51 mo
919.36 303.94 919.07 305.68 918.81 307.21 cv
918.67 308.07 918.53 308.88 918.26 309.4 cv
915.76 314.35 911.16 318.04 905.95 319.28 cv
905.23 319.45 904.06 319.51 902.92 319.56 cv
900.87 319.66 898.74 319.77 897.08 320.5 cv
894.83 321.5 892.9 324.23 890.85 327.11 cv
889.58 328.9 886.95 332.61 885.91 332.72 cv
885.91 332.72 885.67 332.62 885.3 332.11 cv
884.77 331.09 885 326.73 885.12 324.39 cv
885.24 322.12 885.34 320.17 885.16 318.82 cv
884.79 315.94 884.19 313.12 883.6 310.4 cv
883.16 308.35 882.71 306.23 882.37 304.14 cv
881.35 297.89 879.99 289.41 881.95 282.9 cv
882.54 282.77 883.15 282.61 883.76 282.42 cv
887.39 281.26 890.99 279.11 894.17 276.42 cv
894.56 276.68 894.94 276.95 895.34 277.24 cv
896.45 278.04 897.71 278.95 899.2 279.55 cv
902.93 281.05 906.21 280.62 909.37 280.21 cv
910.86 280.02 912.31 279.84 913.75 279.83 cv
923.41 279.84 926.95 284.18 932.29 290.75 cv
932.85 291.43 933.41 292.12 933.99 292.82 cv
933.22 293.6 932.56 294.32 931.96 294.97 cv
930.25 296.83 929.01 298.17 926.49 299.62 cv
926.39 299.67 926.01 299.73 925.74 299.77 cv
924.52 299.96 922.47 300.27 920.57 302.51 cv
cp
880.16 332.01 mo
878.79 333.2 876.66 334.24 874.57 334.71 cv
872.41 335.2 870.89 334.31 868.6 332.81 cv
866.57 331.47 864.27 329.96 861.14 330.06 cv
860.33 330.09 859.58 330.48 859.13 331.15 cv
858.68 331.82 858.58 332.64 858.87 333.4 cv
858.88 333.44 858.89 333.52 858.9 333.6 cv
850.72 335.3 839.4 331.03 831.84 325.52 cv
829.65 323.93 829.09 322.64 828.15 320.51 cv
827.6 319.26 826.97 317.85 825.92 316.18 cv
825.49 315.49 825.05 314.85 824.63 314.24 cv
822.82 311.62 822.1 310.4 822.79 307.96 cv
825.44 307.29 828.14 306.95 830.93 306.6 cv
834.48 306.16 838.15 305.7 841.87 304.5 cv
851.75 301.31 866.4 290.94 873.47 282.34 cv
874.48 282.77 875.56 283.06 876.7 283.2 cv
875.08 290.44 876.42 298.71 877.43 304.94 cv
877.79 307.15 878.26 309.33 878.71 311.45 cv
879.3 314.19 879.86 316.79 880.2 319.46 cv
880.32 320.36 880.22 322.28 880.12 324.13 cv
879.96 327.4 879.87 330.02 880.16 332.01 cv
cp
818.64 303.99 mo
818.52 303.36 818.4 302.73 818.28 302.09 cv
817.48 297.91 816.66 293.58 815.32 289.37 cv
815.01 288.42 814.65 287.45 814.27 286.42 cv
813.19 283.52 811.97 280.24 812.32 277.68 cv
812.47 276.55 812.66 276.26 812.95 275.82 cv
813.22 275.41 813.59 274.85 813.85 273.98 cv
815.44 268.66 814.34 263.88 813.28 259.26 cv
812.67 256.56 812.03 253.77 811.91 250.84 cv
811.63 243.37 813.34 231.57 817.95 226.97 cv
821.79 227.97 824.88 223.8 827.23 220.65 cv
828.57 218.83 830.61 216.09 831.75 215.96 cv
833.85 215.72 837.21 218.46 839.58 220.58 cv
838.19 220.91 836.77 220.61 835.15 219.62 cv
834.08 218.98 832.71 219.21 831.92 220.17 cv
831.38 220.82 831.22 221.68 831.44 222.45 cv
831.33 223.51 830.87 224.55 830.13 225.46 cv
826.88 229.44 824.99 233.33 823.59 238.9 cv
823.52 239.18 823.44 239.5 823.35 239.83 cv
822.7 242.28 821.8 245.63 822.76 248.25 cv
823.4 249.97 825.05 250.55 826.03 250.9 cv
826.13 250.93 826.24 250.97 826.35 251.01 cv
826.5 252.45 825.65 254.24 824.75 256.12 cv
823.35 259.05 821.76 262.36 823.32 265.89 cv
826.58 273.25 837.04 271.99 847.16 270.77 cv
854.61 269.87 863.05 268.85 866.55 271.74 cv
866.6 271.79 866.66 271.82 866.72 271.86 cv
866.7 274.59 867.48 277.19 869.42 279.38 cv
862.96 287.1 849.08 296.92 840.34 299.74 cv
837.07 300.8 833.79 301.21 830.32 301.64 cv
826.51 302.11 822.6 302.6 818.64 303.99 cv
cp
851.57 216.11 mo
852.16 215.31 852.72 214.54 853.25 213.88 cv
857.7 208.36 866.5 200.66 873.54 197.32 cv
876.41 195.96 878.81 195.94 880.89 197.26 cv
887.76 201.61 891.04 218.89 892.04 235.85 cv
891.94 237.27 891.96 238.69 892.18 240.1 cv
892.19 240.2 892.23 240.29 892.25 240.39 cv
892.32 242.36 892.36 244.31 892.38 246.21 cv
884.76 245.52 878.52 250.81 876.4 252.88 cv
873.01 256.19 869.32 261.31 867.64 266.54 cv
862.31 263.9 854.32 264.86 846.56 265.8 cv
838.25 266.8 829.66 267.84 827.89 263.87 cv
827.3 262.54 828.02 260.87 829.26 258.28 cv
830.58 255.52 832.08 252.38 831 248.97 cv
830.42 247.14 828.72 246.54 827.7 246.18 cv
827.6 246.14 827.47 246.1 827.35 246.06 cv
827.21 244.76 827.83 242.44 828.18 241.12 cv
828.28 240.76 828.37 240.42 828.45 240.11 cv
829.65 235.31 831.25 231.98 834 228.62 cv
834.82 227.63 835.44 226.53 835.86 225.37 cv
843.23 227.44 848.35 220.48 851.57 216.11 cv
cp
847.32 201.52 mo
849.73 198.88 852.95 198.38 856.67 197.81 cv
860.04 197.29 863.52 196.75 866.69 194.54 cv
867.39 194.05 867.75 193.36 868.09 192.69 cv
868.3 192.27 868.66 191.57 868.95 191.38 cv
870.67 190.27 872.05 190.3 874.56 190.35 cv
874.76 190.36 li
876.17 190.39 877.63 190.83 879.13 191.4 cv
877 191.11 874.42 191.38 871.4 192.81 cv
863.67 196.47 854.69 204.35 849.83 210.18 cv
849.34 209.58 848.84 209.02 848.38 208.49 cv
845.36 205.09 844.81 204.27 847.32 201.52 cv
cp
888.34 194.33 mo
890.9 194.47 892.65 194.19 894.2 193.95 cv
896.2 193.63 897.65 193.4 900.54 194.29 cv
902.85 194.99 905.17 195.32 907.21 195.61 cv
908.44 195.78 909.6 195.94 910.66 196.17 cv
913.98 196.88 916.65 196.9 918.8 196.91 cv
920.28 196.92 921.95 196.93 922.3 197.29 cv
922.43 197.43 922.65 197.81 922.8 198.85 cv
919.27 197.5 917.9 198.25 913.71 201.55 cv
909.29 205.01 905.29 209.23 902.14 213.73 cv
900.38 216.24 897.96 219.7 895.92 223.62 cv
894.3 211.22 890.94 198.21 884.02 193.36 cv
885.43 193.86 886.86 194.25 888.34 194.33 cv
cp
931.61 211.16 mo
934.22 214.03 936.93 217 941.79 218.68 cv
944.8 219.72 944.8 219.72 945.63 221.11 cv
946.05 221.8 946.61 222.74 947.51 224.01 cv
949.39 226.69 951.65 228.58 954.07 230.21 cv
951.4 233.72 951.99 237.97 952.49 241.52 cv
950.72 241.61 949.04 241.97 947.48 242.3 cv
945.43 242.74 943.49 243.16 941.73 242.91 cv
940.56 242.74 939.45 242.15 938.17 241.46 cv
936.75 240.7 935.14 239.84 933.17 239.44 cv
925.38 237.88 919.44 241.83 914.21 245.31 cv
910.07 248.06 906.18 250.66 901.75 250.47 cv
901.21 249.93 900.63 249.42 899.95 248.98 cv
899.09 248.4 898.23 247.94 897.38 247.56 cv
897.38 244.9 897.32 240.77 897.04 235.93 cv
897.7 228.79 903.12 221.05 906.23 216.6 cv
909.11 212.49 912.76 208.65 916.85 205.43 cv
918.27 204.32 919.61 203.27 920.05 203.19 cv
920.32 203.13 921.58 203.72 922.68 204.23 cv
923.51 204.62 li
927.18 206.31 929.33 208.67 931.61 211.16 cv
cp
948.94 268.14 mo
948.27 269.08 947.63 269.98 947.09 270.81 cv
946.6 271.54 946.54 272.48 946.92 273.27 cv
947.26 273.97 947.9 274.47 948.66 274.63 cv
946.79 278.72 941.36 286.77 938.23 290.1 cv
937.52 289.25 936.84 288.41 936.17 287.59 cv
930.6 280.75 925.79 274.84 913.75 274.83 cv
911.94 274.83 910.3 275.05 908.73 275.25 cv
905.97 275.61 903.58 275.92 901.07 274.91 cv
900.14 274.54 899.23 273.88 898.27 273.19 cv
898.13 273.08 897.98 272.98 897.83 272.87 cv
901.49 268.82 904.1 264.13 904.7 259.84 cv
904.92 258.23 904.84 256.72 904.5 255.32 cv
909.19 254.66 913.14 252.03 916.98 249.47 cv
921.84 246.24 926.42 243.19 932.18 244.34 cv
933.43 244.59 934.58 245.21 935.8 245.87 cv
937.29 246.66 938.98 247.57 941.03 247.86 cv
943.67 248.24 946.14 247.71 948.53 247.19 cv
949 247.09 949.46 247 949.91 246.91 cv
950.02 247.05 950.14 247.18 950.28 247.3 cv
951.27 248.57 954.42 254.46 954.62 255.84 cv
955.03 259.55 951.66 264.31 948.94 268.14 cv
cp
923.97 123.07 mo
933.18 128.57 940.85 140.56 943.04 152.91 cv
944.18 159.37 943.86 167.76 941.02 171.29 cv
940.1 172.44 938.98 173.01 937.5 173.07 cv
937.36 173.08 937.21 173.08 937.07 173.08 cv
928.49 173.08 919.48 162.69 913.86 152.84 cv
907.79 142.2 902.6 131.29 904.12 122.41 cv
904.24 122 904.36 121.6 904.49 121.19 cv
904.52 121.15 904.56 121.12 904.58 121.07 cv
904.82 120.7 904.92 120.29 904.94 119.88 cv
905.11 119.39 905.29 118.91 905.47 118.42 cv
910.9 117.42 917.11 118.98 923.97 123.07 cv
cp
932.51 181.52 mo
931.16 182.72 926.88 181.73 923.75 181.01 cv
923.18 180.88 922.63 180.76 922.09 180.64 cv
922.06 180.55 922.04 180.45 922 180.36 cv
920.73 177.36 918.46 174.88 916.26 172.49 cv
914.88 170.98 913.58 169.56 912.61 168.11 cv
908.55 162.02 904.99 154.35 903.08 147.57 cv
902.41 145.21 902.02 142.64 901.88 139.94 cv
904.15 145.9 907.25 151.34 909.52 155.32 cv
912.29 160.18 921.47 174.74 933.12 177.59 cv
933.34 179.59 933.12 180.97 932.51 181.52 cv
cp
912.95 179.34 mo
904.02 175.26 895.04 154.65 893.93 148.43 cv
892.58 140.84 893.44 134.71 896.63 129.15 cv
896.96 128.56 897.35 128 897.77 127.44 cv
896.37 135.09 896.5 142.63 898.27 148.92 cv
900.34 156.29 904.05 164.29 908.45 170.88 cv
909.63 172.65 911.13 174.29 912.57 175.86 cv
913.85 177.26 915.09 178.61 916.06 179.98 cv
915.07 180.06 914.06 179.84 912.95 179.34 cv
cp
889.34 71.6899 mo
887.73 72.0801 886.12 72.5098 884.5 72.9302 cv
876.46 75.04 868.83 77.04 861.34 75.4897 cv
862.48 74.7197 863.45 73.8701 864.15 73.1899 cv
864.25 73.2002 864.33 73.2197 864.42 73.2197 cv
864.85 73.2197 865.28 73.1699 865.73 73.0601 cv
869.14 72.25 870.99 68.3101 872.09 65.4101 cv
872.98 63.0801 872.45 60.6001 872.03 58.6001 cv
871.87 57.8301 871.62 56.6602 871.67 56.3599 cv
871.93 55.8301 873.65 54.7397 874.68 54.0801 cv
876.5 52.9102 878.58 51.5898 879.82 49.8101 cv
881.15 47.8999 881.68 45.6401 882.2 43.46 cv
882.85 40.71 883.34 38.9697 884.53 38.3501 cv
884.82 38.2798 885.55 38.1602 886.15 38.0601 cv
889.97 37.4302 896.84 36.2998 900.16 32.6201 cv
904.11 36 910.93 37.29 915.33 38.1201 cv
916.2 38.29 916.98 38.4399 917.62 38.5801 cv
925.54 40.3398 935.39 43.9897 938.8 51.4502 cv
923.1 59.48 905.38 67.79 889.34 71.6899 cv
cp
857.95 63.23 mo
863.12 57.0298 864.76 51.8101 862.83 47.6699 cv
864.89 45.8599 866.31 43.52 866.93 40.8999 cv
867.37 39.04 867.39 37.1299 867 35.27 cv
870.78 35.98 874.38 35.8599 879.33 30.8901 cv
880.39 29.8301 881.31 28.46 882.28 27.0098 cv
885.35 22.46 886.86 21.02 889.21 21.9897 cv
890.19 22.3901 891.32 22.1299 892.03 21.3398 cv
892.74 20.5601 892.87 19.4102 892.36 18.48 cv
890.91 15.8301 891.56 14.0898 893.25 11.1099 cv
895.99 13.79 899.46 14.48 902.4 15.0601 cv
906.05 15.7798 908.96 16.3701 911.02 19.8301 cv
908.25 22.21 904.95 22.4199 899.58 22.5498 cv
898.37 22.5801 897.35 23.4697 897.17 24.6602 cv
897.02 25.5801 897.01 26.4399 897.1 27.23 cv
897.07 27.3901 897.05 27.5498 897.05 27.7197 cv
897.05 31.2002 888.24 32.6499 885.34 33.1299 cv
883.76 33.3901 883.09 33.5 882.53 33.7598 cv
878.97 35.3999 878.1 39.0698 877.33 42.2998 cv
876.91 44.1099 876.5 45.8198 875.71 46.9502 cv
875.04 47.9199 873.42 48.9502 871.99 49.8701 cv
869.79 51.2598 867.72 52.5898 866.98 54.6401 cv
866.41 56.2002 866.76 57.8701 867.14 59.6401 cv
867.44 61.0601 867.78 62.6802 867.42 63.6401 cv
865.84 67.79 864.69 68.1699 864.57 68.2002 cv
863.64 68.4199 861.22 66.2002 859.61 64.73 cv
859.07 64.23 858.52 63.73 857.95 63.23 cv
cp
855.83 72.4101 mo
855.68 72.3999 855.44 72.3799 855.12 71.8701 cv
855.05 71.7598 854.96 71.6699 854.88 71.5801 cv
854.91 70.7397 855.38 69.6601 856.25 68.4302 cv
857.22 69.3101 858.16 70.1699 859.12 70.9199 cv
857.82 71.8901 856.57 72.48 855.83 72.4101 cv
cp
975.21 179.51 mo
977.28 190.03 979.58 203.71 982.08 220.36 cv
982.96 226.19 982.8 232.32 982.64 238.25 cv
982.59 239.92 li
981.21 242.87 979.69 245.8 978.08 248.84 cv
974.39 238.31 972 225.94 970.7 210.8 cv
970.12 204.06 972.33 190.8 975.21 179.51 cv
cp
985.62 179.83 mo
984.61 174.22 982.9 166.18 981.71 160.99 cv
983.76 156.88 985.96 153.19 988.84 149.67 cv
993.62 167.79 994.32 187.96 990.94 209.99 cv
989.94 203 988.64 196.06 987.3 188.91 cv
986.73 185.9 986.17 182.88 985.62 179.83 cv
cp
988.56 367.66 mo
987.15 364.89 985.57 362.16 983.87 359.5 cv
983.89 335.28 985 325.89 987.78 312.48 cv
988.85 316.44 989.84 320.46 990.54 325.66 cv
992.5 340.15 991.88 353.66 988.56 367.66 cv
cp
982.68 292.49 mo
978.78 309.51 975.08 325.7 974.43 347.19 cv
973.83 346.53 973.23 345.89 972.62 345.27 cv
972.13 328.43 972.49 313.88 972.63 308.39 cv
972.84 299.96 974.78 290.24 978.38 279.47 cv
979.91 282.9 981.54 286.37 983.28 289.9 cv
982.68 292.49 li
cp
985.93 407.44 mo
986.1 412.3 985.77 418.16 984.91 424.56 cv
983.86 421.88 982.9 419.11 982.02 416.25 cv
983.56 412.86 984.81 410.06 985.93 407.44 cv
cp
977.63 398.64 mo
975.3 386.84 973.93 374.74 973.13 363.96 cv
977.71 370.97 980.36 379.07 982.38 387.4 cv
980.86 391.44 979.4 394.86 977.63 398.64 cv
cp
997.5 605.97 mo
997.77 606.21 998.03 606.44 998.3 606.68 cv
996.55 615.47 li
996.37 615.6 996.2 615.74 996.02 615.87 cv
997.5 605.97 li
cp
919.24 917.25 mo
915.14 927.83 903.69 933.53 891.38 931.1 cv
884.15 929.67 880.86 924.74 877.37 919.53 cv
874.24 914.84 870.78 909.68 864.24 907.54 cv
866.06 905.99 867.69 904.13 868.96 901.71 cv
871.76 896.38 872.07 891.28 871.31 886.44 cv
876.1 887.14 881.85 884.19 886.45 881.84 cv
889.11 880.48 891.61 879.19 893.38 878.79 cv
902.33 876.77 910.65 879.74 916.21 886.94 cv
923 895.73 922.62 908.5 919.24 917.25 cv
cp
855.54 907.35 mo
852.66 905.09 851.06 901.59 851.11 897.69 cv
851.76 896.55 852.31 895.39 852.73 894.22 cv
855.17 895.23 857.45 896.04 859.65 896.82 cv
861.33 897.42 863.05 898.03 864.84 898.73 cv
864.74 898.95 864.65 899.16 864.54 899.38 cv
862.55 903.15 859.19 905.28 855.54 907.35 cv
cp
846.62 913.12 mo
846.58 912.81 846.55 912.51 846.51 912.21 cv
846.07 908.54 845.62 904.76 846.85 903.09 cv
847.65 905.71 849.05 908.06 850.97 909.98 cv
849.45 910.91 847.97 911.91 846.62 913.12 cv
cp
854.39 885.31 mo
855.9 883.21 860.96 882.34 865.52 883.33 cv
866.51 886.87 867.03 890.38 866.4 893.97 cv
864.63 893.29 862.96 892.69 861.32 892.11 cv
858.87 891.24 856.54 890.41 853.97 889.32 cv
854.18 887.98 854.32 886.64 854.39 885.31 cv
cp
861.13 870.18 mo
861.77 872.35 862.52 874.48 863.28 876.59 cv
863.46 877.07 863.63 877.55 863.8 878.02 cv
860.54 877.72 857.2 878.1 854.5 879.24 cv
856.29 875.74 858.57 871.82 861.13 870.18 cv
cp
859.67 861.53 mo
859.69 862.75 859.81 863.95 859.99 865.14 cv
858.33 865.84 856.86 867 855.53 868.46 cv
856.26 865.98 857.51 863.66 859.67 861.53 cv
cp
926.49 787.82 mo
926.39 787.87 926.01 787.93 925.74 787.97 cv
924.52 788.16 922.47 788.48 920.57 790.72 cv
919.36 792.14 919.07 793.88 918.81 795.41 cv
918.67 796.27 918.53 797.08 918.26 797.61 cv
915.76 802.56 911.16 806.25 905.95 807.48 cv
905.23 807.65 904.06 807.71 902.92 807.76 cv
900.87 807.87 898.74 807.97 897.08 808.71 cv
894.83 809.71 892.9 812.43 890.85 815.31 cv
889.58 817.1 886.95 820.81 885.91 820.93 cv
885.91 820.93 885.67 820.82 885.3 820.31 cv
884.77 819.3 885 814.94 885.12 812.59 cv
885.24 810.33 885.34 808.38 885.16 807.02 cv
884.79 804.15 884.19 801.33 883.6 798.61 cv
883.16 796.55 882.71 794.43 882.37 792.34 cv
881.35 786.09 879.99 777.62 881.95 771.1 cv
882.54 770.97 883.15 770.82 883.76 770.62 cv
887.39 769.46 891 767.31 894.17 764.62 cv
894.56 764.88 894.94 765.16 895.34 765.45 cv
896.45 766.25 897.71 767.15 899.2 767.75 cv
902.93 769.26 906.2 768.83 909.37 768.42 cv
910.86 768.22 912.26 768.04 913.75 768.04 cv
923.41 768.04 926.95 772.38 932.29 778.95 cv
932.85 779.63 933.41 780.32 933.99 781.03 cv
933.22 781.8 932.56 782.52 931.96 783.18 cv
930.25 785.03 929.01 786.38 926.49 787.82 cv
cp
880.16 820.22 mo
878.79 821.41 876.66 822.45 874.57 822.92 cv
872.4 823.4 870.89 822.51 868.6 821.01 cv
866.57 819.68 864.27 818.17 861.14 818.27 cv
860.33 818.29 859.58 818.68 859.13 819.35 cv
858.68 820.03 858.58 820.85 858.87 821.6 cv
858.88 821.65 858.89 821.72 858.9 821.81 cv
850.72 823.51 839.4 819.24 831.84 813.73 cv
829.65 812.13 829.09 810.84 828.15 808.71 cv
827.6 807.46 826.97 806.05 825.92 804.38 cv
825.49 803.69 825.05 803.05 824.63 802.45 cv
822.82 799.82 822.1 798.61 822.79 796.17 cv
825.44 795.49 828.14 795.15 830.93 794.8 cv
834.48 794.36 838.15 793.91 841.87 792.71 cv
851.75 789.52 866.4 779.14 873.47 770.54 cv
874.48 770.98 875.56 771.26 876.7 771.4 cv
875.08 778.64 876.42 786.92 877.43 793.14 cv
877.79 795.36 878.26 797.54 878.71 799.65 cv
879.3 802.4 879.86 804.99 880.2 807.67 cv
880.32 808.57 880.22 810.48 880.12 812.33 cv
879.96 815.6 879.87 818.22 880.16 820.22 cv
cp
818.64 792.2 mo
818.52 791.56 818.4 790.93 818.28 790.3 cv
817.48 786.11 816.66 781.79 815.32 777.58 cv
815.01 776.62 814.65 775.65 814.27 774.63 cv
813.19 771.73 811.97 768.44 812.32 765.88 cv
812.47 764.76 812.66 764.47 812.95 764.02 cv
813.22 763.61 813.59 763.05 813.85 762.19 cv
815.44 756.87 814.34 752.09 813.28 747.46 cv
812.67 744.76 812.03 741.97 811.91 739.04 cv
811.63 731.57 813.34 719.77 817.95 715.17 cv
821.79 716.17 824.88 712.01 827.23 708.85 cv
828.57 707.04 830.61 704.3 831.75 704.17 cv
833.85 703.91 837.21 706.66 839.58 708.78 cv
838.19 709.11 836.77 708.82 835.15 707.83 cv
834.08 707.18 832.71 707.41 831.92 708.37 cv
831.38 709.03 831.22 709.89 831.44 710.66 cv
831.33 711.72 830.87 712.76 830.13 713.67 cv
826.88 717.64 824.99 721.53 823.59 727.11 cv
823.52 727.39 823.44 727.7 823.35 728.03 cv
822.7 730.48 821.8 733.83 822.76 736.45 cv
823.4 738.17 825.05 738.75 826.03 739.1 cv
826.13 739.13 826.24 739.17 826.35 739.21 cv
826.5 740.66 825.65 742.44 824.75 744.32 cv
823.35 747.25 821.76 750.57 823.32 754.1 cv
826.58 761.45 837.04 760.19 847.16 758.97 cv
854.61 758.07 863.05 757.05 866.55 759.95 cv
866.6 759.99 866.66 760.02 866.72 760.06 cv
866.7 762.8 867.48 765.39 869.42 767.59 cv
862.95 775.3 849.08 785.13 840.34 787.95 cv
837.07 789 833.79 789.41 830.32 789.84 cv
826.51 790.32 822.6 790.8 818.64 792.2 cv
cp
851.57 704.31 mo
852.16 703.51 852.72 702.75 853.25 702.08 cv
857.7 696.57 866.5 688.86 873.54 685.53 cv
876.41 684.17 878.81 684.15 880.89 685.46 cv
887.76 689.81 891.04 707.1 892.04 724.05 cv
891.94 725.47 891.96 726.9 892.18 728.3 cv
892.19 728.4 892.23 728.5 892.25 728.59 cv
892.32 730.56 892.36 732.51 892.38 734.42 cv
884.76 733.72 878.52 739.01 876.4 741.08 cv
873.01 744.39 869.32 749.51 867.64 754.74 cv
862.31 752.1 854.32 753.07 846.56 754.01 cv
838.25 755.01 829.66 756.05 827.89 752.07 cv
827.3 750.75 828.02 749.08 829.26 746.48 cv
830.58 743.72 832.08 740.59 831 737.17 cv
830.42 735.35 828.72 734.74 827.7 734.38 cv
827.6 734.35 827.47 734.3 827.35 734.26 cv
827.21 732.96 827.83 730.64 828.18 729.33 cv
828.28 728.96 828.37 728.63 828.45 728.32 cv
829.65 723.52 831.25 720.19 834 716.83 cv
834.82 715.83 835.44 714.74 835.86 713.58 cv
843.23 715.64 848.35 708.69 851.57 704.31 cv
cp
847.32 689.73 mo
849.74 687.08 852.95 686.59 856.67 686.01 cv
860.04 685.49 863.52 684.96 866.69 682.75 cv
867.39 682.26 867.75 681.57 868.08 680.9 cv
868.3 680.48 868.66 679.77 868.95 679.59 cv
870.68 678.47 872.06 678.5 874.56 678.56 cv
874.76 678.56 li
876.17 678.59 877.63 679.03 879.13 679.61 cv
877 679.31 874.42 679.58 871.4 681.01 cv
863.67 684.67 854.69 692.55 849.83 698.38 cv
849.34 697.79 848.84 697.22 848.38 696.7 cv
845.36 693.29 844.81 692.47 847.32 689.73 cv
cp
888.34 682.54 mo
890.9 682.68 892.65 682.4 894.2 682.15 cv
896.2 681.83 897.65 681.6 900.54 682.49 cv
902.85 683.2 905.17 683.53 907.22 683.81 cv
908.44 683.99 909.6 684.15 910.66 684.38 cv
913.98 685.08 916.65 685.1 918.8 685.12 cv
920.28 685.12 921.95 685.14 922.3 685.5 cv
922.43 685.64 922.65 686.01 922.8 687.05 cv
919.28 685.7 917.9 686.45 913.71 689.75 cv
909.3 693.22 905.3 697.43 902.14 701.93 cv
900.38 704.44 897.96 707.9 895.92 711.83 cv
894.3 699.42 890.94 686.41 884.02 681.57 cv
885.43 682.07 886.86 682.46 888.34 682.54 cv
cp
931.6 699.37 mo
934.22 702.24 936.93 705.2 941.79 706.88 cv
944.8 707.92 944.8 707.92 945.63 709.32 cv
946.05 710 946.61 710.94 947.51 712.22 cv
949.39 714.9 951.65 716.78 954.07 718.41 cv
951.4 721.93 951.99 726.17 952.49 729.72 cv
950.72 729.81 949.04 730.18 947.48 730.51 cv
945.43 730.95 943.49 731.37 941.73 731.11 cv
940.56 730.95 939.45 730.35 938.17 729.66 cv
936.75 728.9 935.14 728.04 933.17 727.64 cv
925.38 726.08 919.44 730.03 914.21 733.52 cv
910.07 736.27 906.18 738.87 901.75 738.67 cv
901.21 738.13 900.63 737.62 899.95 737.18 cv
899.09 736.61 898.23 736.14 897.38 735.76 cv
897.38 733.1 897.32 728.98 897.04 724.13 cv
897.7 717 903.12 709.25 906.23 704.8 cv
909.11 700.7 912.76 696.85 916.85 693.64 cv
918.27 692.52 919.61 691.47 920.05 691.39 cv
920.32 691.34 921.58 691.92 922.68 692.44 cv
923.51 692.82 li
927.18 694.52 929.33 696.87 931.6 699.37 cv
cp
948.94 756.34 mo
948.27 757.29 947.63 758.19 947.09 759.01 cv
946.6 759.75 946.54 760.68 946.92 761.47 cv
947.26 762.17 947.9 762.68 948.66 762.83 cv
946.79 766.92 941.36 774.98 938.23 778.3 cv
937.52 777.45 936.84 776.62 936.17 775.79 cv
930.6 768.95 925.79 763.04 913.75 763.04 cv
911.94 763.04 910.31 763.25 908.73 763.46 cv
905.96 763.82 903.58 764.13 901.07 763.12 cv
900.14 762.74 899.23 762.09 898.27 761.39 cv
898.13 761.29 897.98 761.18 897.83 761.08 cv
901.49 757.02 904.1 752.34 904.7 748.04 cv
904.92 746.44 904.84 744.92 904.5 743.52 cv
909.19 742.86 913.14 740.24 916.98 737.68 cv
921.83 734.44 926.42 731.39 932.18 732.55 cv
933.43 732.8 934.58 733.42 935.8 734.07 cv
937.29 734.87 938.98 735.77 941.03 736.07 cv
943.67 736.44 946.14 735.91 948.53 735.4 cv
949 735.3 949.46 735.2 949.91 735.11 cv
950.02 735.25 950.14 735.39 950.28 735.5 cv
951.27 736.78 954.42 742.66 954.62 744.05 cv
955.03 747.76 951.66 752.52 948.94 756.34 cv
cp
919.24 429.05 mo
915.14 439.62 903.69 445.32 891.38 442.89 cv
884.15 441.47 880.86 436.54 877.37 431.32 cv
874.24 426.63 870.78 421.47 864.24 419.33 cv
866.06 417.79 867.69 415.92 868.96 413.5 cv
871.76 408.18 872.07 403.07 871.31 398.24 cv
876.1 398.93 881.85 395.99 886.45 393.63 cv
889.11 392.27 891.61 390.99 893.38 390.59 cv
902.33 388.57 910.65 391.54 916.21 398.73 cv
923 407.53 922.62 420.3 919.24 429.05 cv
cp
855.54 419.15 mo
852.66 416.88 851.06 413.39 851.11 409.48 cv
851.76 408.34 852.31 407.19 852.73 406.02 cv
855.17 407.02 857.45 407.84 859.65 408.62 cv
861.33 409.21 863.05 409.83 864.84 410.52 cv
864.74 410.74 864.65 410.96 864.54 411.17 cv
862.55 414.95 859.19 417.08 855.54 419.15 cv
cp
846.62 424.92 mo
846.58 424.61 846.55 424.31 846.51 424 cv
846.07 420.33 845.62 416.55 846.85 414.88 cv
847.65 417.5 849.05 419.86 850.97 421.78 cv
849.45 422.7 847.97 423.71 846.62 424.92 cv
cp
854.39 397.1 mo
855.9 395.01 860.96 394.14 865.52 395.13 cv
866.51 398.67 867.03 402.18 866.4 405.76 cv
864.63 405.08 862.96 404.49 861.32 403.91 cv
858.87 403.04 856.54 402.2 853.97 401.12 cv
854.18 399.78 854.32 398.43 854.39 397.1 cv
cp
854.5 391.03 mo
856.29 387.54 858.57 383.62 861.13 381.98 cv
861.77 384.14 862.52 386.28 863.28 388.39 cv
863.46 388.87 863.63 389.34 863.8 389.81 cv
860.54 389.51 857.2 389.89 854.5 391.04 cv
854.5 391.03 li
cp
859.67 373.33 mo
859.69 374.54 859.81 375.75 859.99 376.94 cv
858.33 377.64 856.86 378.8 855.53 380.26 cv
856.26 377.78 857.51 375.46 859.67 373.33 cv
cp
993.21 72.3101 mo
993.57 70.2002 993.58 68.25 993.59 66.3701 cv
993.61 62.9199 993.63 60.2002 995.67 57.3799 cv
997.08 55.4302 998.58 53.73 1000 52.3999 cv
1000 46.1099 li
996.47 48.2598 993.38 52.0498 991.83 54.1602 cv
986.46 46.79 983.07 25.4102 982.14 16.9502 cv
983.9 14.29 985.65 11.4897 987.44 8.46973 cv
987.66 8.08984 987.96 7.60986 988.3 7.0498 cv
989.75 4.68994 991.15 2.31982 992.36 0 cv
986.67 0 li
985.63 1.8501 984.65 3.43994 984.04 4.43018 cv
983.68 5.02002 983.37 5.52002 983.13 5.91992 cv
974 21.3599 965.73 31.27 952.39 42.0298 cv
953.89 38.3398 954.99 34.5298 956.06 30.79 cv
957 27.5 957.9 24.3999 959.04 21.3901 cv
961.8 14.1499 963.56 7.27002 964.49 0 cv
959.44 0 li
958.54 6.64014 956.9 12.96 954.37 19.6099 cv
953.15 22.8101 952.19 26.1699 951.26 29.4102 cv
949.24 36.4102 947.33 43.0601 942.99 48.6899 cv
938.51 39.8599 927.54 35.6699 918.7 33.7002 cv
918.02 33.5498 917.19 33.3901 916.25 33.21 cv
909.83 32 903.87 30.4502 902.41 27.4697 cv
908.16 27.2197 913.19 26.2798 917.48 19.96 cv
918.04 19.1401 918.21 18.1899 918.37 17.3398 cv
918.39 17.2002 918.42 17.02 918.46 16.8599 cv
918.5 16.8501 918.54 16.8501 918.58 16.8398 cv
919.19 16.77 920.21 16.6499 921.19 15.8398 cv
921.68 15.4502 922.1 15.1201 922.47 14.8198 cv
924.85 12.9399 925.63 12.2197 927.77 8.1001 cv
929.53 4.71973 931.6 2.04004 934.09 0 cv
927.13 0 li
925.72 1.71973 924.45 3.64014 923.33 5.7998 cv
921.6 9.14014 921.3 9.37988 919.37 10.8999 cv
919.02 11.1802 918.62 11.4897 918.17 11.8599 cv
918.11 11.8599 918.05 11.8701 917.99 11.8799 cv
917.3 11.96 916.04 12.1099 914.83 13.2397 cv
914.26 13.77 913.95 14.4399 913.75 15.1001 cv
912.64 13.8398 911.41 12.9399 910.14 12.2598 cv
909.68 10.1699 911.68 2.77002 913.67 .439941 cv
913.81 .27002 913.94 .129883 914.06 0 cv
908.13 0 li
906.67 2.97998 905.38 7.16992 905.15 10.52 cv
904.54 10.3901 903.95 10.27 903.37 10.1602 cv
899.26 9.33984 896.86 8.71973 895.23 5.37988 cv
894.82 4.52978 893.95 3.98975 893 3.97998 cv
892.01 3.97998 891.18 4.50977 890.76 5.3501 cv
890.34 6.16992 889.87 6.98975 889.41 7.77002 cv
887.88 10.3901 886.2 13.2598 886.6 16.7798 cv
882.67 17.4697 880.04 21.3901 878.13 24.2197 cv
877.3 25.4697 876.51 26.6401 875.79 27.3599 cv
871.9 31.27 870.18 30.8799 866.04 29.9502 cv
865.22 29.77 864.35 29.5698 863.41 29.3999 cv
862.43 29.2197 861.44 29.6299 860.88 30.46 cv
860.33 31.2798 860.31 32.3501 860.84 33.1899 cv
862.14 35.25 862.58 37.5801 862.06 39.75 cv
861.57 41.8599 860.18 43.7002 858.16 44.9199 cv
857.52 45.3101 857.09 45.9502 856.98 46.6899 cv
856.87 47.4199 857.09 48.1602 857.58 48.7197 cv
859.87 51.2998 858.17 55.71 852.54 61.8198 cv
852.06 62.3398 851.82 63.0298 851.88 63.73 cv
851.93 64.2598 852.14 64.75 852.48 65.1401 cv
850.18 68.21 849.38 71.0698 850.15 73.6401 cv
850.95 76.29 853.27 78.27 857.05 79.52 cv
860.35 80.6099 863.64 81.04 866.91 81.04 cv
873.3 81.04 879.6 79.3901 885.76 77.77 cv
887.36 77.3501 888.94 76.9399 890.53 76.5498 cv
906.02 72.7798 922.84 65.1201 938.04 57.4502 cv
941.37 68.79 946.83 80.04 954.31 90.9502 cv
957.58 95.71 961.1 100.08 964.51 104.3 cv
969.89 110.96 974.98 117.25 979.16 125.02 cv
981.38 129.13 983.32 133.39 985.01 137.78 cv
982.38 140.65 979.94 143.69 977.72 146.89 cv
972.83 132 966.29 119.49 957.33 107.9 cv
946.56 93.9399 935.64 84.7598 917.35 85.2598 cv
907.39 85.54 900.4 91.23 897.13 101.72 cv
895.81 105.96 895.26 114.26 898.45 119.19 cv
898.01 119.68 897.56 120.16 897.09 120.66 cv
895.38 122.48 893.61 124.36 892.29 126.66 cv
888.54 133.21 887.46 140.62 889.01 149.3 cv
890.24 156.18 899.66 178.76 910.87 183.89 cv
912.48 184.62 914.09 184.99 915.66 184.99 cv
916.31 184.99 916.94 184.9 917.57 184.78 cv
917.84 184.92 918.13 185.02 918.45 185.06 cv
918.74 185.1 919.06 185.14 919.38 185.2 cv
919.5 185.22 919.62 185.24 919.75 185.27 cv
919.88 185.29 920.01 185.32 920.14 185.34 cv
920.34 185.38 920.54 185.42 920.74 185.47 cv
920.94 185.51 921.14 185.56 921.35 185.6 cv
921.76 185.69 922.19 185.79 922.62 185.89 cv
925.12 186.46 927.79 187.08 930.23 187.08 cv
932.35 187.08 934.31 186.61 935.83 185.26 cv
937.58 183.7 938.35 181.27 938.16 178.02 cv
940.87 177.8 943.2 176.56 944.92 174.42 cv
950.5 167.47 948.24 153.6 947.96 152.04 cv
945.53 138.34 936.92 124.98 926.53 118.78 cv
920.06 114.92 913.95 113.03 908.31 113.13 cv
907.54 105.62 907.79 100.53 916.16 98.3301 cv
927.17 95.4302 939.02 102.98 945.38 111.21 cv
958.15 127.73 962.75 137.86 970.07 159.91 cv
970.09 159.97 970.13 160.03 970.15 160.1 cv
962.22 177.09 959.11 197.16 961.31 218.75 cv
961.65 222.1 962.09 225.44 962.64 228.79 cv
962.66 228.89 962.67 228.99 962.69 229.09 cv
962.7 229.14 962.71 229.18 962.71 229.23 cv
964.47 239.96 967.31 250.73 971.29 261.89 cv
971.2 262.08 971.1 262.27 971.01 262.46 cv
965.38 274.08 961.16 304.25 960.68 335.45 cv
954.76 331.08 950.25 327 946.07 322.26 cv
943.8 319.68 941.64 316.7 939.35 313.54 cv
936.65 309.82 933.87 306 930.83 302.78 cv
932.89 301.33 934.24 299.88 935.64 298.36 cv
936.3 297.63 936.99 296.89 937.8 296.09 cv
937.85 296.09 937.9 296.1 937.95 296.1 cv
938.38 296.1 938.81 296 939.19 295.77 cv
943.12 293.52 954.09 277.66 954.3 272.92 cv
954.33 272.22 954.08 271.54 953.58 271.04 cv
953.47 270.93 953.35 270.83 953.22 270.74 cv
956.39 266.28 960.2 260.78 959.59 255.29 cv
959.44 253.96 957.61 249.74 955.75 246.61 cv
956.22 246.53 956.66 246.34 957.02 246.01 cv
957.6 245.48 957.89 244.72 957.82 243.94 cv
957.73 242.87 957.58 241.84 957.44 240.84 cv
956.79 236.2 956.61 233.87 959.53 231.88 cv
960.23 231.4 960.64 230.6 960.61 229.75 cv
960.6 229.7 960.6 229.64 960.6 229.59 cv
960.6 229.54 960.59 229.49 960.58 229.44 cv
960.56 229.33 960.54 229.23 960.52 229.13 cv
960.35 228.53 959.96 228.01 959.41 227.68 cv
956.34 225.81 953.63 224.03 951.6 221.14 cv
950.81 220.01 950.32 219.19 949.92 218.54 cv
948.35 215.92 947.62 215.4 943.42 213.95 cv
939.76 212.69 937.69 210.42 935.3 207.79 cv
933.35 205.66 931.17 203.29 927.96 201.35 cv
927.93 197.52 927.31 195.29 925.9 193.82 cv
924.54 192.43 922.85 192.06 920.91 191.95 cv
920.9 191.95 920.9 191.95 920.89 191.95 cv
920.79 191.95 920.68 191.94 920.57 191.94 cv
920.52 191.94 li
920.35 191.93 920.18 191.93 920 191.92 cv
919.88 191.91 919.77 191.91 919.65 191.91 cv
918.84 191.91 li
916.81 191.9 914.52 191.88 911.7 191.28 cv
910.47 191.02 909.23 190.84 907.91 190.66 cv
905.96 190.38 903.93 190.1 902 189.51 cv
898.01 188.28 895.67 188.65 893.42 189.01 cv
892.05 189.23 890.63 189.45 888.61 189.34 cv
887 189.25 885.13 188.47 883.15 187.64 cv
880.67 186.6 877.87 185.43 874.88 185.36 cv
874.68 185.36 li
871.88 185.29 869.25 185.23 866.24 187.18 cv
864.82 188.09 864.1 189.5 863.63 190.42 cv
863.59 190.5 863.55 190.58 863.52 190.65 cv
861.35 192.03 858.7 192.44 855.91 192.87 cv
851.84 193.5 847.23 194.21 843.63 198.15 cv
838 204.31 841.83 208.65 844.64 211.81 cv
845.34 212.6 846.05 213.41 846.69 214.28 cv
845.67 215.62 844.74 216.76 843.84 217.7 cv
840.58 214.7 835.82 210.45 831.16 210.99 cv
827.88 211.38 825.51 214.57 823.21 217.67 cv
822.16 219.09 819.96 222.05 819.1 222.06 cv
819.1 222.06 819.05 222.05 818.93 221.98 cv
818.08 221.4 816.95 221.42 816.11 222.01 cv
807.88 227.77 806.68 244.91 806.92 251.03 cv
807.05 254.42 807.74 257.45 808.41 260.37 cv
809.41 264.73 810.27 268.5 809.06 272.55 cv
809.02 272.7 808.97 272.77 808.78 273.07 cv
808.19 273.96 807.64 274.93 807.36 277.01 cv
806.85 280.81 808.3 284.71 809.58 288.16 cv
809.94 289.13 810.28 290.05 810.55 290.89 cv
811.8 294.82 812.6 298.99 813.37 303.03 cv
813.68 304.68 814 306.33 814.34 307.97 cv
814.5 308.72 814.99 309.35 815.68 309.7 cv
816.03 309.87 816.41 309.96 816.79 309.96 cv
817.04 309.96 817.29 309.9 817.53 309.83 cv
817.59 312.82 819.07 314.98 820.51 317.08 cv
820.9 317.63 821.3 318.21 821.69 318.84 cv
822.55 320.2 823.07 321.38 823.57 322.52 cv
824.58 324.81 825.62 327.17 828.89 329.56 cv
837.84 336.09 852.19 341.45 862.51 337.78 cv
863.14 337.56 863.66 337.11 863.95 336.51 cv
864.04 336.32 864.1 336.12 864.14 335.92 cv
864.7 336.23 865.27 336.6 865.87 336.99 cv
867.85 338.29 870.23 339.85 873.4 339.85 cv
874.11 339.85 874.87 339.77 875.67 339.59 cv
878.2 339.02 880.67 337.89 882.59 336.47 cv
883.78 337.45 884.96 337.71 885.85 337.71 cv
889.45 337.71 892.11 333.97 894.93 330 cv
896.27 328.11 898.11 325.52 899.11 325.07 cv
899.92 324.71 901.72 324.63 903.16 324.56 cv
904.59 324.49 905.94 324.42 907.11 324.14 cv
913.37 322.66 918.94 318.4 922.19 312.65 cv
929.36 322.36 938.7 330.41 947.76 338.22 cv
952.15 342 956.61 345.85 960.82 349.89 cv
961.32 366.52 963.18 392.11 969.43 415.02 cv
967.01 419.59 964.51 424.15 962.07 428.57 cv
960.04 432.27 958.04 435.91 956.1 439.52 cv
943.76 424.6 930.96 417.33 926.63 415.15 cv
926.45 407.88 924.26 400.98 920.17 395.68 cv
913.47 387.01 903.05 383.28 892.28 385.71 cv
889.89 386.25 887.12 387.67 884.17 389.18 cv
877.28 392.71 872.19 394.97 869.76 391.87 cv
869.21 390.1 868.59 388.37 867.99 386.7 cv
865.73 380.41 863.59 374.47 865.29 368.5 cv
865.57 367.52 865.23 366.47 864.42 365.84 cv
863.61 365.21 862.51 365.14 861.62 365.66 cv
849.51 372.75 849.51 382.7 849.5 391.49 cv
849.5 393.07 849.5 394.64 849.43 396.18 cv
849.2 401.49 848.22 406.43 843.88 410.76 cv
840.27 413.92 840.92 419.34 841.54 424.6 cv
841.82 426.93 842.11 429.34 842.03 431.47 cv
841.98 432.64 842.76 433.69 843.89 433.99 cv
844.1 434.04 844.32 434.07 844.53 434.07 cv
845.45 434.07 846.31 433.56 846.75 432.71 cv
848.83 428.68 852.59 426.53 856.59 424.29 cv
856.66 424.25 856.72 424.22 856.78 424.18 cv
857.28 423.91 857.78 423.62 858.28 423.34 cv
866.22 423.65 869.48 428.5 873.21 434.1 cv
876.93 439.66 881.14 445.97 890.41 447.8 cv
892.65 448.24 894.86 448.45 897.02 448.45 cv
909.12 448.45 919.67 441.78 923.9 430.86 cv
924.23 429.99 924.53 429.12 924.8 428.25 cv
929.41 430.17 940.18 435.94 950.29 450.75 cv
947.96 455.46 945.78 460.19 943.84 465.02 cv
943.8 465.11 943.78 465.2 943.76 465.29 cv
938.9 467.16 935.17 470.31 930.71 474.39 cv
927.21 477.61 923.97 480.36 919.81 481.52 cv
918.5 481.89 917.49 482 916.52 482.1 cv
914.44 482.32 912.3 482.54 909.86 485.4 cv
907.83 487.79 905.47 494.07 905.15 498.73 cv
904.54 498.59 903.95 498.47 903.37 498.36 cv
899.26 497.54 896.86 496.92 895.23 493.59 cv
894.82 492.74 893.95 492.19 893 492.19 cv
892.01 492.17 891.18 492.71 890.76 493.56 cv
890.34 494.38 889.87 495.19 889.41 495.98 cv
887.88 498.59 886.2 501.47 886.6 504.98 cv
882.67 505.68 880.04 509.59 878.13 512.43 cv
877.3 513.67 876.51 514.85 875.79 515.57 cv
871.9 519.47 870.18 519.09 866.04 518.16 cv
865.22 517.97 864.35 517.78 863.41 517.6 cv
862.43 517.42 861.44 517.84 860.88 518.66 cv
860.33 519.48 860.31 520.56 860.84 521.4 cv
862.14 523.45 862.58 525.78 862.06 527.95 cv
861.57 530.07 860.18 531.91 858.16 533.13 cv
857.52 533.51 857.09 534.16 856.98 534.89 cv
856.87 535.62 857.09 536.37 857.58 536.92 cv
859.87 539.51 858.17 543.92 852.54 550.02 cv
852.06 550.54 851.82 551.23 851.88 551.93 cv
851.93 552.46 852.14 552.95 852.48 553.35 cv
850.18 556.41 849.38 559.27 850.15 561.84 cv
850.95 564.5 853.27 566.47 857.05 567.72 cv
860.36 568.81 863.64 569.25 866.91 569.25 cv
873.3 569.25 879.6 567.59 885.76 565.98 cv
887.35 565.56 888.94 565.14 890.53 564.75 cv
906.02 560.98 922.84 553.32 938.04 545.65 cv
941.37 556.99 946.83 568.25 954.31 579.15 cv
957.58 583.92 961.1 588.28 964.51 592.5 cv
969.89 599.16 974.98 605.46 979.16 613.22 cv
981.38 617.34 983.32 621.59 985.01 625.98 cv
982.38 628.86 979.94 631.9 977.72 635.1 cv
972.84 620.2 966.29 607.7 957.33 596.1 cv
946.56 582.15 935.63 572.94 917.35 573.47 cv
907.39 573.74 900.4 579.43 897.13 589.92 cv
895.81 594.16 895.26 602.46 898.45 607.39 cv
898.01 607.88 897.56 608.37 897.09 608.86 cv
895.38 610.68 893.61 612.56 892.29 614.86 cv
888.54 621.41 887.46 628.82 889.01 637.51 cv
890.24 644.39 899.66 666.97 910.87 672.09 cv
912.48 672.83 914.09 673.19 915.66 673.19 cv
916.31 673.19 916.94 673.11 917.58 672.98 cv
917.84 673.13 918.13 673.23 918.45 673.26 cv
918.74 673.3 919.06 673.34 919.38 673.4 cv
919.5 673.42 919.62 673.44 919.75 673.47 cv
919.88 673.49 920.01 673.52 920.14 673.54 cv
920.33 673.58 920.53 673.62 920.73 673.67 cv
921.33 673.8 921.97 673.95 922.62 674.09 cv
925.12 674.66 927.79 675.28 930.23 675.28 cv
932.35 675.28 934.31 674.82 935.83 673.46 cv
937.58 671.91 938.35 669.47 938.16 666.23 cv
940.87 666 943.2 664.77 944.92 662.62 cv
950.5 655.68 948.24 641.8 947.96 640.24 cv
945.53 626.54 936.92 613.18 926.53 606.98 cv
920.06 603.12 913.95 601.23 908.31 601.33 cv
907.54 593.83 907.79 588.73 916.16 586.53 cv
927.17 583.64 939.02 591.18 945.38 599.41 cv
958.15 615.93 962.75 626.06 970.07 648.11 cv
970.09 648.18 970.13 648.24 970.15 648.3 cv
962.22 665.29 959.11 685.36 961.31 706.96 cv
961.65 710.31 962.09 713.65 962.64 717 cv
962.66 717.1 962.67 717.19 962.69 717.29 cv
962.7 717.34 962.71 717.38 962.71 717.43 cv
964.47 728.15 967.31 738.94 971.29 750.1 cv
971.2 750.29 971.1 750.48 971.01 750.67 cv
965.38 762.29 961.16 792.45 960.68 823.65 cv
954.75 819.28 950.25 815.21 946.07 810.46 cv
943.8 807.89 941.64 804.9 939.35 801.75 cv
936.65 798.02 933.87 794.2 930.83 790.98 cv
932.89 789.54 934.24 788.08 935.64 786.56 cv
936.3 785.84 936.99 785.09 937.8 784.29 cv
937.85 784.29 937.9 784.31 937.95 784.31 cv
938.38 784.31 938.8 784.2 939.19 783.98 cv
943.12 781.72 954.09 765.86 954.3 761.13 cv
954.33 760.42 954.08 759.74 953.58 759.24 cv
953.47 759.13 953.35 759.04 953.22 758.95 cv
956.39 754.48 960.2 748.98 959.59 743.5 cv
959.44 742.17 957.61 737.94 955.75 734.82 cv
956.22 734.74 956.66 734.54 957.02 734.21 cv
957.6 733.69 957.89 732.92 957.82 732.14 cv
957.73 731.08 957.58 730.04 957.44 729.05 cv
956.79 724.4 956.61 722.08 959.53 720.08 cv
960.23 719.6 960.64 718.8 960.61 717.95 cv
960.6 717.9 960.6 717.84 960.6 717.79 cv
960.6 717.74 960.59 717.69 960.58 717.64 cv
960.56 717.53 960.54 717.43 960.52 717.33 cv
960.35 716.73 959.96 716.21 959.41 715.88 cv
956.34 714.01 953.63 712.23 951.6 709.34 cv
950.81 708.22 950.32 707.4 949.92 706.74 cv
948.35 704.12 947.62 703.61 943.42 702.16 cv
939.76 700.89 937.69 698.62 935.3 696 cv
933.35 693.86 931.17 691.5 927.96 689.55 cv
927.93 685.73 927.31 683.49 925.9 682.03 cv
924.46 680.53 922.61 680.22 920.5 680.15 cv
920.36 680.14 920.22 680.13 920.07 680.13 cv
919.94 680.12 919.8 680.12 919.66 680.12 cv
918.84 680.12 li
916.81 680.1 914.52 680.08 911.7 679.48 cv
910.47 679.22 909.23 679.05 907.92 678.86 cv
905.96 678.59 903.94 678.3 902 677.71 cv
898.01 676.49 895.67 676.86 893.42 677.21 cv
892.05 677.43 890.63 677.65 888.61 677.54 cv
887 677.46 885.13 676.67 883.15 675.84 cv
880.67 674.8 877.87 673.63 874.88 673.56 cv
874.68 673.56 li
871.89 673.49 869.25 673.44 866.24 675.38 cv
864.82 676.3 864.1 677.7 863.63 678.63 cv
863.59 678.71 863.55 678.79 863.52 678.86 cv
861.35 680.23 858.7 680.64 855.91 681.07 cv
851.84 681.7 847.23 682.41 843.63 686.36 cv
838 692.52 841.83 696.85 844.64 700.01 cv
845.34 700.8 846.05 701.62 846.69 702.48 cv
845.67 703.83 844.74 704.96 843.84 705.9 cv
840.58 702.9 835.82 698.65 831.16 699.2 cv
827.88 699.58 825.51 702.78 823.21 705.87 cv
822.16 707.29 819.96 710.25 819.1 710.27 cv
819.1 710.27 819.05 710.26 818.93 710.18 cv
818.08 709.61 816.95 709.62 816.11 710.21 cv
807.88 715.98 806.68 733.12 806.92 739.23 cv
807.05 742.63 807.74 745.65 808.41 748.58 cv
809.41 752.94 810.27 756.7 809.06 760.76 cv
809.02 760.9 808.97 760.98 808.78 761.27 cv
808.19 762.16 807.64 763.13 807.36 765.21 cv
806.85 769.01 808.3 772.92 809.58 776.37 cv
809.94 777.34 810.28 778.25 810.55 779.1 cv
811.8 783.02 812.6 787.19 813.37 791.23 cv
813.68 792.88 814 794.53 814.34 796.17 cv
814.5 796.92 814.99 797.56 815.68 797.9 cv
816.03 798.07 816.41 798.16 816.79 798.16 cv
817.04 798.16 817.29 798.11 817.53 798.03 cv
817.59 801.03 819.07 803.18 820.51 805.28 cv
820.9 805.84 821.3 806.42 821.69 807.05 cv
822.55 808.4 823.07 809.58 823.57 810.73 cv
824.58 813.01 825.62 815.38 828.89 817.77 cv
837.84 824.29 852.18 829.64 862.51 825.98 cv
863.14 825.76 863.66 825.32 863.95 824.72 cv
864.04 824.52 864.1 824.32 864.14 824.12 cv
864.7 824.43 865.27 824.8 865.87 825.2 cv
867.85 826.5 870.23 828.06 873.4 828.06 cv
874.11 828.06 874.87 827.98 875.67 827.8 cv
878.2 827.23 880.66 826.1 882.59 824.67 cv
883.78 825.66 884.96 825.92 885.85 825.92 cv
889.46 825.92 892.11 822.17 894.93 818.21 cv
896.27 816.31 898.11 813.72 899.11 813.28 cv
899.92 812.92 901.72 812.83 903.16 812.76 cv
904.59 812.69 905.94 812.62 907.1 812.35 cv
913.37 810.86 918.94 806.6 922.19 800.85 cv
929.36 810.57 938.7 818.61 947.76 826.42 cv
952.15 830.2 956.61 834.06 960.82 838.1 cv
961.32 854.72 963.18 880.31 969.43 903.22 cv
967.9 906.09 966.06 909.39 963.95 913.18 cv
961.51 917.55 958.79 922.43 956.01 927.62 cv
943.7 912.76 930.95 905.53 926.63 903.35 cv
926.45 896.08 924.26 889.18 920.17 883.88 cv
913.47 875.21 903.05 871.49 892.28 873.92 cv
889.89 874.45 887.12 875.88 884.17 877.39 cv
877.28 880.92 872.19 883.17 869.76 880.07 cv
869.21 878.3 868.59 876.58 867.99 874.9 cv
865.73 868.61 863.59 862.67 865.29 856.71 cv
865.57 855.72 865.23 854.67 864.42 854.04 cv
863.61 853.42 862.51 853.35 861.62 853.86 cv
849.51 860.95 849.51 870.91 849.5 879.69 cv
849.5 881.28 849.5 882.84 849.43 884.38 cv
849.2 889.69 848.22 894.64 843.88 898.96 cv
840.27 902.12 840.92 907.55 841.54 912.8 cv
841.82 915.13 842.11 917.54 842.03 919.67 cv
841.98 920.85 842.76 921.89 843.89 922.19 cv
844.1 922.25 844.32 922.27 844.53 922.27 cv
845.45 922.27 846.31 921.76 846.75 920.92 cv
848.86 916.82 852.71 914.67 856.78 912.39 cv
857.28 912.11 857.78 911.83 858.29 911.54 cv
866.22 911.86 869.48 916.7 873.21 922.3 cv
876.93 927.87 881.14 934.18 890.41 936 cv
892.65 936.44 894.86 936.66 897.02 936.66 cv
909.12 936.66 919.67 929.98 923.9 919.06 cv
924.23 918.2 924.53 917.33 924.8 916.45 cv
929.4 918.37 940.12 924.11 950.2 938.82 cv
942.91 953.43 936.34 969.16 934.77 982.12 cv
934.75 982.29 934.75 982.46 934.76 982.63 cv
933.44 983.72 932.12 984.9 930.71 986.19 cv
927.21 989.4 923.97 992.16 919.81 993.32 cv
918.5 993.69 917.49 993.79 916.52 993.9 cv
914.45 994.11 912.3 994.34 909.86 997.2 cv
909.29 997.86 908.7 998.84 908.13 1000 cv
914.06 1000 li
914.94 999.09 915.5 999.03 917.04 998.87 cv
918.11 998.76 919.44 998.62 921.16 998.14 cv
926.38 996.67 930.11 993.53 934.09 989.88 cv
940 984.46 944.01 981.1 951.82 980.34 cv
953.98 980.13 954.87 980.32 955.18 980.43 cv
955.21 980.95 954.94 982.1 954.76 982.89 cv
954.33 984.74 953.79 987.06 954.28 989.39 cv
953.02 989.43 951.79 989.56 950.7 989.68 cv
949.9 989.77 949.12 989.85 948.42 989.89 cv
939.26 990.42 932.24 993.75 927.13 1000 cv
934.09 1000 li
937.88 996.87 942.64 995.23 948.71 994.88 cv
949.49 994.84 950.34 994.75 951.24 994.65 cv
956.2 994.12 958.69 994.21 959.45 996.19 cv
959.54 996.43 959.67 996.63 959.81 996.82 cv
959.71 997.89 959.58 998.95 959.44 1000 cv
964.49 1000 li
964.63 998.94 964.75 997.86 964.85 996.78 cv
964.94 995.8 964.97 994.86 965 993.96 cv
965.14 990.01 965.41 988.93 967.17 988.3 cv
967.27 988.27 967.41 988.26 967.57 988.26 cv
968.06 988.26 968.8 988.38 969.38 988.47 cv
970.94 988.72 972.88 989.03 974.79 988.36 cv
976.24 987.85 977.29 986.75 978.14 985.87 cv
978.41 985.59 978.79 985.19 979.04 984.98 cv
979.49 985.12 980.23 985.41 980.76 985.62 cv
982.23 986.21 983.62 986.76 984.88 986.79 cv
986.2 986.84 987.31 986.35 988.32 985.93 cv
988.79 985.74 989.77 985.33 990 985.42 cv
990.8 985.71 991.03 986.12 991.17 986.53 cv
992.16 989.39 989.22 995.48 986.67 1000 cv
992.36 1000 li
995.39 994.23 997.26 988.82 995.9 984.89 cv
995.65 984.16 995.29 983.5 994.83 982.93 cv
995.1 982.52 995.59 982.15 996.41 981.56 cv
997.63 980.69 999.36 979.43 1000 977.16 cv
1000 974.54 li
999.72 973.97 999.24 973.5 998.61 973.27 cv
994.36 971.72 989.58 971.34 984.79 971.18 cv
986.89 964.63 988.92 957.25 990.75 949.57 cv
993.11 954.64 996.54 962.67 1000 973.05 cv
1000 944.96 li
997.28 938.91 995.15 934.47 994.29 932.71 cv
996.59 920.18 998.09 907.84 998.22 897.8 cv
998.83 896.7 999.43 895.6 1000 894.5 cv
1000 882.61 li
1000 878.41 li
1000 859.69 li
998.97 864.89 997.53 870.22 995.65 875.74 cv
995.4 874.64 995.12 873.52 994.81 872.38 cv
994.84 872.3 994.88 872.23 994.91 872.16 cv
997.09 865.65 998.75 859.76 1000 854.42 cv
1000 805.64 li
1000 798 li
1000 785.14 li
999.26 783.57 998.52 782.07 997.8 780.66 cv
996.6 778.33 995.46 775.95 994.35 773.55 cv
996.15 765.28 997.3 757.87 998.52 750.03 cv
998.91 747.51 999.31 744.93 999.74 742.25 cv
999.81 741.81 999.9 741.31 1000 740.79 cv
1000 687.55 li
1000 659.83 li
1000 633.27 li
999.51 631.75 998.99 630.23 998.43 628.7 cv
998.94 628.31 999.46 627.94 1000 627.56 cv
1000 621.56 li
998.8 622.32 997.64 623.09 996.55 623.88 cv
996.34 623.39 996.14 622.89 995.93 622.39 cv
997.24 621.27 998.61 620.19 1000 619.14 cv
1000 601.46 li
998.29 599.78 996.92 598 996.47 596.11 cv
998.19 595.16 999.24 593 1000 590.43 cv
1000 559.6 li
999.65 557.28 999.57 555.04 1000 552.87 cv
1000 542.48 li
999.85 542.63 999.7 542.78 999.55 542.95 cv
992.56 551.04 994.58 559.31 996.54 567.3 cv
997.24 570.15 997.96 573.09 998.25 576.02 cv
997.44 577.88 996.96 580.51 996.45 583.28 cv
996.28 584.2 996.06 585.39 995.8 586.59 cv
995.14 586.15 994.4 585.85 993.67 585.6 cv
992.74 585.28 991.94 585.01 991.25 584.25 cv
987.64 580.33 989.54 573.9 991.38 567.68 cv
992.12 565.17 992.82 562.81 993.21 560.52 cv
993.57 558.41 993.58 556.46 993.59 554.57 cv
993.61 551.12 993.63 548.4 995.67 545.59 cv
997.08 543.63 998.58 541.93 1000 540.61 cv
1000 534.32 li
996.47 536.47 993.38 540.26 991.83 542.36 cv
986.46 535 983.07 513.61 982.14 505.15 cv
983.9 502.5 985.65 499.69 987.44 496.68 cv
987.66 496.29 987.96 495.81 988.3 495.26 cv
993.37 487 997.81 478.6 995.9 473.09 cv
995.65 472.36 995.29 471.71 994.83 471.13 cv
995.1 470.73 995.59 470.35 996.41 469.77 cv
997.63 468.9 999.36 467.63 1000 465.36 cv
1000 446.13 li
997.01 441.79 994.84 439.04 994.53 438.65 cv
994.5 438.62 994.47 438.6 994.44 438.57 cv
996.5 429.04 998.17 419.13 998.27 409.49 cv
998.87 408.43 999.44 407.36 1000 406.29 cv
1000 371.48 li
998.97 376.68 997.53 382.02 995.65 387.54 cv
995.4 386.43 995.12 385.31 994.81 384.17 cv
994.84 384.1 994.88 384.03 994.91 383.95 cv
997.09 377.44 998.75 371.56 1000 366.21 cv
1000 317.43 li
1000 309.79 li
1000 296.94 li
999.26 295.37 998.52 293.87 997.8 292.46 cv
996.6 290.12 995.46 287.74 994.35 285.35 cv
996.15 277.07 997.3 269.67 998.52 261.83 cv
998.91 259.3 999.31 256.72 999.74 254.04 cv
999.81 253.6 999.9 253.11 1000 252.58 cv
1000 199.35 li
1000 171.62 li
1000 145.07 li
999.51 143.54 998.99 142.02 998.43 140.49 cv
998.94 140.11 999.46 139.73 1000 139.35 cv
1000 133.35 li
1000 130.94 li
1000 113.25 li
998.29 111.58 996.92 109.8 996.47 107.91 cv
998.19 106.95 999.24 104.8 1000 102.23 cv
1000 71.3999 li
999.65 69.0698 999.57 66.8398 1000 64.6601 cv
1000 54.27 li
999.85 54.4302 999.7 54.5801 999.55 54.75 cv
992.56 62.8398 994.58 71.1001 996.54 79.0898 cv
997.24 81.9502 997.96 84.8901 998.25 87.8101 cv
997.44 89.6699 996.96 92.2998 996.45 95.0698 cv
996.28 95.9897 996.06 97.1802 995.8 98.3799 cv
995.14 97.9502 994.4 97.6499 993.67 97.3999 cv
992.74 97.0801 991.94 96.8101 991.25 96.0498 cv
987.64 92.1201 989.54 85.6899 991.38 79.4697 cv
992.12 76.9697 992.82 74.6001 993.21 72.3101 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (\700\753\745\752\761\740\755\744\760) ()
%%Title: (6 mak pattern_02.eps)
%%CreationDate: 6/5/2020 7:53 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6B3XZRqDeDcra"-'#I#G)8Upr^6:co<;6\XPTdUJJbfnosrh'-lpU\sKJi.o#liV:\1FeL:mTpRhkHjlT?"pZ]=o7Zq5X^j"
%@R,k[66IHuKn)QtrUGC/o/hq1X7p5%&/A_EEei[Z5"E**K9k'UkIYojlLd!GBm4o>!UYZq%NLopElAGl=j<iB=!66SbKj^Z\smpu
%)GSDZ].L?2OJ;mU0_RaZTCp8VZ2hOLTC953bsB=kPPJ6j[mdIokS<31^+!1_4uk=M<J2$VDJ-Y<=UPN-^SRE(71sO(KRBi=-1Wui
%r[)Lt7DuqIp^uHW>mQ`nG@`m5_<RCnZer"AA0\Abq/;*p%-UaB*&RP;dXXE:]^1CTYXCHigjr7IFI#T1+k$Anp)h!^PKjF2^PE0q
%]>NL>K%EmC(5V!7q7I2a82rjM!q?E(/?oN@Rgn;>-$i+>pTE=dRGI%t%t_^oU=JNcc+\l_U+!!SJkek6aK%6An4A;mN2K'(&JZQ.
%+NKYmGT[Vl-).+6Ru"?eQ.ZS4[B)S3emE3D*QtNd?,f0F[pNhH,b-%cjIG^t>rWi]XmT?(d3ml1;CNmPTj=pla<YR&UM0eaG``BK
%q1tcuX]^&r'6\EsFBf2!SR%6[XTS0Mea;l1;\-nhX'N*YktrZL@42A#8jJ3T!DugZJOD!5.@q_*8I5nTn?l[J=GCae!0Ql+duV,#
%>,/c#0^'()_lZ%;G8h8u'Zd[-rh=@#PFeB\s'Z-[B^#2m2MX\b*je:Y,sd>.(>'\IqOgi'RghWXPb^N83*b#YkL.Vh\HX<Q."kQL
%#I6Sj<)C[KKieb4b;/ujV;Sh[nP<XLp`#.-eQ<6_`aX2C0^*VK-He):QJnAc__>5J@Bs\dI*kn#`hZKd-:Rp]l)>@*9;Q#5]Ro#p
%9[dC:VSQ5+K.EAp@giIB)MTfll%T3@$j.m9U%-3K,2<j8_GktI(*h;e%h&QMi&;&H\2^j?%=j&f0F!&Zh\:6o%\*rH_/FQ'5f%A@
%$B^$8"&SKV_@A6W@t4r17@`?D?l4Cu^L<(0^h900o^IZN`$M,bIcFC\*Wa(:j6:N4H?`174p:o%0Rsaa_bs#rKH.0M_SHTs"u('i
%,AM0Q^^.^6*<:nC!5I4Gi?S+,_Z31$NPn5.60.#3?r,&Uo^JB739fpgLjKtnaQ'crkRdf@GWZo4N,*L?i=Pu!`W1OZ7fbk9*?iJH
%!$hDr@E@a7,N8kS_f$@o!0ZT:bIJlAqJZu+FO&1%BfP"t_^!>I;fEo=Zpj?Aq%3;11Eql$SeHjrLW>0YI",BB(VoA3Nu]8F'fd4I
%NsNTK%/LK;fp.#V6`+qhFleQ,bEW1jF=mYJ-dq632fZr`WQfGM;?P4_d7L7J.,i5.8*2nn_DkNu"]#'5?`#;Ap.pk@P5?'q`T-aM
%rJU]soL&aFErY,`7D\`d?i66aiqm97ffdIVW@D4ps5Le0(>l`RnK41%lhHV>(]WT;ptkt-rrhL,e+5glpl4pbp\Z'2"W4)G(/IJY
%VJ6>2;%6eDNMNRFMNK`YP*1o+nh)('\r\,.-h28fU8^C#>p(6-ZXb8JY3=qp_FWZ3S4k9nU.QcRA<A.2*EaYZKdFf^7=u+Z/bhS0
%<AFPtO;(,bA4^B3"`acAU^M/e8HpR$1pB%ZW/C@)fb%Q,1'V(i:',')FSFG_:6Ol#7>2d`d1!=Q:B&U+31RlYJ0GAa>t($;<HM4a
%j)d%^9Ylkeb'6L36`Tnk5?@kFK:RrD)5aG74'bRE"?\k.&g0kI77<o<^r$3RjE)<#+q'Ns+QdZdE[ZGDdAZ8Z69l%]VMajlKj'"J
%;?US40J]3c94:aJf'+K7Th\<Q8-:+a3<_^S9$[Rn.1C@/UT>s8/0'eX8/ujTL^M<J<a^M/P)Vl*#,ODc##(`75u+/q!!3/[OpQ;r
%(cpV=4YPIufL?+9dN)m%!_GmG0bAfV-p#3US4?HB&5E@!.;L?A0Dq*f;CWtqJk?&*""]9a!RkIo5R#sc#bo3\Lb_R5KsNI==Q\e"
%:FP1P3@("(hk1NZ/AiZN!e:k25l"2f6r"qK.+85M.9^a3/R2D?M-r)A=JW,$`C*#_&JTA,FG;c7Z7fJjG`hI7\Npkd;rC/Y3pm3B
%NZV,YAeGC5A68gl@,0)S7_'#:#Rk6)775eHIs<<7)@XPEjT36:SG0"g,-\%!_PkQ(j)\Y*@'F3*bE,/3pGh>]p0%Y]"*;oh!=7)h
%K8AMRR@G9]M`[n31_M!BQm>`QC6G8)6s?I^S7JQcE_rPLT\8NP4Z\AX6V$bLM@Dq8\N3/XW%rh!$W2Xu6koA=ZDZ_,J1%oN*=m%<
%Wj4oip/G#p,n-<h2*Gck(Bf^'$k=L._4tlB&Rd+[An3\o*]-A2,oJNn*CCTO!pcdtPtALLE1Y>b.StuK!8g.cQP<[6cf"(,4>[m-
%.O#0G.MR>`4BP!A_AR#G?mpSqE]9KpQ6JOmZQjB4Y7j=H\.Ia_K*s.l39W<)`49I]l(b!OUDm#mO*1siX2ALbI2!6=ll;1JaFh^i
%#dfSC=N$8*Pt:QT_TCJ1<u>d&M#?aYJ"k=u3oN5QnspcH8rdil)C[/X$1W)p9LPG+GXQ9/D!S*9a6o^sU0NSMiu2U.46a"mMJM9u
%9jr'-4TL++V?*;fe,cU(I@`]N-98XPKiUW#dbnrkXt/]U0\A[<Tp7pc#;kF;\R.]QP!t[j/Z<3#JHbEm0d5V^]4)2ATd6@.i;uIP
%Q7<3jG"E4$-l72'Juj"G=-3EM&^MZ`WN(ItPb&fY*f]t.i,^24cH6V6$4%P54L_*D$6`u3%m]$GL>hLC&Vr=]8-rOf5f!T)o!MIm
%$g-h%7'=DSmSTN#;f0G"^kom,<>IP9,S16:/rRl&6HXprLmUsnZ;Ei@o.tNCW3oXi6tTYEB_dc$RE2$mVMqJt?9+(!?:En5*9m$k
%KNSB,5ok(L6pMb`2rXnO#Y@9L1%tsd&*h.gpOIQI0iV.H?tI>^8P6]JVp*MKa?1u!'S/%L'k"q!MaTBE.Ml]]"rR^5\:r`2J=S"+
%.[o=Bcueg=&EF137V63gL+''PZX3'om&@RfXe[YEU3[ZeN[\T<(fV*dL4KPsCI6#ON]#sP_l5E_C_`1JM2EbYOD&Q<KhC`klt@?)
%caYdtL&h^J.XLsp1Gk]^4Fu5+i(Sq<dX]F.32IgCOLS3t$c>%2oBqM2UU'L<&3r`C79q7?s-WdSY+s-Hk6)r!dlI(57B2,S>Yb@V
%UQJ0C(*gjck0_rbcAt>4H7nhJ0Gm*j'$VN]3MnDBB]fXM"Z5<4FAsJ=[W)a3LEFi0Un-Kg+ej>C`0+)fJN*%<Sa+40>\'3[cV`#@
%78>BFd*Z-me%&h<^+,L<[!9gKkn'dJDd27JQD9QSN_dKq#kk)U-gO[$=aFu"FYkGh+fFiBf-r/!PZq2Rb:oR/NGtl7JrU_A_*OZE
%Dujt:cu:JPi2R]\(h[Qu#l8ZrF#o`n%"fC@<+gf0I1D/c%!GB*b*MCLM2SFjFQUiq1F8ttK4R>V;[tEKN)j3W,eW@)<=G23\A8VV
%Jm6kQg2ICg'DOR:"p<+,l9!70<+ut..hTH_7UM#mi%ONWJa.E<[0Ls]N?UAhd>Jb"BOBt6)=n0U=I>oB_*>Md'_AJ1!28?-3`(E^
%IN%?%W%,c"8k44.W08)\0F++0#2CnO=OETNRAt@*LSEe>*8n*5g(%+"MfD%IftnSCTW6KYR1u6d!AIbE#"Om[K_!5e(qGYN$<U;=
%7qIlD,$h+k<>k:t>?FC$:p$XhrT:0iJkU<Yk0\f*d\!3C>VdE,\dB%;dkMAf'@f[E`0B[pia>b53!rR9ja)$lp`^@,d\/ap5ad<l
%:<aoBf0*`q%9I3sJrp1H:Dc7T(^@QHTPNrB[]%]CZ:G>_!\$F;3">C,0FB.P3(@/]EX`:d:1V`17,C=U%n8ed"(=q_^^Ek3+V1<Q
%6EYsY3p>NRbT^%ZYT0YSLo\%t9!o*U#<5m>[@'te.S&Z5.2L),bORar%!U6dj0CW`cnfZ'9ZAd\!0'3C7N*<\n]PER('$>1!h9Ql
%$CL!CR@p7WVE2O8o/]cSb9G]8#!u\O8Ns'sP(SYtVHl0n1>JY-d?lg=ZH9CAW.r*FElH#n&*!ki#ICq!R97mo`_51<Nl&)6/6`G3
%S`UD2Y;qMs%dI$9N#Eq+'+uTgr_]`F>V/YZW!mk%N.liN,fahEZBa3]@Jn:H4dAY[%mmg!A.FaArlQcKjo1euVoB]4JhdMi#!A\R
%#mHYEF"!(E9Q8=pTYaAk`lX.3=/hm%i/Snj-]EUY>08PoCT?^a_(gp#\k*p/h_AJ1cc/9tbj3XVgnPRRe2h591sAo@8DXar7AXgn
%F2G$sg+nu6oqiq'9JqgoBOjP,ioI1?j>/1V+L=mH`mA((>"1lO:R>Mpbr$X1,$.-:dr?ktB/E-<'jHC,@U:?*=c+SJ23nX4El^*Z
%_hoE)Ei0V3"'WtBh)or6h96nD&TcH8EfL;JgutHDa/]aq[59?B<>;")7i."W"KaEojQ\b@".Y3n[PA@m*C#Hs7EW"$=5Y?j=Nn*\
%HfHl;+%>3l,1AhL+=AnpN-g0X)E%(**A'.QBNo+C9,.P%!J$Mjk!EXtK6d\"GZ/T3U/YYE[443M7ft>:5@M3^EBGTm=F1s#)!p`%
%B;+&^QW6ic>RFd&6YeV15:q'e1!!;@Mf:3coql#_UOFQ=#+/,*>U.cjX'i$o#S6JC;jhMoMC\q"T'8;9>t*?g:PbBs8;LONEhAf?
%0F!RmS]Zb`_%Y$)AX+sN=eL8\WrhL=JHJ>LGLLi?VFR,r;aRG[2&>LUjAPZ2AXsMrJi&2q)$27'gl#Q_)^Z@pL$#mXV*!3=#.pX;
%4l3:[-l>\_L[2McF*Z`;19,'<ER^1aV*.3a%u>c-=YrG966b?UdSt545uZH=P8$mBBhU+Q,3Rp8P7'\Vg&9)'[ZblYW`!e&jqa]e
%FgGN]b=j+jg`N-A7boS'8PA.XcTDN6O<E4EPA?1aM^'p7qj_>O]6YsE/Nl'hXgfu;bLS,TB#lagJ/W_olQfa"_,ZV1k(X4\)O`K1
%G9JEl"=?p<]CcN]\IMpTcPC"sSZ<-P:#rgE48t5b>]UYl'%J<aV5@]M,Vj8h*/G'%PjBZBH.;3Wfpq5&*I+TTm$.R(U1k5%@:NSp
%gH4P'3#S[)S&Rsr&$lQB"ERicF.k&coo7W,-cM%p<@XFSL8m?b5SK0H)g;;:;"oJj!H2E''*^Lc'YlTk(eb#cFho8#L"0LD&AS?!
%l=VkgA5N^Z(K,<#YetfT0UDF+"J_q;D_4Y&ln"nrYCnqo:0n53B?cD`36$6OPUAW!W+7U\DRc8Ai0rb]d8VNQo?k$g$YiFk8Dsqq
%;5*5RTE#MMB\J*8?CeY9Mi1hC2B2t?:&b7]YpR_7_;u\S#C7*"ohGW5K:FYa-G66siu(hG:=0nG%^s*/:((PI*_dU1Ee'@GGOg>8
%nh]lE=90/hLC:=6GYiZg#9*p'Udrl+,DTbK)TQN]Tm>?^L6)KN$X?8U14EI!7t&U>Ceg!/nES_K2jWE+?^*P%1NhdnO[[M$5#kWK
%oJWj[:u]JjNXIACg&t>GU79<d%4lDLc/ZIqE!5LqbU$m*,F0'Sq$Y;e:K7Yge..BTg38>06r]@V`U)`M\1lA?,--f%e=eb;h0>m9
%SR0Ied"11*ZCpn)O`6*n/5kI/gee&>npUu!h,PTAo1jP1JK-_'Q&^,%LZ4%<'37Zc82PQ/(U1!I!XhdZ86g/-m7.7J]c4,gOR>fC
%-uPi65p$eY(t[qqG^uJ:"4=60^d2IMA/j(h>FF>>E]r@WG[(bXLR`S"E+5MZ4mYg]4ibGbe51YAFr`^]6g]lARq86AHZDF6lA67k
%6tc840Us]E#rQ*3#.`Da<+!#3#<np^4S@35=KnP(49M@&"jJ0Sd+t/"RnI``C78gWC;&EuQ$=K>1g"si2_[YWK5hq$F%eDm)\uah
%6*Q;C./JCIUHWXBmThN-L1qXiqE!.4e`@*26u&m%Ac>pE=,,is)Cp^/!b"@6-''44`DN5,&GN<rTPfe<%D#g;XR[9,d]76;;/%X^
%<1+]J&Vd36`W6bm.%t]V.q4XpFTa\m4/F9,1L,Ro'`KpAY`@i-.5p=*d:*mckc'`dZE>1l4hS[sXrc[V1T](O3q9>MObHh&3GFR\
%]Kb2Xp3%6,73Q/?!<u`fSQ=8)U["#>\Ree"D1IYi`1fDt(&l#B4KJN.W2@U],S/#,@01,iH,;NJNQ8(d.^LcH;p6;`L2ej;GZjsi
%S.k=kTm@Cd>V%QkADqKjpDn8f$*S(@:?-HHn3@;OV/+CS$NN0CloifUDMHI&IWOMZ/BhB'B)P+fi\5\P3Y0ae0IQ$F%FL%R8I:t4
%17XjL*ni1`:a_4E\`)$>SO+)//*u`"$0ONt9<.:hX2uOAeiE&8>1;o^U_CN7i\[Z.Q)-BQfL#g2OVt/5?=lKm#Ctb##p+1ECQ<R,
%j%/3@"5fIEep&sq23F7.UZF$BJpDU4#7E0]d^"eP:ksV))pN=4)@bb(`^]%Od0[UnIur,"/3%79H"cCkWhJ5X<_Pn$Ha9JcPD#,A
%U[0P+no04[eFO##NRFM&4Qb0R2hH*Sk#fBf`[bNTCqRd@Q8).))c*'Rf*oQ2?9uHM4H27@9NGD-h(UT3+8;`DP]opf9Qj;a%^)eg
%V)fcVa>G.6"a)3KkOk3>)=[bQ:1`q;9T7c&dngH_GZnSigo><'i9;-%H+GNp*k(Q;J<Rn$(abFbboU>C94hGLis4G:i:5f0h]LuQ
%#r?;JSd]q4qK5=S?MA$F%BYEU\tCuPN!>76]ua#h_9E:5HFagAf;Z!mJAs*^]SZ`%6?Ve?<FZYWI8&t<MOHsskj:Z4mZ_k@*Q+X^
%>03nkZ<S.Spp&>n^!Kh=cLIBo^)km'G`>Ci^Z/Vh!jT]!1$2oD-qr9bmBq'XLE*B$mGfshNAiPonY@7oF6;^NTZ:\'%R!?a^[`A9
%HW4YakJiJ:%NmcW)n0=;\H*giU(d1*`W<p)C%!XPd3_iLB8<@V)(h9J4k0fVFd-$qPnV(+d,(m!T^!.YNdH?aOgg%>j]1O#-WnN%
%MHA`d$+K/hC4(=ZM=)9pA!BR)Zol%CMHPliGp7c7#9E/NSX_eo#!*t&TI#;IT.8#cWiS\4oWcWbR:E%;AB;oY1?Rq:c:W7RQ)C_h
%\+g'[1-',jnu-H#=*3/P6sf.jI6gHF^9_pQ$>PGF+@J=5]8)!C.]l9'AO!XM<VH]!TLW+SRWMOVF\17A(o"lSbZQrK):$uS:_"M)
%W31DkTB?f:=$;rbC^?]-\)FW)K#p.dL3Nb4.lL-Oe%&\u)_GeUBAtmd^qBTB#ZYkZcr:mY*3pmG9F:)*Q[*:6'Ud?(L&s*-&IsMK
%PtjS9Yd:Q7:oF1d_s3I66dBFT8N0tMq$SG+TZZN*:@ad9=2^7a6\4M>].:FgF[LY%A!!@gL]\r`faWCc$5/1?'2'qt"B6d!mCH`)
%@l82XgD%I7l+4g9;hFtt^rFklEi5!'Ik7%.$-Bb\SN[$CH_&,2WlU/0/PN.rk0BMb*gWO59<F>-bO]ft2h3?d-L#2af'hP=,1(C/
%XtZfq@&42*MYGB+JI$2Wi,P&u:08fAP_LA`""P!(Ef\dGH2MFDNFD7+`_D!,R-8V$ojM1ZnO>^*dl\cEei;S6abcWHL+_(cHFb_-
%X9+EB%W;^7fb,VqR-:?&GK<Y03h=9m'%M-3:o#8O4OjI5Cguct.M)NL9IZaK2j/4X0!IX&HIN:jCP*oV=QNFng4kfG"U$APMm>:k
%%jCKhM57jp)_WRQ*&Tk.2MN5q$s;;Z&f,AQpOH'`i@sU!oh;\N1b;NFR^5s@:F#Et\IlL8XaiH,>*9Qb34b,sEba%-XRu3!9KRLJ
%+8h][oXb$0\(c_?dL"1KReJupF;V^SPFQtk=@ilP$()r580YTA]ui)JS9S_05W^c-a%`hJQcTo,;J"tWIH+H*"7M0//tlhFV-(Wo
%BX"j!DqBBcji&38cQ/D:J>4p=\Jm!beqakOG'H\61@o=$potm``7V%a@/hNF-Rrj57>@:%<T3r;E2T&C%mY9ZUPX6H>8uRn[DD.a
%4BLol+#:T0FE1EH%!X=Ah-"=:SEagJFSm-3i4]XZ^tcXb*O_J[MX0)=FiEdk`8h,6%$:i'm52]h&hd_c(rD7_R)#_rk9HS!Ar7L2
%3fKc=n8O(QSC?la[)=(!0cSF?ABs;^.)\:4q&&_\BI=t37^.VTOgj&VGmma3@<YOm66V;NH!_r&$F%[Ce+iB@hr>?MMNc1m#NU<`
%gf5!WmNm/q0("NeYr43#;!#)DJ9<:%K6L3QSg8KK?j!UqNYP+FE,MF07C1b]GEWjt#&=c[]n].&>,nJl7$]p_GWQmd^+nU,,_U7l
%<\257c(B&YW:&k3B%nRX7f;+Km#YV#)f-MQdp:p`Bf(S&[F0_DFds(&cQ</'+=)&W%(%uV>Mu$0L+DW1#BoDm[kC<XMV0u.5oOP)
%E"Y!,III<L7Q$*YGN0jm^Zg@_\]54<F"D8bT,+KMGe]%J8M`TWnD"9]cXN4cG@gch<b0EDnRbj(f5od5G$h6H"uD[TW2WP"%nkG*
%G<<r?`bGOXN,pMfmLaN/AWk>Yfj.KN*SAIXo2s.PK_BZ?GXEhp,2P7P%6)V.auj%1.bm_eCd5OOS,4)e'RG"c$*`B!WW1oN_fGLt
%c-fNFNNm_3i4_$jcibD*1S/5<1V95oP$9`Ff3i;lV7Zn.;k:3(GOdb3dJ[Npm3MFn$R'Q(i,l3P9N6V/;EZAS8:!@5]cG-GiB1[N
%lHll1S'rHR(nsW6obnTAl&L=,R;d=k*c<\qX#gd3]#[dpGXC#r-TT(B/7Z;`N(GZR\0.u[42Tf9XTpVi/p9$+p._g]N)RN+>i6n[
%IYSPZR5$dXD3<J4:@H?tTMBNr`d#'jGOIZVpO"2?H/"qF/e$<e.hF$_2#!>'/E;^;Wmch5St<m'o35/';8LH_CNu`1`l[,b!K+3>
%:\$S5.Ic4:D?i6LP<,4dG<IP/$E6!;CsI$W]q#>.9Pq9[Ag/n:cq'MB3%Dj+XL"%s+,TEFFKT%mgVV?o@022@Zd#f]*XJ1M:g)D4
%;pGDT"oQ^,/2bOem_cIp.T6Op&RjscMZsl[<N!m"5"7hYjP;C4?icI<3o#V,W^/Z\;jB48aI#.YNco<P@3+ZOKaKp<BM+))oK!G%
%U=6s@oT/MiORQ"(Am7-r;If8]PT=2[$amW&n"Fmh@8<ZI.3cAe9rN`EL=K7@>ms6t3&s@O=H5nR-Je;O2:C@F:$6^c@p%Z(,>\6_
%.itWGE<lreP3AW$3>K269Am9Vl`W'sbar4&P\%"bD0Kp1'AOK_js<kQYZsumbB";u4FcM!Nlj^4FLAVf@Q$-d*tZ5/#rL0]@TA)(
%,q6J-hVfqCL3#>8f"Wprj>RnH$B!"'k@"m;$0)%.k='j7!3agAZKl3c[pAK^2gRHTp=L'kY;KW8iekY`JN^ImMEK:?$5:;jC/\\^
%:'Fo;8KR;InD#t<fJpo4IIM-KQlF`L/Qa^Dqt`;D3pj,`pOO51hA0oe\O=K\\89=P:%jM:F=1uPiX2.I)(V<C4@dR]:$7OPg6D#9
%1-FY-[gCj:A$Y&WgOM?%m&i4$&)73hO5iD%Fkia8rDgb_1d$*dkDSl"Y,JUuW2!2tIlrP(D_H7]%l0'5n5`^.%QOi=f8FTj)eTQJ
%k$h*`jJ[-;W84UO[,%>/"@F6n1;l<CMc=/a6V,ul'"c^@l9k*E+ubP`r[l.</FgS\0\Agl5*0mT`+>>lIePXZ-'S9+36h,j0meG.
%6#o'oK6Q&s)2^isXZu=N2EVE/h%#BD'HR<J1"IVFj'V5_Z/gQ&1d5tm*NjTrqk@RmA=dXH4tT!h\#5<?`"Ld+NTK5s9+"E?'^p1`
%fEinO7jTE8>/PFeT$Or?Q$FKsT9Q5d!N0>OF("Y@]G8H8N%XZp-*L#s2k2B$hBU;a6(Q*E(b.T)X$9^]<0Hos?q5oYYU=-^%u)Cc
%l%q549sC?IPrOWb0II-F&tEhm#hEQA87?4/`JNX11nLc.0iu]hT8N6I0A]Uladb>lig:k_L+C<bP*q3%@O4%:F+7T(&A.$HM9/s?
%]8:3$E'H;GNb(H+b.o*$_.q=L[lO3&TK2"W9':Y;]STj'.;kA`T#dgeRGF3amKuTV@'qiU'[R`DbLFs":9Wq3kHUr@Y^T7>AnU`i
%SU;H'0qW5_i1["6V.R3pEO5/U;LG-O^2#[p)S>:KU"9WPJ'dunT@Z\"GW<"NKLQoPRek))*T=Ee6bYQ'(Uq$MTX3CUg40%XP$5+`
%<oBXu[K:\.5d,nD9=HWQ\;_eDpnPp>0j,bd')<]Ca2sB95"h!PMF&+%F*9("krqd$C,S,H06Ss1>Q&U@5M@'Cpd_rg>NNTTD>^aj
%J`G/lGsh=l]_dN["+.js$*nK>>Ydn04b+@.$G.Fl'BARG5sA*6K9EX5rVRY\BUW4%'f),ija[6Qf<$MgKY,$:9T\a+E%XRuc^#+C
%O>m>or09;)irNC8fDa66g)\ffQh>EMI+)o$>n9g4q>N0\1-r&UHcl_K"-<S(c8(!<6o/@d3/H,"oQ=cHgZoD#2?%tJ&75q:>k5:f
%frkXd9rhRarTDfF'q@h"!e1l24<WR4*!pi[F"kjT2B0',fr6pQJS]PWWs=Njh>A'!.=%l1.2DF[>FZ!<#=dcRA7UER$,P^(KgOrc
%00LqXesGt'd43ho7^(pRSA[+6;(1G,,g5O2<#$P.\.j3[PsE-[!CXj1SWeR3@_btjFB&W;!&!9tZ\/=KA9Rj0EmlN9kk2']A?FH*
%oW<_-5MIM@$QZQI<(E\ijO.jrR#9EGPe2q'=$0'@\]Eed(QAc1c9gE)Fne%*Mf?](>M]!m)`dh'A0<>`.U/;sMVsZZ'.-SgI6>k0
%EQA96ilq7C7@KW-7:JS-iCW9c;_UC94_;c=YCR6F7sK+eIBVR3^]5QD>]muqk$\fWs$Yg\7RA4`2;jdaGYBH]JR#$;r2U>:pSVL.
%J!n634D9tnY`M-6C84LfC7m7ooIY/%`F3l,\HfuJJ_E?V0mLq+.5;'DGN".#K#@c]otA(e,k@du0+)s/E5#&j5Td_7@b#`E=<m8e
%%hF]eMFCn<NA>mLK\?=o`MIZal0hZZ9eJm@,)I`keq3ZK.qG=,m@(6!Pj=<@V/*L'#V!!hg[;ZiiE-$aG`sXC_VGG@]`K!B`)Kud
%&4;$!!njPY)kQl'fc75qNQMK9g1C_JO<_T7PnChZb^U)?h`bHCHZUBdJfc-#<hi^aqga>1*,ffq!ftA,1i1r,Ze#^0@/Li^#W@[S
%4l>l'2+1HEb352Wpjd3poSPk0`_Al/;'GHe?:nhU1:l&[^hT57;#Sr>;/njNcn0YT>hA6MRXPqZ+#k`hg301ITF%U$5jHa:n5WG:
%pipKEW.:)GL8mCM*LHZcT>#jH%NZqr%@TZhXKR2m=^QdB/H293>5[a:?Rn^Kp_@&*'7Z&>OcZDI&%Z=f)q-i3>f!ij=0OjUC9Gt`
%8Ap8AO@BJrLR@dc@<\fU8]!##Ydd%j/2*IJlI\6<e+jQAhfK4jXF,GH<SaYZdbcpfMbbS0Bk0/^m&#p$1pRdh513]b^ht(CrFXu8
%R,i0%fN#O13C<>YDY0g"h)HjsBkTF7mA?T5"GCs%\maU2K1:/pj^*M'dR@2;k=n1Rfn";9,poD@QOj5F^>k7f:4:emce,3=5K8/"
%YLB:!Y[:h9Cc9Ilj<Ga[EJKRuJbjsq4`EDC+&N<X"Rah8dH(da^fD?J0m7ZgaP[>[Bh8Sd$1_:+OIn@T:&_$3Ktu:Od[,DNPn+k*
%K2StSNV:DYHml5c=Ctq776JoKd=mp9oS6R%%pFU_l,T&,)E]LRbiW9p%j+,-UAM[XopH'#OeVu70MBme;_9gVPm2>_q]V4\FEC?e
%ljo.<CtkHYN-]Pe_"^dm-*-/YZ=Mub)T%m/7a%.BO(#D&C4<+5^QW`BprWD5FR.8-$0UiDq""t;'jR,b;4F,f3<?)rJ'@U^EmCH(
%?Yl3a?E[eGZQDOn&NX=T\a,RqQiGMP^QALqk,H)T_++S+N>9:5,r3M8$i%g54o:A/k7J&[*uJI9@#0fh48&]m7g6^P(ujQb_ah'P
%JjK;e]'>be8)Kp!f\8m%gZ[6n<o8t;s0ai6LHbU-23Qk%&Fk[cr=u.a8t$f)h3nMg*+]9i:GJspO)#3Xa5&1ST4XPCOG=tV?`G8:
%"kiO1-CNGH=/Ik9hkYOjMC]'JT3>o32kJT[Iol+sXW((%`rC0hVKLqhEJLE6it%fNer<2=Cu6fXp?h1cPt&/Bn8n?LfW0QF<jQN?
%oedjd\;?L[Lm7;(YB9@$#pTh1r/+:$"JpQPS"\5>$l.f"c#+3pZL(.D]U:L[OO&]!)K`$uC%Y-+iSih!c,\Zhq::#0b:\dD3LIkr
%R4jOa!GSjXA>I>oOJcl"bA*r3U9W.+G,8'Bdsj:BVU\IdX\.=8RdCUn7FV1f1k.F.T2"oie,7lUJ+bs<+o<\G=AAA3BA1H`G%<d)
%dK`J.cUM^.lPWLDa:Y=aoEL9W&,\S(CZTa]KE`D$bTm(PCesu48^=V86h[bpg#3<hM!*CgD0I(\0@qr"F+8Ci8*qf;p3+U"!;']$
%ph>4$dJ%h,2"<=q]M&tls"jr]BbjCTYUg4-^J#:oe&9EdnM3hOr%_7#`65cS9G9)ZJmU55/IU#1dPQOIM[(]8JEL-LOFAX5+8_#8
%Utq:tEDN\2m4"f-C8UIu^^<::)&W)Q<qq5SqS7unkTh/F#?FOPKA6@6(QZ=:SCj`>1`QD+g%[8Y4uJ@1XO+uC3)6+.1`jYV&t\7H
%?VcZp?2VYIG\S0fc#_@33).t&S:6$ldjI+LTAVOU2KbVLP`XRNR:L\I'0O)[+d7iS3'Q%&T%k$Hn1QoG.D[(sUjV6/IA]D'7%ApK
%K2#%j\&%nBkF6i<X?QoYINRqNIg4PY4S6M2f84t:LL*YL!d+:kMm5sXg!si`RY2H>$0g_FH2p$LXbtG&qR:2,pS"W<IU%fR#^m(F
%0_k1Q.t<UbGo_A]qr=feI.ksK^"02AD7bCD"g!uXB)+G-^lRiB=`3k]X9ha2%aGT7pKumh;$$!HB]%&>0S!Qg;ModCZXWs29o(@r
%eHqH'!doXCaM`5MrO6%>M("@BH.1$JlaFRn^@'2@^,MPY'qOS6rMGYJRq<;1O7`;S#behI'#(kET"qt7@Qq0@oPUZ.i#pqWEBBBP
%"&81I=PM:2IGW7&4HAQN5&\J+I/f[sgR6na54sd3-[h`R*TU^CA#FO4O*T#tH3a8uC4b[jjO9UZVK\+tD?K"m%e=OG+/a=EO/Huf
%hEa=_Nmg)2Vg"4uD<#iu\c5gep`203s/]MR^JYpq@=RZ>no:GKmnrZ5LE=5'']5&u-L7/.UOnO.8]g=%7b;r(=REDdH])3i*u/V2
%6+8[aOu)k=pqKP.\SW/ZNIL\uC=UZO/MO?[B_qSjKV?d<$dX4="mnVA\D0%CoECM(n>Ll;G"m"1k)nKhPBk#j?NT@@5>"lFV1=Q7
%-5QacqsV4"c6luJm+ZnPaffBrYr>tCA9RF*0!=ZAh-24/cGu\<^6=kUpVn5&#2"1$M913-`hYT"PC3tp[splen&oR,"J"LDI`+Xm
%7n>W5c^9M^+#5P\ErQMBg-c;H2^jtc>_=&]&qERcm7a*%nBIF.U4."-q2Xn8YArCN.m#CD5&U/nDGp,o*U63OXMAV<<NBml]"]\^
%o,Wb+IC&!i]"a[@)@7rm^di"/!dsDpQT?sL`7i-H[*,B);N4?_P=:ae&=@PtgRb_(W7ak7HtATaBlaOhET!/G@b5GjWd_[5@17G\
%f=[QWGLCs9?BAm\@h]o<A/_Qt4\^@;7ig=SVDapm#j7iNla4Y%pU"'%V@uY[QR@UsqpM9"qed\SiZoVki7L9jA,:$q5*/a8KEpD"
%s5bo5)pRb[I]<\2Ztn>*Q[P?(Jn_^bZs,QhMg^EAVY6L=[Uo;[qHhikQ4JC(I@d.-,-rBQk^>i7hu/?tnKi^h`fCJL`(*_gD$'9,
%!5qa092nllC8:1^d@FRDA!qc$(Jp^.UGEHu+$c7Unt7jRRXQI\Tu!K*bA@/hrp[aO`'3q?Y"q]N,=_nM@@!eTkJdP/;JGbBJ,1@S
%1N[_8[HnEb3ZRO7PdkuRjtt-6/Zs9aQ6/Z]YgGb2pi&E55H]e/g[Y&%Bb7W,B_bP2^Fp2jh/Cg6'mPddbW:/)U]9W$pF.jk;l<uD
%$;I'`n?qiVUL<ptM;?0^$,9Y-Sq&JkO5U(!L>P!%5B5Yu7iVK3jP7IZ!;^'4!H"&&pWK\+;jmO-1?ZRLRWOthJV'lF9kEa&R0-;a
%"I(cH^iEj-iQ0kG%iP9e'!]Q*\EkRLWpeY>jF^7?Au.6O;r6F78$)Rtm;Ah>2sm&pU>T#BrTfnJSnc!=k5,@OcNg(;2;_C);9_Tf
%?:)N[0ZC*_&uZBWjT,H:IR/fTph@V`pKjSM,g:`IL7a5Pr&m(``4-m3lB]3R>&jh-2`Q:E._`XdMN&Qn#4p=!p#Fdf$e*-lI0US0
%h\UB`[i6s6rE\t-o"D$jo>)fQ2q6.UR`>:T;q$LqNJ!H+J,Al,cS)isomcc6#&"u8.MeM&V=drkB)(YUl.9)8iO\:*=auK_,E`T@
%+"T,.@=:NXI"C6@GT9]dljJcE5/?qREZZNE2l>J9rSKLq@rF]3SWRDg$Mgefc7&A5pO8dRoF!ZB0Z6Ec_t4<s4YTREXa1ZsIdCq2
%oG]gjGE(X,%"`sTj$&ll,oS_"9YZGU2kFL4&+m(!"&3+&ch%685*4jc2UuNB`lR!$Brf6Ug@koQ#QBpjErS%o_.h*4"L`,o7n`_T
%Uhhg(JoRR0DbS#r+/2G=[I5$79u8,],@Y-]g\5WBZ0?*C+$qdKgG4.2fU-m69J[SNOQ>FKaD"+Rj>#gSUG8(;n2-mprY^^V"Cs@e
%^bF#HN4GdUAi.M-NDD>Kdu;:jb@o6-qSA@D7!tP]\QKDF`b4fib.mlhZI*bH:-bsLR&jPJ06"WsY2eDf!6$eD0s:MB&/?Pd4/Me+
%DJ=]S[Yaua.3Hsm\,0(&r`@uAi;H[]3pTGCSAe"_6\"^r<Ucn%`]c[G]mnE/4VFNSQK^=YN&oheiSdJj]l=@?VX`NQZI^qiRtQ%4
%7jI4Sgma%FUMi[%G2_<A^I*5an4a#!BtuZBBpf0Q^F.r4i1oEXaFh7t3,;lUpQKR&Bk.kQQRD.)o&9ekGS+;iR7;JZ5K`TX+,mfi
%S?-&YM>XNL8a;*HUH\*sRdb5Z)E0P9-YOHC2)\H@A#d0g.9/?-?=TqH-6XY*KX@-h6@9_DO8R2I+rR5-J)d_=.8@Ygo=d'2\4a<h
%a7Of/Ju0VBq_jmYU<Arg3fKrtb\9*/?W%8qE<"?S(a!+&_"\^Tr@la1YqnROl1t:t\C#b*go6?LTN4#+D6$gDRTA*Kk2kup;8K1,
%-q=.rHuGpAf\5PK?DhM'Xd7N*+.AbhBl\TSSRZSYKE2$*nE-Q,o^Zd*kt=74*$7/c\paMDX:P%%2?p0mP3%(UXhU&iXhcsC*e"=G
%R-V4Q\4+?^(OU\PVj@-65%Ce5HuRa,H;rS-8R&OK[S.dh#UAb]q9\j,W#!_+;%_H9BR)ja2F!p$HjS]2nY6.@nWD#T/O0#UDB4`U
%'c:f"m3AH=QHOp3i02U`&:lrr7g543r6,#sK0htSoZaO77=ugT"]EsHZ',]-<@WuWj%j$XEe]S]WbU.kIej&Eg1WDC[4F4+(fpIj
%\<9k`AYIee1%q9??+]3R,]q\[e?k;#_Y+XIfHZD-b]]cC9E20mXqOLE"'Ngr:6b:)!W3MggS?PJs7.sVVk#79N2J"r'?-;m)L(G;
%kXVWJ@C'mI\gG!'7J'HjR.d85:$2ACpS*m"Tbh8ab`=DI@/P@Kr%QX00f2(!jCp9iZkm<-Mt0LZ@Np.r`;bBp'OT/&f\>(n0?SNd
%eDIqUV*+-6H.N'8Md@*)`b4X<fEch$^-e1J48.2!dMfm9R%pJ=p\s/'?bM+k8pnBdDgWWnr74f*ncY0N<5Vf>+(7s;BW1j3Y:0:.
%(@=&0!T?T-Z+;$8mrs29Nh9kLA3Y6LWp'F<7H`^3eu+CCWoupSk^9W!<71X\']$F5.gcftG/[='oWn[JoPe?Mo44+M=XXnkT4ajm
%fR)_@s#]MmCIu1)D[skWA,9;1crCgmA-K9p6*D=h1tuW%W79jFKq.\6MZLJjRE]?=L;M/h(2^[o8q%;noli$lL&t4q+9KLNEIJ"'
%+.NiapumBM%>kcr4<Ot4rIOto/5lECa%tYO[G*A,Il+8KObWhCrE#K&"-H]s\Q)&Z<_:A`>=FR7(NF[eI`Q;m>_idKFb9OQ^P[D/
%p^?MZTlO.HZoUq)=\8r>__5>6Jc@>spuI\;MCS.\+q`1sZB>i!EV`!ET90p=6&[0*2Xs\!.3a99"5`F-=&7n`^Bh[XLOkpV+].ue
%>W`1X+hL^p@Ib`G*Ve@3i$gpZ#PbL-QoCL8^Mb8<q9lI:*)J)@LqU<OR#D^&.3ecQ=H"U5('2@sT88!3PQ(?lI/,o60AS)Z+&8c3
%!#7pdg-=S:,tYq<A4H=Pe]9"-,S#VuQV!uN=BUP3.9TK1j@*<Ia@R6c45Gu2M88h>,fBc;%8i2hs6s!c)Zj/3+H$MAJUH#pVF.Xr
%PD+WYYQ#..s".U:6N9kIM$g*r$U7f@]*V./IpU\'lI1f;@%cb-Gl[MNh<Yf^bs/<#%mW89m?!/P+*d/P4-r/iWFW5C<<$1Gr(FYL
%A:3P^5':)l+-m\r]n\hsDD1sb"%*:1KeGS+k;9m2\)/6,V$;@Fr7@bq17"T?@.jKR]Lbo[*PO9E_"tVGP)O21j_*o&!0!M&&,eGT
%i]frOVuGrYK0NNub`\#&?oWl_lAhD0^TJ:%rq*B0@-i+l3P\c=o_N`H%+O0QA^RoW$#V?I:nhY$F6\6BD@0b.>4^W8cX_lQYPQif
%nFnlgjLo0#4?7.=,/oa4<0.hMmaO"]T2FGee]1'r99LEF$'N'lOJ8ZBI#HM<JW%M-KP7WXr$@$1^/g,_`;O/EdDP.&G$ei$l2Eoe
%"<sRaZF9]L4=.U8I#J0.g->!`Hp$YD*p2jcZ#M.iT#@o;rMH]H9k@'lW482?D&[Z-AU^G*L<s(?1p'PD%l8rapfIfPnBU,=!;gB;
%B(_!f"kfI'Y3l\A\!&-fRim*X1osa"WpFJ(^2!hiIGsP;S8mMK04=0hm98-,omAlpLRr!hr)gc0[1TW)rC3jXdq>u)1O:V1qjN7V
%qiGWRmIe1Y*1ei::k%AlPa[6-g*0#4T<@kt*t&@@Ae"U_O'QN!)Eh<b7SP:!IUSXN#%k3hpZHHUA&lS"qpNaamj:kc/bW9dM5a?u
%=3+JaXB5@9/C)YKqI[_5J(+i(.u-^pa+p(bYgT*rH1[%:2Sn[]-jK7\5Hq_K>(NF@G<_1i2#:g`iK7JEN[83%`9JtY.;EJl:U=,9
%r,g5+EuU<2Ce]g8gi!q*Y7gq[6,9'L5"K+3@:4]$^@OTXO6733$!.Tt!M]tDZYajTh#2c$(*k4HZ_[#d!f'g[*]Q$(IB1O.4)es-
%m,l*oo4e1I-4EU/*qVOHr`><%Uk=]:#<X]p[=MJe!dVC6ke&g?fqr=\+B1MuOAen"@L6\h<5@ko9=ENU"Nk*s!b.hp$Y-f/-^9_P
%;Y&kA;Lj"H%SmF!4M_m^nD(IqcSe'\X_U#F]J34m6hNJuB/2D!dkNA<f=SE6hXg'ZLsbF3a[-MEkqo.$_`7OL*5Cep\%3MT#CY@#
%R;YKA!.??D0ft'%H4B]b;O?[3B<cp;D"fu&(S2p@(2?giE+e>ena;S("0=Ee_jPq2d+tF]<5/ffpdG%!gq,+_$Ago!:C^_ag)]Y$
%"M_J&ZqG$&eERI24Vq$<W!^O5+SU*#me-`O4.m;q+0j1^%pgin;`m/JE5NALlWKj],n<`$m*:YWegs#f&%='-PopJZ.gC0$+Ld%j
%WG4Ac([YLAG2)-@J@K?\LO$&uR-mjS:Tip/Fn2bc;j8Hu7b8U9e>pp0!fXQsBm-Oep&esp`o$5PjrJTlBNOQ8HLF5`*I)7`]d!18
%Eb!0U]K)jE8RZ'/P$e<CK\>c3FrU4h8;pm5<Y-N/@e!fqR/!QmA$7XC^?0F[ibqRFi3A<WI)%]hB'L0[MQc:<nH%OdJNi:Z$(u_%
%.9W]hrn28.Q.H.gKb6)+nFq]nN.6AA0;^&PBJr)]KK%W>c`E0Enr%2hTD!'4-"$J%?d0MO/E)rh')rh[nd"OV`O+8:B)ELEf0ed>
%2VsEaL-1%]9LGL`QE>&nh!4S>)`Q[9n_k?b"!<u&U8R_EA,(U\p::Lg-W>p!"Vd8G]]HKG:;gP][6"7.Ral6JhUh+tc@q"0+LF!W
%g`K>F[LX:+>$Rsa/O)b#]sL.0FW],cZ&*+*\,-XuddI\Gd-f#5U.AbQm7+6]%sSa;mh"OP8-0*I`k47kH@H,;l+H6p#N%nLlU%P`
%\,JknUU=G0mu6kX(#Atp]piW/"2:&CS@gct&>b-`EQdld*d5MK6a[U=WW3&IR(EYE=FXME=G`j6%H[sO4'!5jqS#\Zh?O<tEe!i>
%f^b62eAiOIljZ@:5h-2.8AG75D%Z")]CrRp/6W\H;'G4QNmG&CCCHY+N[Z1Di.[>pn$q!<XktK<mlNmJcVUt(DZg><bR^-5<=Z';
%20[8.3>002e_Sc&o^_nT/nZa!Os]D1U!_^/7;02^XkuF86JTUV#L`O$MgC"Xmc-O6D?kK@hf\(fZsN%jk<G\.LSk>m^>OcK+D5in
%O3+4uFSatCC6+&4]m]4e(Rp\@OioY)?i<\cU`*C,n#!UX5;]30A%p$VoU0(f&rE"JnW+*("Qm#GX]Uj4NZ;.aZMVPkLU%/Z'Hhtg
%2V_^D,%qTL`H8tp#m?c@!3AW-Oj9[mQ+%WaTtSB0/mnDHc#B,Dh0q@kiRK[FT@Vtofl%G5E#mD+S*X!g:*e$]Jce=P50PHE%LX)C
%=p;0/6*/l2FuV&WUQ1b4(5DI3=1&(CO'a]@G9K#!l:?o>f'*`]$*VD?4c?I\n?O,VK=Q`eF6't"&Do(q**SWIT]I?7X.0r2imU#U
%2]L/Q?0M_Rg/LE*?DDGPMd+8W]T66_!@VPej6Z)Aj2B9hmDTa!rX;YBW:W9]^Cjc=XK9"PL".Q_'J23=/JAiNYUha8j;m-W[@X->
%d#E4V)T@.<2q\"8I*:k?pYLiFh`9!Onq3N&7$)0Cf,X1KoQMZd[bHI/IC+TE11RKlGMdp#]g&aACrKah.Vt0a^B8+%$HfeO7_^;?
%X$qedmfu>c>ACl]bes`rC[Y-g]n(@)1AGTPg&;'#6pH()7^_&"==a(@rct78Ni2maZYcaTp>*=X7iPNuSSlu,)m-kY%FbG2oRD`O
%3j@G<[k&X`]g&I[nc%BN#Clss9mG.bJjsiuLKKp5]4ugQY2".ZdKc*8p1IoW`Ql6bqcJt-;+kN1kPq&Hi[+Id_^jU>C:IpHhb\rN
%,q5G&Oq<lk+.fWE<C)suq^LEd]jAG[6VZQI:i#,;>lbS#-</sR1%HNKg!p4N/Lq*\P?!l43\d<CGU\;34_F!XTl:]hL:4:jSP"f.
%;b\o75#pX\_8]]lQ&/\)euc-3:PX5c\jS4ULf&ok:.ZAqO;:@rL_KqNJFc*Z0MG`gJc*%kM>.;]L!;al-\XrF-,%J*A7,LkiF2>F
%8>MteN;o(>&HargWfaIr3]-7f*\=dp/N550O+uI_QPdS*]DO*Vcr"DeD1Au3dB05LpbH2nB=/n+H6(8F2%Et5*BYLfeRf=4,!TSN
%/TL5>&^J0)lY6<>abnVaeCn4ZnNQq[lkdN<DK`_#>3_YrB*5b+9bp[5*0HuT7r"\ccKg2L?#Ktibkt\cit7">RB'PKdRT-as7ACW
%r[G1:@<T-BXS+:AFK&$Ar8TSVVM!%YhA>Sb&W0Z(?0lt>?u4Z#=C(5#(SiLGBdW?`c67i@%I7UQ4qT*Rhi+2pI4OV3%G,KI2:>te
%'</pjb/gVmPB$++2)h>;h\CGmLfla1[]i^+'L+8cdGp77QRHD)+Z+Wn<)/*LC7=8I03HTh6CPbAd-h,A0TlX?T6l>IN494c]&!>\
%`?BLde?Q^4nAh8&rsU^AU^ZSAO4PSf2U.7`1d<)Wfu>_Khe9S5d"eOb6)OTZ2F)JNdat8KhVAo+JMo*-]cb_?rC6h9j_.K@HeiH+
%7cRtKYh]*F.7^onm=*k0lKk2"8W`[Cq=q`1.8W\sI$3[g1AggFnSC+/&&m];KGf.__052re(f:fFGS#GT>+VG![p8`G"LcGm9+Va
%D.*,GZnGG_+53i]%+Ae60("h#c:\o2_^qB<UW3!WS8[T&<k6V)>=X>/&s6#`<L$9tYNeQJ?Bj4UF7$8=GpfFZ/jYiN5&p!tT9EN3
%P9%+qjdfJ..)+0e9rARuF&Cs\#2EO8affn`EbW80ZN;=c<VC.^?&4g$4PR&O)k;W4K!r:\9^%.h/+eZ\o>+fg2b<')Z4FdPc-;Wi
%HG#G6)s2Nl,?q)fc5spP8&8U-63o3^G>9r0a-hCV@3"/'9HIOMlGg^760IFWT>=q!;%Ekt(MA?9V7dbPCbg!l49"LD,MN?t9_W(!
%,VS;kn@#8FGI8cC0n2N=bp9d))/C0eZquMYM9PeO98L5_>bl:ZO6,1\GakRKZa"%e$f2rbi8Sm)%GmE8>;^[=l];oU1U-YcR`mur
%afEbm]If:`[MP_($@/rdULm91kF[fEjOMBb9[@F4??$_:d\A/]k\6h_?:72-e^1Dc$bSWT[uoJ+k0"CM0ZgLt+tM2:?2>>18Wg@$
%M3^6=d&M:/5NQ[k;pU_d_Mkb&&(G:Z?u%cg?&dpqi_+4HaCU\aK(#PJ>\S*C7^"H4bj5.YfKI1l`Fk,\:FQiUB7k=uhi/XKqV9>a
%n9?RWrqs=RRHnHqH*:)/Mik&U.2RqR=6m!50W,5F%Y#n#JV7Z97`+9MC])P#FfnBA1HP]K%R8;N@6443O+=gOInr7XDXbIuCI"WS
%#BFDMe31$&R3m8YfLj/$O.tWWp?MKR4frNPA94fXEI+@UB^OnFXD^:@j;.+*jmDE:r0Vn=X/oi<Xr:FR8%Hea"2D[p*Y_QhSmU!5
%>oOXH`pU)_n!DA.`l?;-3-TTiAmVpg8iV$&*6GIr62B]ie`XXE@!K$8<>_%UHY[A)-.CE`[0f$q7qpds7Wkc@V<"e[7Q.Sro^of-
%?Ob&@er=qJl9'jdh;6FsXsC(WeGZH$.\Z$(3#bG[guuA8h*nVS[[CjLZH^=88PrN8eX5&Bmu$)ee/\h;bfLpZqnQ5?K4$j4bt6H&
%<U<2l)/ZXS-6pnU]c+G@l.Ntlc.@V['`CUkq.FY),Y!Bl`**@X.Q^GBTRIJ#bhL["_6(C7S90Jt/@9d`'+>me^''eS;Tk<XOh,'/
%PMW,tGW0Chfh(/#HkC(I1VHU:$'ujOjM?Q.bei1>E-=Z7$I26%;K,qc;S95RS,b!?>SFPu93]Z1?mo*\K?O/VBJ=fhP7=[bhk(,u
%\%/DEZkNfM=)3eTT[:iR"N?sA"_4n;\R95m-3k1ll[(pCAbJ<dL_&<L1349?VMt:FE:#3$+&&$c'@27L$PuESF*$e0\95M_$YJ+%
%31*uUeq;]$lpEJ9d%(O_q3OcoB>/F+gcb)L#59>E20`NS56R%U_P(@d6/E'BPgi1,Y^72tSdC`r_=PLl9^pJ:aT\ji2X7NkmH'`K
%]K^,e"s8b[Q!ikSZk0<DG34D,b2u!oDO^U_o7F1[Coq!V"RY75G4;>UnIk2l838WD?#q\UgW:M^/7`B0AsV_KB/<t59:1S.jr\5h
%6Sgk='+\;XS!h4Dg>5NoBQ7`5^"0ogfj$AcB/8;DQPloS>*q&4pZ"'AGIu+fKA2sWRH)FuI-.e]d[iJbT,2.C"L?CVg74RV-j1W(
%8hI>k28(Nb1sX/DXkD"U9IHIfKl-[EBCbC_TfY3F&DsM6L)QnHfgnEcR2'45ak=U!/3KD<RD%;Ha)lG^F8BuAWup^LcgDJMA+nj?
%H"/a^HP2r&5&E]"Y@^.[ZZiCobcI3k]<bP?d$fBGp7KDaZgC\n520:<CND;P>Lg:''s0A1^>H*>$0hDd\O>qg24(n&Ga[=Amf_f1
%?!NoSM5cWJ_sg*(mW>;70m=48gRc#_4jVHBCU5s@e\h@^h",#o0\>Q-8*>Nh_$8S)Ic9k]?p6\T]U]k"bkA^)=2XXq7gkgX=eT#d
%hl`U$k7@;G6Lt@,R[LpZl!M`n2kOI>.o-V"rorAr5MrH+>789)).-KnY+.%2(L!A`\2'7S=NcU]$^la\7(-7NQI#:A%POI/$cRgb
%NJ6\^mF$S81u\m#.rhoBeh<a*K1P38EM7Rg=c?I`Q](D*]BE`#,^m:lh7)F&]>oWJ@fCOlC[n.(e60F+e.3@rnl9q>Fg1bIfRM1_
%JMpcgg^#N$X/X8g3@1j\D*0-A90"5F\TCAajAN6g=BN/J29SXX^!=Gl1FpO>rTsMWBJF:f6`XBM+&WRY2FC^C]kD*V7IPs$dH=-c
%E_j:Q4kdaN:h-g;gOrn%ai*b_rXrOt0&4Z'bBNg+o%$S6H$LbqB.]`,f]MaiD;?iY^[lXE\T)i"gp\AC_P'fn/hA=9LN%QPVA.T'
%KkgBr7;mo6%PPG&F/Cl<IQC.l_u6!%Kl"*$oIub?Oc8+kQ1]r]Z]aVlNKrOEDg(7-/g":H5K7^oXjZf0A>WX[N^W"g_\$H3U.3Y-
%Q]&q6ZYE"U'=Y6fj6afoj>hNiNsodT68Y4G3K2)gV.MP_n%^j/rUZkDkkW'k>h%OngPIi_g<J09^"E0rjRfgdR]O^[<jfchrT`oV
%5IPld[WfJYfJ0Z-P.rXV92"Q]&3HA0(:FjQ+memnZbgu^^CX!bZ%UIN)iO="9*\uH;*52fMAq7G?/.;k6h/B$,dAV0[b0HYT1ec/
%%98QL(;nRtSSLjpgAR:Y\K'Fk.TSit?4LQ`@j/P4Nlgh<@n]NXT#L7mFt\$*R`iX@%Vj,\bf-hP[Y_3][;^M'?!3!P?%lqNQcjIK
%\90[\Mt^\%]gVX@\XuDu-o6]s9q+qKXWE61j[`*:]W<Y7o($gE92:A*40juS/]bo[_Ll*./iDaWeCB/VHlJE;<2a8VL"j?!^JrK;
%V.ZXQ[?m.b"cU^bnO7JHB;^sKf<Xr-ok+%Kg"=V5V.PcE;G+7go;V)nGpd`tX08EBXZ7U$an:q,ji5img6s`0,jK/\HgStUGLd\O
%%@q=!T%e2;l+"0=Uih*jQS.QI#O0CMhI='7$5`$FdVNAUUHLKcoC_\B\s^2?XhRi=+#bBJ=5([VE[A)4ACepC&*J$2)kFZ1Cia07
%^Uq%MQgQbmp6Tt^+0H-*"ZAH%cGEU-U-3F3*d-q[N]RLA/^mhL\%3S9Q!$9,?HoE@Cb\jjRLa![Xlk]_]YAeoA*-KQbuLo]l:(*7
%W]i#'p$C]7o2@Pi12(7n4$klQTA?*`G.Qchfg^l@/]T\J3nVphrViBh/T%-GF-hN:XrJPVoY'9u<56&DX*Wt!Y`N'pfPKWSalQ@e
%lo(g))U#65A+AQXB;AVp.HAKq4u5gOrSD^:/[VdRLa;GuG=+m)c1]t@q/H3W*9uqtWI8VRcZc"*0'g'mS^qhf[_#GmhqV4!Tr6_Q
%S$KL"PhPQnKa,uQhPN.LhCB<+GC0"(CNG!ipnkO8EIE>NIqkB#U-'CnK;E,Ql<rX<JqkQl'Gf6\KDPDgdpYcUSf_i.ZJ&aWX<ATJ
%A^eJjYYqMDWH.FhkTVa.FOXL/eW6J\7f$6%(Sp)\RDI&99C@'[0@e>#r9i/'+TKg'n"0aOWe6M2@F(G`Vj?Je2CI%Z*'.A/bmUFR
%Yp\Z*4Lr%Gg,_:L/$)n^B8,a'do,0(37KA]B5YW+A8uCuQsX&Y0%TmLdb/[:I.f+<ZbL[,?-&P+Fc5MIo>LT^G^`cP4?Tf"jIRtj
%fg;3FF.q0bB,B1Aq3d.YFYe4jn(^'3*f$*1QaQ"onl>I)::\gAc:V/^2cB3-BJumBC\<=^lf-'UIGN&"%W94"Du"!0<kH,Ggm9p;
%6Q>.FXZ#(H^:c+@2Xc6Ad06i#?2A6:FE_n+34Q;Q:$"QVb-Ui__<^B76WlU"Ln:1!*d3l<je7')%mPg.]7WVU/NuDUht5+SghuB-
%grc-oR+IaR_&Vh(:J0m#I(j]/3R=&'bGE[.nu.%5[OE#=i_A+_h_cqT9'rTu;AQj/f(i%]MXLiX/&-(p[@1:qZl7\E.9DQ`/dKqi
%C*lu>8[7+*EFIh"p>!!,p"2ht?-f^_cKia<DRU4m%Ab!kB59Gcp<`n#VGD6H]_b[<%C_oi[G?i*e3^M4I'0NmF76)<2V3!tal_,=
%Zs#8PXj'mY^!LNM9?(:bE@J<Jc7Op_mII9]@BV*,^:guh]<LUtc1R)B*7&g!Knm^/*=hM"D-iBdRu*Ji?#uk^N('jd-@0mmI99OY
%H_L7MlMk_48H[(O4^tnV#BY8Z*Th4X\D*2AhH3S"ZPtg3c-AbK>h-IK?UHh2SqE+-cUs23X_-GT<iu,%(%4%A\MZ9K=-^#J#^&!N
%cCRt)f+#fh_$uY&cr6Vd(jgETE/^-<>%LSubR:OsfR&._m\L'%rM0SU>K7+1iUr+g`O'p$Z56_)Nass%m8eY;edh*c_3LicX^O\G
%F7S!Z:7bb7S8E0c`jaM/DANg>h*G0uEmeB:T$V(M&:42:?<\$(1?n]"Eb9`re'%CWV,afq-@HHlnkjc4Ci/@r+L<,u$7&I&/F1^I
%@dVEH#F-gFTqWLtCWc<n?[oZ1`igU;,gnd<&Sgt(iD"T@@-I-kMsOA`nUbSP=,"?9];s1*WN'ufEc\8s[HRG,]6_N"h.>00NP!D<
%0A6d!/+WjQBtI7hgJE88Nt985]m=mr5_O?l<mB4m>$\ZSLG8;/TU3WMQcqL1rGWp#kals)]=5n_KboOXK@rfdBhg6JB%qQd9=$Ar
%gSCF,_W>#_EO)Cjit(BsF[!5Fc5s)M6?m`eB\$R:o6bJb:')X2).#2;\`uI$[haZt;s?4&*nM>)H^/DgIVU[d%GqZFK>PJ5!"d;K
%pZdi@OONB:)7<aVCkXeXe#Oblh.R4NWb\?8A6IgUSJ03rMjAAq'.Rc,D:Kn"((W?i+tH^&WT77h_puSN7b_4@]u[=O&eJL:]/T<I
%VP;c<iUufbc'hV#]qan2[c[rfS+?,$OQAsGOAFS\Wm0mO8<,A.4g,h2in`sp^1sf((r>]a(UfIb_ED1Y%O'R4V4$.!I1tHof%I+s
%MqgLVf2cpQ\=.Lcm1KoC'Z-?/\J7]nWbnto/iM;0Q)CC(8knKeAA.#>Jo="GAbV]>gpoodQSqTIPSL*g-%]:uJYF)=$?>lFIO_Be
%r@+gL=8-'BVR\[QPtPa;lT=s\VHU'fqeCS_I&IgW(pJOjgg/0f8X8Vsjl=q-_%JNl&@^L\];m6IdI%Jlg6JdA$b6U5.9Y72Kf<Yn
%(J#iSR;A(6&B!\apuS*0l#uB*n[68m/P;jMU=#54"d`<-=Z^d+)OnX;HVr*dKuA\A^`a,)%$h=8.;":I`#AHZ/MqF?9t=eId`)3E
%>28EShI?'k2*Io$eA(>SiA8RK`F#>Koei`RV^]ek>3LXH\pSgp.gbOb]%-2N#fN=3SWb0c*-<0:Wt0P$jgk'*UB)RN+4YS-'U*53
%Uh[4)db7c`n$@e(<o$CUidRk9BU.-`eYMZ\@6<5.2_Nn)jo,98l8uu<NE:mcr)*C?3nCd4k:O!kaZ<-D$.ZEkqsAZ9O"6Dq/,ek\
%9IZ56VrL:NE0B)Ffi>0%CWKIt7W.cpBQeU?Ke%#B/[U=-T8%m<%`964f6_nsg+C]d0lhF9@!TBa:hcn_a$"jYZ*@it!nG71=Y1]K
%[ENo9f/.NiP=r4+H<A8E3Z.,B<pV'Q=HM,e$/l,g>l"2,JaYi-V.lZm?FX-#+M)T';*Ac>QG)<RbT3Db(ZWYPI6"=q?PV;QXLfCA
%%sZ/0Q%``8i2%h3R?6M6]rE^A&"/)L_fuFjlP'o)JD1hOX[MF(<R(Y"i-EE7Gc!,-Zat#:<f5uJK#j,`,3"r1iQVfl7^',9A)j?d
%^]e.;;;^9gM&>Qh7#50Gd+"B9350X)REmecKIG45`YI"qNdSAYc^^>&Q2JqX.Ju4O>eRB[>6rNRn7kV#9#d0[LuaIlB^SHi=6VBK
%?/%OhgVCiJI7#=fL-&<bh4%PP9jLP3P9;ZD-Z?s<r(<1!,)0>^ORho,KWK3tM;-a88uA.j`K__Y[U+Sdc;]T`o/h^rpc)!7FC*oa
%oRM1f_SP@@?<C>S0dp1KPAUZ,D:6sBW<1nl\[kOk5fc\)Ck5dIicl$C&Hr:r7G+I;J=Ou'UkbF.K,j_#pP02X(n?-tNa41rLs43h
%?uOsA?&dhjnaa>5lsO^pn"h*L+Ck_BDWpL!>Nac^kW.l9BA,E"`olkl35j)R^,@lTo$JK9(S.%>LN"#R"lG*N!Mp=j<TGGc(gYPn
%SM!/k$geIG?NITd2[GSaKleJeEa1B[CkL4$.Hqam*,!*I/S>+/Kp?HVkKVJLmTr90OgSG-hViQ=^<<@BY%Vfg.,T9f#q1C9EEMq$
%AAf2o(X7mBN+!uM;4&Ai75/(Ghnq,69FSJL1Csk_Tb3X,:_":jN.R,K56V>E*G3APC1iI0!$:)^Y&]24F%DK$L'IpU5+fYF%#<)+
%*)[1iD%8>nRe1RTd4$p?2D,4p*3i(r6hEiDGB*BiP9X;+:.$9C>s:agFu\]$$-j"OVH4ji(?4?LR5SZ@./>:*kdmsnMSA1U+LJ>n
%kKtca/l+3:QXLgfV7+q'C2KTQ_#'[((/6BPn$gCgiq)mAp&j90`00J,TEZe8lc)<,\=?+uq4JZcdCFQT'&'(?*]UXL=uPjE7'-uT
%WlMO<_$:!KABskB;GG'3U+]!+M(joLTh9jl7eXYr:YR$eX)p:=M*#ahj*D;0qYJ!(j(+Xe,>i@j@t)-H[#Hc/3F?%Fc@q>Gb0KA<
%7f(Y8>3B[iWdJf-\#/V2"Qs(pQ:e`9G,d%$.m"h5)IX7$'jk:`lA6h+CoIVfR^JYIrQ*_9CQqWdg%^8c7V@*IQ:W4u*"Af=CN[V"
%LQA%O5B67Daht%2r$*S]Hh\:7N6p#bO$=;%['c!B<0h,>ibjD7$i.WH9'c9bkl;k]o@FM=pC08bfcNNqXu9FfB>eq"rPh-re%DX5
%\^gG\nfhM,:l,O0+DksKEWPZ;/qYFZY0;X->!:JIN.3Eb]K/XLg"M4%Yuf3g7IlDtcfUjf.!ud3H-Vi8BqDq6%10;G%BY)S_7/us
%;]\-:?+6Fb6MY6IckG#/G]Wa:_M6QPlEKTg^3[>r74t+3`"n@c:=rQn5u=-XV7^cO?g813(6PPC@C5_t`6uM'qD$`@T5-bNV<p#R
%(gIXVfZEPlj+FEUY+50:>Ysj_KJkd`C+?n=E@s45^\J/B;2WO4U"4;?'B8^Id?F(N\bX)Y.OpkYrm_F>JpPf&Y;OB)*NOn]aqG(:
%2S)fK/=<0p>[Nn'^"HL+8/;M#(Eh+Zf='tX!Q?li.tAS#U,Ys@g8EX(G\a/[?LRmhesn>R/6V0plKk/\pNOfe7]nn!PiboHUq8DS
%N@<n@^$J<S6QG!aerb^t-V&l3b'<7S[tTDJ=gPMA]m30dj<UH8[Bm30q,e#[F6AlOSGTemgXiKe[^!3Sh1/`XU&LXfQ[@-<6nqbE
%ZRET8]OQlCl@N?">D;g=-5G48Aqn:WZP95&HqL]b.Xi\`3tZnE]DUlM0r0OfOCZ[G5a!u;R9%0m#B-L3m(l%p0Q&\Oi?]Z3;7ghe
%c-78\L>J+<9<Zq>8oj"Te3Rf=BT(>G0"``:?(2Sn4Cmn:kB$ScZJ``OnO6eB@]N@GkBmGf'WK]PO0/t(*=o8OH*B=s;2*#>F_3cl
%m#*+tI74XLM94\<&\?-Z]h,5^b,WKA$G@t26`[-(n87Sjme#JgPBSl@$(*TK3Ot,T_H#-hf9imaiEZ1(ZiShkPKYGW$*eS\5rTQ[
%O+7Dlj(pN^)"JYt-D,=)-q:^(;q1Pf-S+HH:8sO^]3)aCMgB4X\sG`)#6kWr]Y9Wp7T'?JJM]#f83U*)/hVd$^-2HFEE3Rj6FV^R
%IJYKmebAfr@Q(N(FW?`<7e`Xe0NTqLAf'kA+k=Nc?2"PLoX"\W;aq_.4=1S0-I3NGNMW`0B*XQc697Whm:;l*41"OM$hemQFNAmg
%g070:6IudiNE3+18ntFLbS0>YTm)%)Tf=Zr>&SmF,dDdrphC(-%AgATe_hp%,3QmE^.T#jjq7gZge9Vt=F9!H`0AMN?@m2i\D.)C
%=jN@6Y</p)KU3mi#3"J4YTW,Zj0dZk-CsOK4@dC,g.EcW^,sN%eKX]k3i&&IX5r_*lZ2JA]q()s*Ud+m)EO:&ABin>Ut-e\B0Vis
%2[ane'&MZF+D&2rU78liPpCWJ^>.;"ZuaVH"gN^1k+;ruUh3Fja0u?3.T^r(H6U%TpfM,k'("i:a3WqADc=ROEpKl$#&iliI!EG)
%DB*Ap1"B*=)26/Vq:9V!IC#[^Fd>ebY03YWcZpg^G)")$<Qce=iF6#n+3':JkkXAk&B`?R.ToPSC>rBskG1mN1/cG5Y,EhLdi,Je
%gJ@,67J?6$)MDI0Dh.\>g",\*i]UC(1dg1Vs)3.U7hV+Y8Kj3u-Uoo,p<6+9'?Qd5?T-](/ejd3mfJt3d%NoSXql\.8o"^SMZYh>
%lI7q*#BHke&!rI6o=<tMLBJRnZ$BdPAp^).A)9>BA*lg#5!V'I6=HY$^2gWqP,dEbG4baHlLW<@D-VD32q#fG6d=M)hPu8qEPNPR
%q*`;hbF;tLq,DW_8=EKcc-326S>mmC_rqQ:=W!2m&+R,VHbBJ9\j@,^X;cX@7adsEQs&<k/eScK9$232X7N<g(\8?BlluWs(<rB4
%q?so$LGkXm@nJmJgG.2VHfICdm&!F_hDQ>u+s*BgP[+gEc'O:--nNG\Z_a%_WHU3egIfYl:cb`k'i3HSJi/A84<S06KNdZ?]6O/.
%2DCqd-)h?KIJ/\s/ZMEO@8F),3T=7B+/%NZ/\Yhhe\obh0%?t_ot/5om+Z@eQdeA"@@OFiG(G@]>+!k6eFq2YMm7/aTi1ZWe@l^O
%:P=.PqaKK/"a"Yi$ROnmXn+F7nGlIeqYjbTAh;U_U3CuWD%U*cQt%`UX.>goQfDTfBs/5AW/`4bHP([MpMp`fNM^Tqhp85KbH'eo
%.Fr.JE=sE$fab4N**dEn6E'1;\<3b->eUR<hqIV,.bVuN%?h[\4,M>m:g5/nbW1S1jdfO3)%d[?*2oMT&!"?>D47eWGVr'oiT]%<
%4!$qGaMH:5(bqs'_C9%@GBf_WbUWs9ldh7VpjhLeU[\tK'$o7$^3?)B\`5em_hSm(\g'RPF[?jJph]85D.c>19m[lPf1T-916k%R
%jt4)N@%s@&_f4s3/JdMF]X"/SIaO0r-ai=4@<`8KpI.UbXq)u9_D4,\ED]H5ltTpHRl!!uS:lUKnkt;::%U)W$#(&F<Xp4]>JKLU
%^?aQ0F]nqBntr`VD\P9TS!KTb<mK7G\on&J^0Sf5KK%E@`OfAC<bs<JWMdQb`Q\rQm@=]!3Df>8'Ml+]]lsqJ,+IG]dr0@r?.d?%
%mqC)l217PZ/9NjB'OX<6d9:ulS&[KcERg(qg0S(;\CK2Ig+Q8_l0E[h9*VMXlW16r!\1at4!Nf/*6b8$n^iUrF`hl/[-l/4hmps^
%8fLF8k%1D+\ssr;-?_mY;RYVN7kQPZBZOO2`J6_u<7ck29?8pT.tcT2]_Sk'F#=gCKo$"\j)T+h`O&[,`IgF<N&%0WQ3hSp4&%/'
%m.KbkgjR+8-*C5tjl2_>0'BRcLfiHH]Y84JeWW2(oslMG*-H@1)AnNZK0$[bJL4-Z'"ceXjVKXO+?iQ:0JYuPAG7%E7P4tHcBct'
%WTO%.T(T&T]U)fV<o&XY\k@e/4]`#JqZ4Ole\"t+ZE#5\3E(efqGPY-VZR!Glb_`mbh2un+"rH!fF`G0Y^Y*lF:qGuAJ`sVqJp)R
%9RMTn/;P;t\^41?qXLjA7N\=q>#2L\bT4e;Il1G2O8!iln;4:J):D?oIkm3<?Wf=%o>5t)=*%/*.AlH$mf'M@7`(_;eN8C,B-X#h
%h`RTp-ls57+"hGaqIr#mQ:$Mq@49W%g:J`k[u#%Qr/3u:kH8lgX(3e$^PG=5=eKcL;BoAO[k,;\Rp/:bX<h<bf#?SWSV<@gd\XA7
%NF=p:=[b>h*rQ&F]kc)/a]0AVSI#3^H,fR1L481D4]@B.Z!;gAV[6i6L9Z^qX\o7<X1J[0R,HjtY.`H@H-T?:OdL(nUoI_`4=@?0
%ZM&-BXY7GB=SnEA.0&i9hu&t9D5m=%pOE1[YCH=Ks5Lb"_$^2:5QC0'\+r7Im1(E%s7lO'J+p\Y9K@:F#tB/eqEN<NYlF3*B%71.
%rQjfer:tj?SUYMh8l(!8#M[Q'n%\b;YPt_To#Fr:r6($<nR'+Krr#(WX6VZ/rqK:ggV<a8J,$o'pE0=PTD`lXk4:gi'(mpXhgbCH
%p44IGq"NBI6]:f-q[<GsPM9@>&,u=<HjQnND+cJWL=iN7Ie#S8s$si1p'(Abhq`M@:Oi3;+9'TgQN-88qr`J+:Y26;rdXaAl`^?d
%(OKP>=CDX92\-SU6[T)6hEqEaEKf:HfP39P:c*mrMbuI1HeFHl0obXNo^e^TSJCblqA8V5R)o;bdOX4>@u<Cr5Q8>\pk]`ar3rT,
%c8VT%lIg)(E;3/RAj#sg^\I/6s7SN)C$[2tSlAjqn&k7Q#bmF\Y;*@JrP]R[rXilGIJ4Rp["%YIcbB8/.HC7&A,*Oj=+0G:Y?-PV
%i@fY&U0852`p=As7g'degT<M1HWCCB#O<fZ@l7k)cVMf5b'rdL1P@^R"?&]or_"3Ln,:'as)%Z43/;?M<[ttY]>';;`d#OT?0>H_
%l'`<!qDUIUDu6O+4bIGAXaeI#Z\hA_hL:8,G3g<bIsf$.N^\0%MDepKa\crFJTC=i3%Eb6[#/+IWeYMZ\m?l[UhW/]7ZD=:N`fkl
%q<X.AhID2GTdhd-YE[cZWSHET56en"mK?2[WSmj;lS]+mf=Te3f/'u7UGafq:Z82M>(c,%h6Xgmr,->&[OQak\rC/`nY9qmq_1mh
%`jX.S,ArrMkl7,1oR<D"HYT&J?)R\90rKN:2rD@(4cPH@Dq+]jQ?GUP^4g-V#Ao=li>5l!mIsUTI'B:dIo!mB4oF?ds8("J^['93
%q!=?^qX`$_qObLsr9o.&@JoA6eo0$4J,Iu,J,Z3ANUFEgVXsU:U-_6I4pgr^']T#)^\I)@`/]n5jY(Lq#@2TJp:UFlDnQt5(S<pL
%oR,t#rR'5(IJr,CIe!)tTE!d"J,beC1B49mlo3L7r!b.AI[Bj##!+/\r7/!<\,l."a'\lEMl9hO^UQmA*1nWom?L;Y\P^`Fc!RYg
%d!$N_0-Q*,IOj/L^Tl#EIFlbn=UFU?rq,OVq<P+@NuSMei5@e0q&9\bKa)+"dJdMqQ)tSprR\gZ+#dKf]=Gh?^$OcD4:B_hpSBjU
%qu/Z#(:5`FXoDm+hoiP%f([bmH_/m'KKjgJ.f,IjL9E)_TAOEKI2?hsGJEq>++A:^nF(<65Ps!oJ,2*RpZ52cqWs-4Ih1GD)?&5A
%5IXSdVr(QfkiJ]>l)gqI8t*-US(%AXkI6,@Du%V$<`DlPajU1Lms^.HqXmq)qCso%f3,IDXD^4?ht!3(W=8f$,uX1mokQXZmp7f^
%%PNb6?'G(2NddJG\(#6k%=4Fj-YIb9]H=icS$A>fgJiI//H>7f:\%^rr;QZrho0L^X/q)r7u[)l@3?YK]RSE<*VC`ADirK*ZnK1s
%aEXX&5Q(#/YCHE%Y<MpO+$L4)]Dbt]nXK@,GE;NE.=\)n^T(;[j7""-pE0?MDpfGOogP*VqTZJ3Y2k'+`Hb5Qj'29VBD=RB+oLYM
%s'gJq[@6gjZ[?P+m%8\#m-!8*&ki9(7pi%3c;/obq-W"ua*d2oS)O=js.A<;>F5?b07WZgiR[<r7E'`Jec0mgkuKECWk:&\G.k=:
%ptO-/\lYkkZ=E:R9DM"N0]3MnG6<8.^:F$*$_UjT/4tEeUN`\`brM"Kqpj<GBJ67UnVSH3AP_D8^]2j1U0koQ^I#Zf5MIHQQT``F
%no+8oIq?+\[sopAoD`(m5PX-kg:OWZJ(M::iho$>mGDB9Z<<b'1n]iYVdJ+@m0!8Lc/dNRcT_-jeb<>[rhhDuM8hh7c2IY$O$<NK
%+8t%[&K_JH-[SCugXf6pR/ZGoX2f_gp2=7*IYe%#Mnd;^s+gP[DkjItpWVOk=D:e4_mO4U&*liq%9o(qb%GrFl#6TP^]"'.VuOJF
%J,aCnXZq.+?iKVBpTrc6s7kX3riJue]\]eTo%q896bhE@oH\k]+D$\LK;-uslJ%X&qn!ne>pojPB4(Sp#Q+#glEd\nqWFLNi!4a\
%.nD_T9&K3lqp/]#r')jWbKE7;qW\HQinp7?AI<Q9B)8*+rJRGUIG6/WHX)!Z6U/Nh]Ul:X0E1n8&-(\Y^PFA's5HOUrQia/mS2YI
%ht[$aRrQ=1qS<]F?i-rIUPA=<#CeCVccH&(5Q:"^?i8_5J+/*]NuD7!7ulsYpU0Q2c03b$g\i)+frG!\pZD=3^68MY?b,i*`,fUR
%p*Y@])?/`Y5PrE4?UdJ?a,dn2q!FnBr9UJVrVZ7ogbcn"++>u\^\dEUqH&.OLAuU.ITMs9C7EaZX']7dWTLjIc3<W;f9Q+1cHQPp
%`udpsRmDW<DT:5igK7i^\bES=aPlu?X2Cq(D>u@^m;6A]e[Ntd<;2`M<8L)jpVG`=A:4/N.J@.u9?g'(D=_;"dT]Ei[ENjLH<V@`
%HL(9e[Kjm7>]4HsC$^s#Bg5sohVA;+?ehjO<<0#2/K[UNp]sD^5I[9BU[r]qrpJlI9s43!lLSlgX\U2/=UpRo`a&+>Y+fNt>fA1N
%1i*K@HKuPlH.,Z.i`/Du2SLs(EY5;(B?POh1IrF)g"R5PAq.&(K6t]=fr>53'/*ASmZ$7ZqonhZo@ro2e3*j\m;q>aeH$<?h:*':
%5'O,i-rlKghn?KXo?u(U[@Qu]PB[EmW?m`"DVn+'YNDP7W-0)#H`J,jIC&mp7I+@r^6ThY9hFY&F]"J'<pFU]&+(U8]h.T\XgYsC
%lBH*_[gAiCbI3Jhd_#BIa+Jit;gQVAdq!fHm6c)03r/3O2e'_Z@EeW&^?&"`KqY;&Du2RUh),#cp,HU5*is9/l""G%m$fkS"151E
%lilOP_f&<h,u3WNRol]?@rqAB>eG=g4=%(R)Xj37L#8]kUnOX=Ufm>-dJ,X"ao:5Lh+3uQPn]hAEQ*W-kRle2fHVF9@#>1.?d3MU
%cZXC]aa=%;/q[(]YHUIP^K,`Ea5T?Be)6g7eSXQOqeGqJF&0\SFPiJ*k:64=DcHB?bdCS,hqe0Wq7CuHX$7F@Ds_ma6O(l8,43kN
%?Jj!c[;p-P_WOO39$uOcs*Z!8G2=b*W?#dKWMoK1l?[6S\,.:Rrc@s5Qc?l;;;'h-TAV7)YJF8npK;pbM>;e7M_t'I-/n%Hh;Yah
%@"Z1<Gr__lV!QE6,W2f4^:FR0'A9IJ6b^&rqlDg4#-%+J\PJMLD',7?`k0Mnb3$PileO&=R-.`k?DT!8B,HNtpTd6)8m6WB3S\Pd
%]!%VWbFZ28Q$qind[*,eme\o`/O8%)`dJfrg"<"D)cSM2;Z*PFZIbY>h4h_M]D&\s-s'b<%(*bHRL/'dqJ>kNC_kGZ]ZF4umu=[j
%EJ]p3%4&5.:jp:?'#*1]9GA;7-dQD'GPCP/FZCD>P\+KVDA`W%e0tb6M6AQ!)YcpD/fu/L'-$MVrN<l!rOY5&?6$[sj5!eo-2da(
%&(D<R#&3@!bbFLmS_LYGPJ8t[;$$92``U#9`U[Wi@3"DoE5q9cY`+7!k8`@S&Nm="Hrk\;<+"\1@/:SZn(tWtk6E7q:XhutNI0B.
%in)cLZ:N0!`JPVG(SaU.XLRkkl:5SF-^PYmogR;D+pEm39</%#fL5.Mkl>QuG%m>b0gQ0.lIrSgU/'2:^ta<XHY\KFf.6:3"Lljl
%j)&%q%T?%RBiem7<i[JTr`hSniT?$#?PMjmMu&?XhH%(aRAD_%ERPn"$uiq'=#'Ernbq:UQ2KH(3DU8&QJg?a?j>B:G?lTQ3YL%i
%O'2<ta],H[\l&gU#kh/m7V/kAOY.)glU#.5H^VJt'nfcA?D^/6RR8->Fl,i9k%2I*9S_@e2gk96=U%i7k>VFGpu6b8M<$?_eRffL
%js>IrDko!tZ&b_1-;[n$?n&/4$jVq&%b,i.(j`YWR<DIYqDm0YTl@C%B_Un<D>9'"ht&WO-]LeEj@6_&r:dTU@?EVsNg?1.d*rXK
%O@&g-VN,%!;\..r-'<eQ8B8PCEYgqqGn(RF*+8BWAui:_Os^o8SeP;r`?BEkY>/@/XF:d2"N+P)IWeT/!O^Xl!R%Dcq2b\!K:(>a
%IK)^_+>:@X06V0(%fTieb<C;kXR(4s,1=hUj.(9ih8%`[5Tp2C.h[%3LVB:&B*dtRh`^*+$`6'7!X#*C1_F!/H=kSm?0Rl8/!J=>
%B$t(me;YcgYglmV27;r+6L!Tu.;lEP=4(D$jDY*)`O8V[SX?2j?[f/h3"H]E]t7'gRo1Obj+BT"Q:S`?&?2@/%)#iP,;=$2(q%9d
%9DY33"_:f`,]jNH&u9d![_/M_Yg=?l*ft:.#)$rLb!?jeAde",OC+eCc;SNjIm1H#F-2R.\-`.P,H>._8jF1E%QTc2GL!d#BJ@04
%J/=AJQl>H]f6Q4SQ2IqD+7-Zb.F\(/;aY?.:C5>m$n+'LQVLQ0WS2*jL8+VqEV<cF<^&sC"1PRujI?dW9;6QEi7suRY=rX8.EC,2
%S`6R;#&UWBUC9#P-9rrOZY]`7]cutKR),slL(_JIQ8f'&gij.=KW^ZXnD<sW\0Ulr47fQeRVB>gNWF>'8Et,Y'X$tli]5RLLE0?:
%#a4>Y+&&*CN1\pP_(8+7*9s-MV`Nd9ZaX,CKVn9'Dj%.@&27DY-7s\6gS!+aJMQ4NB9?D(iWh5X]ap84giH08RGXT5fA)O6WJ6?N
%Hh\a!_^%,Aj4UmdXUl-cn_O^\.i?d@Q]smr2D,EXp*(.?rfL8ORN\0@@AH;@TN`2:At$d"8p`,=s/m9o2lP5_XsTGRe(?-[f+N2Z
%d^V;@JhBNuog9P9HhjW56]iAL_COs8K["$Up.a&"\4>&A[qRHHJ21b96D<`jSnl9Gp0H9l22`MJQ]jVsT[ic,i$H?MIjFdOdD\XC
%<sfUi;jWM^PAZ$k(FaQ3^u`Tii'^dImH1:31LX?^P7GH@k*;/&CDH1sE(=6l9qC8U1IraQ`/Cik:%rl'#ZkYh]1hJ*7"A=84P?73
%'=/Qbks:YY<5lWnRiHr=53T$;U*AZUM$/DI1PBrgdidEPlcfUM-.I5_OKNpK=9hU>&frY&>p=X=#XVDeR*m<.LrOQ<f9ai4a9[Y/
%%^*\feJ]5Z%?nS:Y69FR`NrW$%8I2L1=$ksWq-[38ka4c*/S6&QUpd%MW-qZ80"T[Or;BoTA9'mH(Sse[8TiG.n7ss;EOq5'[G"4
%pc\?]5XAR.4Deup]O8dObt[/^n3oOV+Ae+cBeR4k_+d"[!gf.-Qef$Gm;RdaQ(_m;k#$"%8t1TjM@n815,=3MiKf"&6YmH&khn3o
%aE5Y%*q/P2<:*>G-]!6!^p8?aE4.BigEgQ6!foLgCMNg@_bsTVrgV)/E><S+gAX([8g*E\id(PXkJ+-#f,aRg$@L)WDArtpDs\jG
%J[kG4l-"I1S36[G1(G%t9n2j*gXOuueE]q>@g!o<2=c'-e%&eC(_Tm;9%&-SR*5I=F^HS9+>jI_LYM71KbI^1#<M'#0G<!hSU0N;
%`0FdKUf9`s%ekZP<-*;C5aB<RS.-=7L_Sboog`tkoBH?[CZTV:T&B%bBDlj<.hpG;J3&`3jk+'.'i=LL,Xhd:jA<o,W95i1i8b1E
%+RRGd(bkli/$L*lq/^fmT5,UqEqW.\EDV_KlK#HLG(umHr?FZF7.O7bb(8Wm5`H\F\d\]5j+.&fPSlk.WX_0,6[7=-&-2("`%Bem
%n8aUp0&_%,(u-l*c[.ZR.&n&"(F*LRL7BSJ>STWQotCe**WmX/e2PJ_];C4(!.sH0"%b*XTYBUFG=6lVP;:((NC#&&MlYe!m%^WF
%P,q53GL-*mmB=U?!o1)>lHd^O/XeK=ZiVYgi9`M>-r2cA.K3`5Nl_`;I$FuPqbd.=.bk?aZRt^YUn@*s2B>0Q!bf$>S,rqu![G1[
%>j^>b(($3Jg[38V7*6[bi9K>SL!95qS'Fg/,&-Qg:)F)#S3"/4]a#s+ab(C2Dt>%g&0Gm<%tSb/R^O7s>pHsbE\rF6^C.!07PVk(
%82?)"E=HdhN\EK#@P/m&El8nV@%W-en'`_ZF3"/2ZG[=T@D<dO`>Yn`j+gHOfM[Al-FkDOr[^s5'33uEE>A-KVGTCB__gkj/g'BK
%c31&_%e-gXO_MEs1tr\KIV_W$O,bTp"L,8S'`m+b;UrnRFpV;Z@;28eCRZgbnAkX!A[7hS0h_$9V0@JE?4m9fde>L1RD[^X4OYU\
%JoIL1.M5[f]0f>iP2.h0nI[CXNiRItJ\Z-nK>+N>+g*A,l&l)O%qh4$EljSQEhc7<mlYH\/0m9a\AIk$I/Dc!>%Fo_6m<0raT@EA
%MD6(6j58*i&&DB=#K%@_0;fae8O`uO\]8oj9gD7]_/JOm[V1QJ!_NlT0a4Y;=I@&4H.sg>j>T:-I*1d!QWFAp8*5G*J6]g9.IIT=
%MNh@2'8449J_(SDZUo%>>_1Ek;2sdrONLkMn.q0CO>LU8CPDM#5($UW3-L.\D(]j;3j!b=b]mRa5.u+:JP5HDSaaAK7/2ScI38cJ
%fh0nm6=bHmY`"Od^&GCYEhIE=qqTE(S`17elmar;6I1^eQb[cLM_)p73^]\DaWn4o5qB8na8.mo?c!fo8&NTK)K]N@A+]Kc=@8H;
%ElJ0oPArBsNnbsP9m`4`Jg0KTMJJ!L*H4nPKJ^97Qb^!,C.;S;8.ddmb[7HA##l4FCP"JWfs4#WqStjD4;a6l?RKrUVl8FQ)gI2A
%=e8O`Ku%t:Xq>Y`)]>mX$7C/=!HulsbZk]e$6MnIUZr2cP)o:d"6B3=N(htCU`9qRM2;pT=9lX>GrJ@*Fp<oJJA5,9bE*Bh-`GL6
%NQ%Zu")0A-$>+#b[0c3Zq<i8ap41_&3/%Sh`L]jCgG;f[7>KZ)DR.o'.*$ZPl7'C:Hb/12XPn)A4=I?EOIjAu6[l8Yhj)NijRhAe
%o:$Ii$qNd1pr9qpiWDA8$HRp+jAhf*i$i#F;Fi.+$I!R4<'l5AOe$=s&HTu_jHLr0Th5MJ%Ts&^I$#@hV$BA#/=%jh$,Us0nF`BU
%F"9WM@U16q.4V!EMNM-EQ]<CGrtVdLbu(S.MMR!&c>7HDIC<%7=<XRIO[9F_#ZA:8o9ZBs-aPiY2aM`raKm*&<^[HF=fD;$*l/Q0
%0d2X'EehUDSaXRN&PSl!(+QqX>9c];/<u60+Z$Wg#d*1>Y]k+=JPO`1Y$(*]k7OHJ%hMuT^Rd*SF!B4u[<?QmCc2rgUr.(>`+9_'
%SKO0>h^sC5%.[-V@oP]3r5S7ZH$s8V?d:OYP0A7V:BMoC!Af,47DN$'O!R<[g(pj*<&sU8CggOI_h9,"1$(?:8Yn%lSE*,%*spg,
%Y^r5n&O-@d]6H()E*E<X5/`o#1rS)rC.g\1O=lGWFUR"c/Agrpk%I8@hQ-s)nj,`R,%*sVPleE&D?.k>(gd9l=2<ri4uo$<5i:Rk
%Q9o#JV]9X]#puGjJV!kg>2Im$*$DhZE5Wm/RcO"D?qT[I`&$""#*&M>QNnbVG"JDRSS!t0_u\!YM=8#Gpla'?a9XfYnNG!N%J.<C
%Qs6K=8;nN6)0mZ35ZgJY\iJ/T19OnZMD.NteiMqu*B38]!bAh$:3FM=XSbnRTR:U2?+h&K7G&<!L#BR*73\IM`cis>^h-"3=!?=8
%.=tc^iZI7sb3M*S=qfr3BrR$JV*AAu&!!qd7,kj2P`=2Q_G%(4f8sFu(YR6L5:?@Ie?1=?=C1>`dm`l)3[hO-fplp>?>aM@*DZ)2
%Yo0)X:2H_F/`(G"iTV]i&u6CWr<cH\D1Y^&70jT\LU8T&'QHZp,"J^_1n-%r)_MnX.$?q!,;p0mTi[9sUNfm:3f_mraAZb&oZu<%
%!bYROIM8#,"4DoKVpSg#Oh[#s13u@*Kf_&mj*V2NjpLQP3a*4[o2SaR=CN\F=A+oT!U_s&>Zg\cFlu-WOk"I!?^/k"T%[C\g;3>3
%JqP?:#P(b<GiB*$i:TWD\S)N:6#-VPE3EM18MT>JGN;J;'e5c^H,Sbn[=+.H"RSURA>tp(RJq*F/"?_)oe1nK,[SCsi(s7'01Fu`
%NZimtO#s)?-j=-m91q5F#e^.(!5]:.DZ;[e,'tC07$bLr`j*R6ok+d_%^Mu*nYe0C9@.@F6X.8="#fm_(i?(F!4TMb!f5V-b;jC@
%/`'M[:@J/Z_!Ld&c-Q=chF=_.TWM9se/=Z>e([)eF'ub[VUiFn02APG/*:(3<(g\E2:\L!dm9##8XEmPZ@gip((!#!&DY]@'c_KH
%I@MPje(A#\jYH;eiuYBJ+jXi<n*<IoiR?lm.L46fFldt+J*2EZii4M,JDUtmW81UO\=SqQYEc-`.AV#qXTkXMji#@_,@r<OHM9rQ
%!&YaT!m(mfW?P>&aGk0YWSd33&KgNN=pVG0G<JQMcCI\0@<!%QcqRJ=;IPs$c-984&j$Wj,N?!G$bk5(Od@MYb*I,TJXUtd*5/p;
%A]:TJ&,%VR<fS&qMc__p4Rl_7Tut"Xdi\NSdqIW9nanQf)PY#&nh*e1LK<CfRm[8ed_%u:&[7U,.C'WK8T6BYSQ$A5!KNr)'62A9
%K>4CEhmXF+IkaHD=ETb5&,S>RC8:d@WKibVUlNbC!Fe7Nl.X:o4"E-B4BP-Si*;0T]pQ,>n^=lSX/P=<<E/>XSO@Sd7Ofop'RG^'
%6N2A0(EFZN0o-K913>1PU*.CJ,ls75gdZ_AJlp?]LgOCJ4$9iNH&Eg?H70s*b'H7kUqPN$m>Lr<BE0&8-'uQn28hV?@Xg"^il7rb
%]O,Xr+dnU1Y^D/r,'8)^0i!B]"jDF0Ol:Xc?3.7A-SbEqjY0;P,aJX5V9N8M)>/`KY8K)=/=Ta<0[r_5+W&rJ#:lh,=LEC3!4uGI
%ear_N6kpuY>#X5$I.N\20'nQYjJa$efr90od_24QP#P^W-o3WlG[m661g]:ZLO3\;=FJ?gNG\K>.I(_FB!jKSXq+LS`cH3`F9Qag
%.dpbN'OcMN\@.<F-SMPGn03ApV<UK1J@]pWZLOaUnY>%SWk,i;>VB`0N$d?YFf+W(3TOSX^sZ^!W_NjclF8l,84fV%2dl.1`W!a/
%PA*N).I4iC^l6?1"I1n][[aXTGnW>3g8-@`\+PW!&=KSUkZL<A:qMkf7_DJT'\'fH@Natb$j\#Uij(1b/_a?AOa+;kR<?<-<]!,3
%#030j0"4+ejOp&B3I.hE:e#20C.;d#_^5fo.lF[O"RnkR:+.T'q0`CF1m+:;<16!?$?2dpFisL%:jh.-(:"">)*5PF(7h@-UF)k)
%/;Y5Gg"#uD_udR-,G/0rK<t??'/OTE-k?&&DotX4DM`)QHR>:dh9BA4>>tQ<WqpO<L[-*jq\#YFZN%5V%075=-K1%GQ`1Ao_-]m$
%),]&bTp*lGpE-:_NZ5@lUXV-bVc3>cG-6=`dLhQE,:>![4>Kk;Rd[h[<K<$f2&TN0>+.!+eoc+5e(&1'[A?]%i5h0(>`qX?PU,bB
%^>\Ek$S5UGjHIYV+GnIL-%*2AEGLLmgd@BtB_o9+V$bcWTbZapaQS0[@I!1XUK;UI_g-#B7Z]6BmjLeY[)6"`Y%X@@POZ<[7I8X?
%gB-jT%0RX3Z8ROo<5k*9Nqn*jSp0Ls1UeuZ+He4lTpl=^`t?0&cV>C#TJUZ8^8uba[70p!N66O47AaIgGddfI]@7ZV[&N0:h!d2h
%.oFG<c$5Fi)4SuNSI/`Q]2)2dMf&2aZ"[eQM"KXT7W&b%Ee;dieg_bF-`Q/>K>L\qfqP*[;\mce4W-1kClS<`Mfn!;'iioBA6@G1
%d_VBr:Snk7T(1/a<]Vq-,12A70]6=IS!+a^g5L.ETEgB2g`GejNo$S5BY$sp"M5GLPle4Lg(c\.A&]*T=#J`3Dm(cjVnUP<^<,:S
%+Jq`+K-4K2&d):MrXkGpfqb]Cn/eBN1eGNYHeqmIOo-6!1]FDtU`&th0OSOdc)0X4(uK:)+_9B)8rRT`8ALH=Kq$d6<be>B:7CSO
%8Y(^gRrj=r!N*:GUW?@=TZJ9DNY0Tpq;4*,hibI:>\$f`FY6C*$f[is^s!>5^fhQ%bY;=I*9D6G2Prnpr!H?O>Z_D@2/:=I$%C)f
%`9cl4T"D]JgA7W5`-M-kEcs?uC>3";o!a><2qoTlSXan@[ba$tp*T9^VZKI\K_-'enPL-T#<g5_2"n1'LkKh?rHQ;Cbj,e:U/:N@
%r+?#[9&u^qh?OZj`:aaTfL-Gs7^dp4:LuMBl[ce_?7^)VPB'V1[2DZTi<8onr2Fk1RR]UqIJ#-2OIu#^TLtBl+lKPTi.fi?;a1?D
%(%/u9WZQeBh:5nbJ.0?MpJZ*Q0Fd0ar*P-+_kI2Wj/Kc:ETYZ<n/.s'Oa#(u-MOS+im?;f8X<-e[o3em6eC*27AM8.%alqdZ6c&u
%c;3q%,UUgj%A#Tk1J0qe5i7Vjj1XRj,4r[A-kbZE$$dogDU5$]a1md.QV(*H-IO?UdmGrG)p?1B'Zl!ZLG2dSBr/h4FBj`%C'Zj>
%(AGhBps3A\=an'9D2W)_Z!u:-,eau#<UoP2,pnhC_:?W@:fq.`p\T=bS[Wd#,3X@$SRR4qhEPR7fRcmS8=+cP9'#N2%!M9Zqh&1@
%k*diR0r6DZ$qBmQ#aUs;6<"1!)&u?U1iQO<7p=u,)lFd(f-Lj^D>Hei([SDY;I?OC;m<@!X"jos7/X!=_Eu;#+8)R@GYeoldOq\1
%4BGL?P)9]H'lV]S`ed`N5Bge["S^-HLAk=fH.Z@G8q4+sRU%(oPcdr>F\o"E[km,R=sdqB7T/q60@&/+]p4dY<jkt-HHN=u9CLV1
%YGUOgY%iopg#af:aKR,"a/apWK6ILXWdY"VG3D<3W!h^<N6gh.W0`TQ,P)mI)5*]D`F=c?dF0n)F^\P]9L^+tLXE8LLlnd\bbW?_
%]Eq(lia%kQ@FV0:U)"B+oh3_Z829h=#ZB3eo-fhR%"j2J@4"_3P'7.ML*BtHCDH"SAlK*dY4I]>V^gsG&kOB"2^+,YC*kVU0nM8M
%j_Kb:(5`FH&BVa'OQPpQo%kNl8@mE/!IE]IA;8>G9),S_k`s(,XfbhiaO32pQ7u3nbq$9lZIf[.YboTeeaQ^5V`:L%P!(XhE=HhG
%q03ebDe=8A5M,"!X5jY&;8@$HNmD$8q8X8)km_#WGiZU0DP='CQAoo5J8*!NXFTU)b4Pu?+t\h`#9@*dm5)W]bdAO]?\EPOc?iJ)
%n-aJjl%2i8Q,sO`*XT-=crj2%R[6j=R_\b4lWU&GQJp)^>Bt&W,mW?f)*f]_i-;kf-'h@]Rc=.a!g$<Up#k;Dm$JkXSC3bgN5f+(
%#fb.ObDW`=s.rDl-*%qN[7Em%=Gt)(4AWL^N1/F'PS3n8ib82$3>jVQJNgL8[7f8BNNm.Kb>)Cj-=TD)WS.b1e-O*S\ZqULb?52]
%XYYLaAiPJD4K44rVYYS;OQ_mM_Lp#=@cMMm1oRS:,:aOQV"8Km6.Ip>cZtK-l]Aj`rn4A.)]uiG!s.*`Rb`4IiO#nOZOug$@N1=/
%9b=Sdoi=tuN(J>$DM]5De/*s_hQWYJiX!'Ed%JXs10E=61rp5?OUHt!4d*[\pMn2dJ_&l^W!sEoG:5iQ^+SOm(bCn0&TC50STeIT
%MC<,3,=D-c#n9U5"iN3&l_$V4(S^5.]nO!,J(@:'LVjND=rcoe6d<3FT",G][6%"1MQcj<D\&M^T81=RHll0^D8%uQ0rWXcKrNl9
%Wu5"rLJuBTFM-.>-F'fq-NKoj-Q^?B?L@QmJO[ffYckAUQo]TbrQPl&a<psLh$7>tdGf04=-)p!9ujEdaHndRW7\XH/FDa#fXA\a
%'0!8i?SDK%T%m5EY?P%98Nm@>dLlfeVOaqSONNQ-%U^R[lE[Xh^or85AVBe_OPn?6"-U#V1I:Io$7MlR&E+s@%kn=ECQ?uhN@r88
%3f$nuFV(Bt<\jG]mrR;>-(Jt5*\0ZfGh9\(+Q<M;c2t.*m99\5nfEZi'-9WEs5L26c""a/+FV6)g:,M%XLJDBb(<]#h<B".qLZCj
%",8q8N<"p:fn4Vrf"1+#X`"<mkd.*Rm9C/H;7BEA]*ds9BW[j#H!j@K3F*S4BN+"'CrVWOCZJfkIqi7UEX=bFgmm+9kZ"cs))6G/
%=SnQ$4g5m#&qqK)\5MInX][91SpU'O//RU^RB"\_`D\:r.-Fd=$:sRPmSPY@$<IT3^/'GZnNAZ:p-Rt6q"0,(D)DZB8>I17A\?f?
%fh2t<6ASa@DVab`PVFON]U+D2(`_*(:+a6F"r>H?SNCcHRdZ>;#9EUOMm6p!`38/VCQ!nbJ3+IH!lB_5aD(gSlr"uWn7nt*<pX-s
%+Ci,,+^5^[\4Zb!%%>_a`G)iU:*ri"*8`jYgMj'V,\Ec7fSa#4#4O';?bT[o]YRB((!cf!LqjQMLdEVt]_mXR+=+Rn0UJ\"A<'"0
%/VO\$"&?#WFP4gt9[Tr[J.]uT,8qD$<,qW<q6N8.@?>pjMK;5(UMr%a+3Z`m!C3Fr:I`N:#H7?cEN>9BcNZtCi_),;7WJU-b!em&
%VSh0n9D.R<,jXqiHb[)3k4Ud]e4=t3984lMB(?;*-Z`-CFMAH<TZsOpn0o/J'+R]3J,quj7uXWiL3>7#hL_jfc9"Sif\RuLeSNcT
%L,Q6I!EE\jrT[8MfUs]-^VEN@P%EM4U5Z(b$c+;PfQPMCNt?.1XP30sluf;7gc"J$glY/PU:,I8+HDK8%`,@%bc/PQdRrJCa,hn+
%Z8$B!DHJba"F,4\IX])Z\Y.Cc.3.Yj($VB%>c\?$B'XL/NaNTBVS3+NS?;;aDIt*RiFRQ^30oCCQslhu4-8P_!=DY(cKbOE[GS-h
%b5\[l]"$M/Fa#gGGGhboYMiWuC']uEd;4V>ESB\TVSjW0<tF$8+/"oQE(bn^;R0Rqp@gT[7R.Bbkq%-kjT&p!@pbbcB>gGpk7/%o
%o*1:eL]L`:3iW<r9dYF"<+_F(#/IXVLqQ9##.p4M38_8!qB#AcE\.8k``cGdLV6",M*2(j!i0U:PJ9r^=P%Rb27t-K8)*f(];@;9
%Ui``mms*GfPf&rH+^WEMqgcr$7/"<)L<0nso(@Qp57&Xh4<m_YY$-)H[amkb>][+`6b`D;qYjFR7)mFr[a)`-5eeXqG)uKNJ(YeS
%3"_^!5eo-tZJHR]1CVK-]m2Di>Z.&S@n;JuEPoUnEF%RmX;UTV3^0f&0NZ^N[c2L$_b>1Q4C*jVSJ&kXUF@Ub,a6QqE(Y900elUL
%J0u_bd1$iVr.UE*;@N="B@g:iXb,Gm0k3$%QAm<+,hgC6FfWQar7!nrJ^XZAWuP<HT'Bhd=cA[^Z4.s]:,A2[_oQTOf4GZ!D1,Ab
%dcVbP#b7u`7__]XHGdkeniO)K#$#uZg;Q.Xbln,#RfRV;%.(k@0!!J0<gtQYYVe4s@-[r!g6\@XJnC4JH#)A_fZ[?DKS^0RBj7&e
%ph">JC![pXXM)`+LqmZ@c6a8dj<q\UH=jf1*msCj(%AQ$[$%i0,&"E&DY?)Deu6aP=bVj3CD>r<V.kL>QS$g/1!?:u\;"9n.p#[P
%8i+B4IVYIl<<,cqF!eKMmD*Gd3V/=<!1m65mL)_e)l2WUgGIs3odu/LdoKasJMq#4oH3<W1(Zd>9]5!@I"8Vi.D1")eV@=&0MT'!
%,!4)c2>c#/8i"j9?8J,^N&OIB*Q!pK9-#Ej`0h)s;PqN@j+4M(9amlIm1k9,*'updnq[=M2%-!IVjmg][S1ajH,4O=g.\%AcI!In
%o[+h1i,-HoiC&ffddDoqV&m3g3Cm62_m:/QC$:mKi\Am>ftJFM5se9G>Ab;tEE2u(50K5K8q#LQ2a+cQ!*N7nC,&ulkfXs[&V<YU
%+Vq1`+ZX2UL"unjQ%?=cH.5WJ%P8eT-`neF#HHhRX\C"W-q%a)DsN,&M29Gqj#W;Wb*1W1b(GQ1g!`O1bMG(Ph6`Sf7FN0GUMZ;q
%?-T):2QKH)Z!QrISNunIrW`@sJnsrM25m]BP"?Hf>PU7EX9+tl2.Qh?$n!d/)qL&+[HPX)_EPK,9,6Cc'b6AiahF-id+4)11UGRN
%Btfu7I\M*Kb'+0?@MfisqZFH>LBaNb8F#c<p5:dN6"5'QS=ohnlf#PuR$$='l47(5++BR%mhGFeYV,@2khlaKbhR+B;AWTX8.9`8
%%p$^/V5hC(/3(75S]R+k$[kh%XPbN,5.msn/Z\X7Ur(g1U6r`DF$Z2(kL?X>'c5]ti.f.<n_%)b[bd;LV^'5gJPVOVFfh&%j`TYa
%`4ISG];Z4T0g!:>$5g&m#O%AMf@s.i=QsX#e!jZT$q=g`X"!%U[G2aL&YZ-Q!sY2GOo/%X,aSfm-L+GloNC8V_fTT2$%;_+$OijQ
%OiFUo09YHW(BYt`&k"?`jn7?&;pB;bF_a2UdU+71&\_B(CQiX)IkK;50e*PY[297?,isrt..$+`N3??:k`f)S],4*rhX]4g!q)c&
%\C2/AV:nt(JP&oW;,Y=beONAO>=%r+JZO3P16J+Q%ghNm([Jp_.k8+h<FS6//s=6=JEF!t4On@M>ahVb<7;bp>G`&eBfhp\.+Ra@
%e5Pn'3(pg=PS*"@fq)!s,V-CMqlG\,78`P;:$)4o$7ia]l&:saj[or<b<qG,2Wi9H'U!1$MUs>(Z)J.o0\jtX#?!fL.%+YI;a]B1
%>8;W`'uVc2#&@Zr*ghG'Pl5cSp/0gb^[c.?>OrI0YLI;u.\]1Q+a'e[m,W;)9i]Yt64+Y%BS;jMa[JnqSc>(4^u,mXF3kAIQMG[M
%/`016+)2]kP2SlaTD,1bq'N,Ad87P_K-@#$k3cbrf=]Y%=8H+$9$Bq;]?M#n,:OS7.>f.YKNh^6Bu%$bHlQ9eE@C"K=[I[m;3g"%
%'W6L/7(uj(8o0D-JlHYDY]-n+<=9c3ZItuIcaBJJ4,I]ETi:XX?tMe,8CVtHaT^q9N=.&l@]L@3,?@6:l9WEgIe?WG_ib<oF[*P3
%m#$c:8Md\$'*#+<_JLcDbcGY"LVhIA$+aa_WPuK;C5PkE+4L9D"trtW;A+iT-L%r$_9g]7UhO'g1Mnb?E7`KYWEisCd3C8';ZkCA
%=$'PobF*@$i(\Z"17N6YU?nJ;k:$j;fJd>ZEbF`Cl!bTfF7&G16!Jj=/:a7h9XQl*=N)!(:i<8*ZJb!pFX`37<cPRC_K9s_1SoDs
%:E^MVY2<nlkU4[1<Un"%/WlCJq8@'Nq!^f%+]Q<8=DaSZb'm'S.ZG([2T^K]b=n"Xr=R-ST[H[$l:\(/c;sgHr7Vd-PG20U%2^hi
%XR_BNVFapK^\IbHi#ue]*qYG0MLfG5Pedh&aAJ$CoX?:?g\>sBK/'bWT"l@mFM02`3Wk"Y&@*&<DTduS]9,^me?F-GWl29uP\i;#
%90q-'>.4K<p7*ra/BN"mG*pm43dQkY'-84V3e03/4t246[3)aJLIfj$T%(^p6g"#43kT@5%b=+S,;*:dMJbqK'HSj?4;jGCRcO<U
%M%Y_Ja<Hn=T-dF<?OT8RB^h-8Q%Bk\ibp2dhS%c@/?2ZR[A)trZGZ!^%YOoK*ApPZI"*RhD2'Mt"6mHkUe$SQ<+]"ljCH9,:u5K!
%]l%SS^C$pDlCl:S"R+>-@#Es=Y#ImNagIAp<:7T4O`1F,;"/N6dcE/^Oj7%P4:erf#tINXOa!?W+(FOMgW7cf+C3V[N!%6Q"s*6T
%h%Jg\f(g,&MN%?E_$UW.bF57*bP:tVZA#14"YqiuXpiL^]VJV3`Bh5]'Ii)S7$Cj*.=g+=k@uFo+48/!;'#]cX.C!MC^th:o9<SQ
%p5)R_:dfN@jLmAj.AT=.j3!bWX>OB-+EVRVXcHpL]EgWY.8$c\;Bh0o[+kKo+S92Uqb:)hq\s7@cBGX4Y'Lk.&[?"Qc(^a_E7[W<
%T'A88\P_JROU3ah9MAn.(3bj0"SE:#efKdCrXkquP?S.WVi`A%7#E9k,V`4:P8(?gAML(2Yg26'LfprS,tKQNbVJNReMf`3GGcTm
%N5k-rE/]n.]s5u(3a%2[7,sF90K$?be%DP\T*b@^+mhpf:COpj&.DiAEf1O=Q77RX%u:No6`MiNKn)!`P3E=47:g<9pieHb-oY"g
%4'851F-co7(2&cLmF?3W-=*h5AmM9Z'r_JdB%C]WSIqU)PoIL'CrnQ:M8>iF/D-Cd%j#ORnDpQ8"GuRsM"a=PKSV$JX>SgsL/CU5
%/7R#,/&BOeU["sk;%kUA<^]s.W2N*oM*sunY*j[F*CM2WYKHtO1>p?:Er?+m_EM<F>YDOPS@ZQ2Wa@k0c-rb1SVoZC*VIo^h8Gr'
%#HBK[</G!N&cc"^$.D@u_:6;YN?^2XK_VJKk9f#Rn_ooGS_b&lcNErX3c't8\,&4dh[i-*AQ'q>I73dF:nhF1R@/ADW)5Y<J'luH
%/3X=*,nR$iQZ]T_:qDmURhZcWDEIBI_[ZbAam+5QK"!(6h'E]EkpBct8md`L3N3A.]LcBfC"EpISZaH%APhC7=WU0CLuZap'7`cS
%B?!id/;/(C`EMO>l@jEARb)6YB*"ACl\Z\1&o6Uid`]@._7g?=bgPXRd^:_XY(Lre;NVEMY'\tCf1DZh434Cp!,1pi))qZrF8(((
%X?7_0ClX84).G-'7=3u0+2VTm.MGda^D&P\#oU"-CMDj$;(*FE]E.&t["`9D?A9>c(Q4_I>\X?@A%rg4IT1qCs#;0Qd$n[Zf`NT/
%6b"JA76N88+G-bNO!P_[H:$[i"l=fLZUo"LK[&Kh?CaUAAm+<Q6gY5S"uT`])OVgFP*`FsSS?1!Q=`"-ZcmNsnRR.t3LmZWL3Z3t
%"S9FW]UQ4\ilhi,^.+LbUE2Q2j[H)mgQJts_QT:p\lkI\/Dt-'-G:@QCO>lfG,c?_59H?ANEJU2h-,W^oIC>r9+2.)6<8A2&P1V_
%+GPNE*2IriL#h'k7=@?\'dO26&jL^CVs.7GPNTZZS]YD!>+;]C=Wq#pBiUnc9!C_AQX7>q&pn@FC83'5Gs.c<1"QGu]<VhM=`GBd
%c-B[6FBnJc*mgPe-oOTgC^o]>!ErL;"1gQoc^#-6qqaO#?(u%i`A^[oDej+$#neDNF?1XKlRMn.gSEsQp'!fs3[lj5jn@6CY?l.!
%RCIk5;Cu8o$QqlI5T?0Y'qJcfE1GEh5[CrXBcbG/NnPXk1r>sVT31If,XKE8AlU<T]&c@oCe8heZD('kSiST'3">tNQVQ:7m[nAf
%FQNi?]UjS3QJpf;=9hR_3TEXh-@emXfX?$TnCEXckpkH;>P^[5N&b%tNfuqsGI@>%7:ehB'hSH/lM2,p=A,HBH*LD^;6)CS&b'KI
%KZ6AZlE-me@-Gt@3Zfmm1ZdX+CFf51$\>(rf;`'WoMd=H@'9C1>ESYEpKNQ_pdbmf4q$q8>-HLnN*&?::V7WAWgq%R<TaO]-5(<J
%.uP`j0n^S^/:E214KD-'lbsBp:mDrV@l_L?C5U,TW]Y#@C*WHp73/KikX4@1`aMTu3l<ZM\=;p-YHlm@EJQU->/KNsZWaEtaJInK
%<H\^?C&e;b3>U&W*QX4BOGaHF;C>-W8lRpQni;:6EGiT>&A^:rU@e.O%gU4ZRVpQ+1YbJnPT^O#,_5.chSp2%+Q_OnY4>VYQiYYB
%\4EI`D*qSF1H2_M]kR_L-c'5bj&VGILiZ]&KBp%$]4X[ajPqNj%'H?T1]tgD(Q$nI.Zq4u_=&O4];SY*6C_;Hc;CJVANAnA3M5<J
%<\6*r&'ZF`7';OK;<P"P%29S.28N51f@]Xi=jtVG4h_FrPXURpn@XJE5`&!e9r@."$YkZF?#=H!F-3EV2Kgu5d_&SIkKSUa1O+P!
%3'r$A<>@slmL!TuZ9#gqSV\'re1b2[?eOJrJ,%%]:&.eu^"6"R7CcIn+$+Oi\Q8=0O8O74<k#eAcM<T<eYqTg=uF_Sf;bFb;*jue
%<gNuX:o(Vh\<_Rr>cT-`LkXT9EijpmT<;1U6E(IH.]Dt'>$\1d/]kC-;LeA@Jlm-SPC@=1*NKS+hFEUV[9,'E3*+XqmLkQ1"o$#,
%N`Di<*NMYU3`\guENJ"<P[ei1.66?h?0g!^5JGYO(%g<0a0iL&1/Uo7CNYi\n`S'(\keEfd`Ao/8Lt,c^=>prLH3Gb\dtUZR`W%M
%8a=MKheKm<:9EuH+sE)Z786jGOIO084V8"28L%si73ps.*h=dq+sFEBa"!8b$+WVu"F,cVgq%u9r#m:.2i2QBOc\=>^5h`W8B=Mj
%+&7r[Yd(#Z;>P--\V1?g&+8OrM*<q^OIJ)&i\2!#?h6>H%7NU$WeRTGaA$.8^kdY#dX7%-gsdt6+X8-h.AA59du;d`,9cX^AMu;?
%I0irNha3HeS((2I'h(G-<Quj'.I*1s5fcY<VeM:q+ZD9Y1GKG]P9`d8#\g)W30cFg8Co.,P_"ocRZB_T9hM>B.g$qRZ+R(3Uc0Gg
%5i#uKf.,3nNJ$$9LackN^c!RhENAkG8X<`R&dPtH$4'ZPj<ca%\)JMhWLrBX`BiXNAU>j9Eg&9/"N<ZE;ErHS`BbDbWP49Ll:B"I
%IDeEhd]G%)iZL1&7Dhe`TdcGL.LpK_dV4H;3(TgI7i^S:WQ1pr+RQ.O6auhnPb`TC5oRkMZC"%j:6/S462Ft1@?C1c0?gINa:-(s
%?GdmAQsbDs6"[@5oE^(+;SIoP?D?$?hSd&%&I)rV\<W`:)AL`l<Yn4EaWh3LS"9$e#+6WLdN]1K8G*Q!l(f_Qc7hee.LbkT;LX9b
%g3;.a(hC(j&GISHD0To4"$k&OSslikO@Jp+RT::@^E8#gHNiQrNhAX.5G]hBarr-T4Re(SkrRH^KL'LUg-@(qEg'TV/]&Y/dbi&+
%aDTTY;GFD!4\BMVm2I4$d]LqP'tHfD/&EG'5oR\8'aD4pAUD%sM"Gkk=/4qI6'0+\b9NV*GZg9]%dN/U_b80u#ab6^,PnI.[e,N2
%gf-.p+6ioW'c+HA3647J*6#<##AJeFM]jhcdQWd8AI2(VBWlE;>Ape7DQb:l-JL1^OJ_*PL-\-BS;MTVB$'8A'*\ahpNd:$gk1i\
%;.5Q5HL-+ROh1Pk&NqJfHli_H#P[<^1q1BN*h^'+MXhNCb@0!%'/VYJ#M]VBGL?RM#O)CH2g&]G,3DA>&&d7&Sbtas9db8+bVp&:
%Wkt^S]U*@u#%kS@o,(]KbVurQD*Z>#1pNo=O&TZ;KB*b'pNn2WX+^a[+.2l\QZT7Ph5D,)OV[7l4Y!$f=)ML`Ao<BINgFr'V6DXp
%4#Q%51H-d^15M@qnTnU*7]Q+b1UiDR28W*g6WjrDgb)_PF2H.<-KBZFgO(H)M4*+%>p4nSm1HRK\]<FR@@n(SHnYFaG60SXe>gZB
%`6<(JdfVD8K0-u982$@dRJ--%R0Hq<?Ed/8WC?B03CeF@_)@,k_XN.;s*jKiD5)>oapYZ8T/8lA0D%ags'E-Z5eUi8#J7$!@/`ku
%3D[KhRoCU;,@Gu,dAu2JSi=I6&")75^&/6/DsBc>/o^dnNJNf:PkG^7^Y"e?i;@@F"TI?Wb<30kS3Mjk3Z],4#r/h+T!5!o(p>p6
%X]0W)r'm[sSDQlt($@L`eSh=(I`"gu"6[/*5Pbc5DqEroi;@b`q?,n>kuV22IPY06<*roug!@P2c.X2A3<(&8HAa7Am4m[Pq+V<s
%Y;!^gF27_D@!]Wd7_2o7IP]aU"6MO?H,0?IFA""pSn$9+W@o64^tpBWI&e5=R"'&%e:CScjXW'S<%,M4&*rp=^QARR;P1u[AIUZA
%)GfUbU-e[8RKOk[!'Q'-eB-(&it^Z7lLdF<9cYYi8:K@kO&1:pnWdHXI[f>ET_p^fnj*$<R'.IG`1qXD';saJC,4V<`3!n^EXA*T
%eGP!q5q5Zt+/JTBbeI1dk(<DKe#+nk)(ZrtA&8)_Lj[/Eo,G_j85V(Un[2G_hdK/@7kNs<r&gc'?T%[P"Np0Aomu\'cF=oD^G2HJ
%4JRHZ2Up'=:k%0mr]p9"3f>\;UAT0eqZGrhdlSU!^WsV.jYo.X5>ZeRXU!!eQR9JAr!q+;:jtKTl%/DDdQ3CBU&9(@]9\kJ-g*`k
%ag9BZjG*6S8/\<+/!Z$oo-fj\(gVJWq2O)M.)1na"6FaT/';e[.9AhGdX%SaVG&$0Vp=A#Sk0?2.uRkBK^p'2^OZ7%TB?=;G>@Mj
%rc7CY+"6R4'UJ9X8E/8E'hG@':m)oG,]6l$k)l%rc5s6a0V^n`,EKcBE_-h=OdKVFLJhh3>>-Y`[or3>CBp92+h4QA32Mb)>*p@F
%,d*0AVNI7]%*p,KeKVB7L'A[m\`lj52XcbripT$n8;u&)P=YV@O!G>_9h?q.AWK3+0@@]1//$&s,-ctV#uI#tlZU_!c*!Fp,SIRM
%q?nb.\fES`A?UAh*0ZOVp6I">[RqasUiB&'94;!UH$b]4_[6Sd.18-Q-^S(0,^,ob7hWoQj<!Dp8?Q1UqQMrqDk9NGY2MU.8F1^O
%-$[L]]k.3lMo;R[O[W``\asEEOVk(2As&JChB,lGS"sNDas,LgIu5kAO[`g0njk!F6f=(rU?ha923#P9`;,Qc@dmZKUldY-pIHM`
%I'?#6UB;bsYubWb#'tP4<i(r26P746Ka#:9UBVYiHVu8[as,N7>@=)/8;p^o=X6JZO":ng[FZsm9iZZ^AW`VuPEJfFWCluPUsCS)
%6dHuA@.6I9i[B`'0YR"F7:H7'e0H/!?\N:ElIht\X%C)`'(ZL<7iI50%p5\O[(!FQ7oUC`3A"5"N8+QIOAVB7@W.hZ4\R*j:D=jK
%*jru\c8RtJqd=\CCI!45UnB9QS)/6qBI1tBI0LpWjM6M48)eup7imLIV#"jJM4)KQO[il0-Dk>[3588ukH$D?GW:0pR3^onU;%ph
%I5CEdDNd,fjH)CS`fcuo-Aar%eb4`pH[h-9A2X5"PY'l18>]"aDpldm8Rc<^H<(Z#^K9[F_R_CS0s0J:>3]rR_ucb-RRglt,=QQ!
%;Q:b:a<NEH;89Xma=S*.(O78q)NR"D9c=Uj(3q0K8]r?>`;E<\,EKc\pS0:F'+8f)V3*`EH)-Q>pBcladn%^W<$,g"7UjouEI2ia
%MHA=Yf\%L/`(99X7cNl+d0Dr?juS<qR@Mu/_>3R#Pj;^e8g?'gP39A(NPq>FlD/]l"<UsV8G3Bn'(7W7`6M2$3POJUbsrP+n\S4k
%U$<18)CU_;@^F7=1_TORKd/uL"Sc!P4/=]r$jCi;dR]==Q>h_J.\$;,KMSVH&pYc%KpOV/'7X<u6?sj=QD6)\K`cDP11)Y>\(o9S
%dC#;%1/f6Nq*QCs-0^4uG*e1F&gIi+[N)JWYA#7O9oh+D,F(b?M37@E*f5;U4n;/1C8FEAM="f;hbkMP>ul-,'Om2"Q[u,'T$!$5
%K\%bdhB_3FR"T=;4;+!bYB_B_]qTX=aPFXSB@S0MYB_D]?@1aqp]6`%Q9O*)^YSH^\`Xg\,F-1l$6H/l/n(J^@DBpr-H7LVQDfBb
%Q,IdaqO1#c)I7igP*iE;GdgRBN"dX;W?eX(qjPN$)Bk87,r&AH]r$s[.dhR,8gQ3B\gY\c_)+?'F7Fa&D'-[dYutRRW4132k)Tj5
%#0Ce$='463;q*2GURfA31'cTrm/@%!4c6'^Oije5!1UM.!dCR]2u!iI(2<'?4[qIIH(n9jk_j_4/K,=G8LKGmGLD:L*V`Rd2Pb,+
%[B&U0_F_C2U-a`'b2H.AC2qX$p8:A]NinE/d>&@1BN)(P\C#$CTF/+4++dHkP_Vt]H94c"e?'Tf-N1>sYc;iNP(CWt*sO3aOE>6]
%i:QBb#P2;opVbp-VmrR#$`SN2h<_4#]gt"Oo<</9I%*`[?TJ>ZPbiR_-?#^$]?3`B8"2PPeI&&T-$h=c7@Y(Yqa#Aubs!U/g>7"-
%EXq\3LlJh^264&::J+QR.hk%H,+\_C=Ues]j)),fAJ<14)dhmiC=A`/2mCb4;[*>M].Im>:oM[mgLFD89%jbYTmiMpNf)HTR*fQB
%O&NP&]WLD3aPQ$%N2VIB4#G*:nc9\DU9Y.ooMHO,qZm$B83Q7r'od-*8r]u9q_>:<>/Wc9b:DNIkeoFA"7@TZ**sMUB-q5AZ6HVG
%`?3).:b^VaX<\LVCX]`A\7'u*s+r.%75_FKhs*.Zg-.3o'5h==TpJ]U:trs[SB#Q@e/j\q_nE$k_8Pl,?d2Lk-D4dERSunc`2d40
%C;QJVg<s*sF'Di4\4%CuT35K%KUWAtc-m.0R'48/$F)&(bo]>QZf8aqF7n[XO2-0?Ro[^VP',!L''pr+!8J^raer+`#"Z)(?<(p=
%Wler&qud7Qp*)H%$E$CI0LrU4\#1d>_>nI'_)(WMHInS5Cl3qSIreN!q+"FBEOJE\;!Y+fZ)(adYDlcZT$!Gifi2gmWJU'063+fF
%/s4X-aF(&ffq+"DJp[(EbeO$4gODHeN9IB+HUM9m++!WOOu^9gh:BK;lgeh7`YLKJXoX5JC?cBhXWt(&J<E\U,!6!r\NV_E&.;@9
%bh;0qJ1rHN<N$/AFSsr,!>LN]@<86.g"9;9FUh\h$^>X/;rc.uok,JM1N8Ju@QU4m+ZY/sO^!-hnUhP!*1cofLbJr(Z^]fYg6oE+
%ei@ZNfOiTP"QgtK_hI?F\l)JO#j4=PjH&)`lBc'F"/\Up5p,/(#S7J_=]tTBZKo+;dJ%@JA9"H/cE"S*/^bj<`MOCg#;0s\W[_]L
%8LYcNE:I+8Kp@<u.b/WE5F?YTDiiq\Hk`q\op)D*0(0e(+=C8@%1qdq'=e0A?;a3H5\3U]8UYM0[2Z_W7<bn`PfcX]A9.o"EQ,PK
%GILWG,_`_H9"qoM<;@?]<%"9<l;sgYlDHg6VOD'@Q<qZ0]U625S['&oB%2W9)b3a'ZZRug&A.73>AHnmRe%;k\/Cm1[=to(74P[V
%RLr#gP*8Sqn@m$5V9<njM5cL@QqTlCWnGrj$,s-Mk@7E:5T+GYATBeY1oa_+eLXt0S/]e)?_N`"Z$<6pj73=EDQQm-<Mh78lJ+#@
%ri+\`QEVq?6f5S%=B=ejY>c!A60.O.n,pqX1q_Fsia>qX+\t_ceN=B`<i#=\:r6JI<)mp(U_M[mb\o?2oi$Q&HT0/RV.&Ai;$a(c
%poH91`2`r;0Uno]0_fNaF3,$Om<Y+-5j`16X5E+*?.EUE1V[#CQ*OFo:7CA&!\$^8qF[HjJhPtmpdFpgVlaqlc^H:Bf'k($5Xc(]
%*CI*N8neMZ$jL7Uoq6J3?n!-rUp;?OK+d9-MWDrYIYSeinXp[j/TL97WUbF<2Z*WJ00?JZe6#I8R?7k`38#3=m!B2mpbVO2dc,Nh
%?Vs;il6gGdGYJq'\"fm`+@qhm9?t#98*,/HQWqa/:^iF)hP/kBTacm3&bU`kM5)DH!C(Q=M7l0T/i_-ZZia:PTG7WOOhX6rh.<O%
%3-7Z;[!.kp`-oAL5E_WrHe_.l!B,4o"5-Xi"0BHLf/>Kh?+C5LR+1S+[Q:\0>++$.3qoC,b2K1#h`8h;/8HqZ$Iuad[;mQ+3)g;o
%<Q5[/,,+u'qR_Li_/SD/\UKg(k%mbWS<UMh,Ap1XJX8MAFF3lXF6qi^r+nqH%Ak7ZnJ9!tJf=U'W^oE)6&?G"WJjsYjUJt(lXX9P
%DJ>mr74ZEY:*Kt:3j.4;ZI(M7+ApNY#J@CAC$Bm!Foq34<#JgO"\U_P10t3T*NE!I2)d%]^4qLb'Iqo:`5Q5[6bDK]C9'Pqo+XGA
%=4=#ce[g."A!"RgLliqm:*'nGAKk$1.`XoWB+5c$?A<pSV=maU%ZmF/nISL7BH2mn1BXl2Shk*@j4"(8$<&r@l!XWo:8IId'<<gB
%o&%S=H&g.D:"T_)%^fB00VU&#gJp(rk_tB%Z4qqOj,u5V^BtbAY*E1:(X_[+npJ5U)D#Xj!-#B%aVNfNN=AbHZE@fP+>l$j)t?l-
%G[32olp8%g3"NUD#a%XAp20lBf@9&Si`DXf=)hqVXF+d>34:lYS&O"$T5!V5U"te5?)/'_ZD%hKNS&5=<P.U0-'F(XGl@c@N%3;m
%5')r&ii),0P,'XOOH`dpWib;eMEts/ApdKGYF+`?ZCI!K5s\AbN5N>F,[F-6X*b#m:eEc$XRF_oW\g!L$N4JC)APdcoZ9T'N\'JR
%4FKcg$;B)*6KtE=8VpqRRVL9)"^Qe=LKZE*Nkcr.W-p"Hq%]4<jWDU.1(2ffYAuP.qn8YHiDLhIP9uVH<<FAE`43r%N,8aBA\BHT
%eJ[OjAU9M[&#1Pr+,6$,/lK2;!s6Fpo"fGn\Pe2:];u$&Xh#Z@dH9VnUrH(PlY+41:==$?8lSoq8?*l[.HteaNZ#AUnQg:+^j[W8
%;^.96^1<&eK5cN+p(6&kHV'iu8bE3Vh#12I'mZ7uWL]hK,ZXZ!dl8*+3K_8,5tnb/9b/ud%S^gBDuSYr&kpEKrfj0\a`O^F^RMT'
%eea@Y6t!l*EO'4L*e_RKcUU)V=R6P=M.b%!-g4%qTT`F2o<Cs*4jBa.El6?X`N9<>R]LCWYC)N`K^$)*X\/-"U<od!T>q^(0!K*K
%fQZCH(BCRH<sW'h;n'>]7?rftm9pt<WKBNXQqg(s0F?&"P2s&N,U]Pl8(=m`*o@Z6KqmFS[qA6S50+Sk*+_QhnOF!Y'6bMK6(<7S
%Y,LUXE3Pr+-X-!0j!eNrouUG=a9ajr-+Bo^ID_g'JC?nT'=Fk/>,=#$1/[l,3#,Ms18RpM)K<bOJm6_B<Dd<,0O==PZ)B_=@&?@<
%-F*u>LS#sgRk-%`dNH/8/qW/>[&S!_IP*7<A`8MM.4OEp,H4qG4G'rcf!b?>f;g)q^rD_O[=p,m,3&h'R)3.qCODX0d*?0saWZ)T
%m$k9l:2^r@\8"b8iL\g__hW@AgVRr9F9_YCCT]5:O<6S,Y?#Uo,3S)&`"or=R*q(C$V+8ZKfcoHqnafE9==R+V`Rn.ZqCkKi=<)d
%X.Tc:!Hl4IbnAW^lDk?7@8P73=$3r-XnR[]HnN!XY!2nJVb=,J\8<e]C:l/dNF'V6q5>ND`\It^7HS!Wk!s^0G-C2Oe9n2K1a3Wb
%_GVEYD#9=L/m5q+qX5&D)=$P9B>c;+c[CeNq!cAm?(1"m(=)ZNctu+=D0_MD[Fi1P5tALcHk`BdhcHW-or-rQ)R$1h+e,JH%FU-(
%99mHu[49OWhuI#dC/XjEo6Wp&,tVQ.>F;F,Y4VKd:KL>tD\m3q8)r)$BmHe3%g\k#9iO@&.GtmN\o:P=,,KNc:36;g_sN<=2+C=T
%0ElDU:@`*35?LW;qi`M-"*n'bj.6`E-/"\5[8d30Nm=H9&_[l9qm'6E,5>@\2,MSmi,8qKK;&AXi]7bX#?fFabuh8'+1*UK^9PUt
%`4*$5F('Tm6_OR,NH5b5ZAUo_in#s6%*m>&25Va429T'\M,d!Fhrbm_.0gVJ/?8\Br?fpdE@J7m`e'=@8YSTXVlY=jTLRN^DA*/>
%s4S+Xfl+H`PtBS[7<'eF&hU>V$;D!a<PV(i<ORW9+9]6!]fHn>nsF86Kr1<VbNk19.HHScKEoB=h\%OE.G7G7l;p-2'daA]*<_\.
%:`B*IWh_>bnoiiZ5llTs/Upc2_.jTUW/"DBMHHrn6+.]t,!n@'\6Eh_U;9s7>LtN?"X7ntEUSSAd_fu.P:*k/W@*>d]>!Tu?;a<!
%8841[0]185QZ\?(33s/m+<GZ>9q0"L9!!D"<tGDNNE`F[+O(,&(=AUVq/VW'_7',s\Z+ZadM:&J_Z?M(AOb6ef^(V'@Z2,L<G`?<
%DLV<hVs6XFQ^rp7GZp>]5%X/j.,cUuAtYFp&ql+ulE)gS'4TtgmRSfO70!GKN0\CiM-EAH,dsO_#H5.3S?u/F"A08[e65k.5ul%m
%<[6t,WSjYB=!4.]8h*+gj=cgTT-5=XoB@Dd@&7&k8\UYcK4UUX*L^'+ZLU>_Z>.RbWE)rA)aG2O`Bd<NX&1/e*@#5F7?6'2"o&e^
%jT(QH@8iGA&`H'1JQ5FhpL'W:!GdB=MQ"b,%X]NVm+J,.pi@2Z`ci092l"OadT.RO>hS6s_O:$Ci`Ckj=nO>%ih_R$&m]e(7Z,o*
%26??69dRO!X%jNnHhTI]r\^:>0QSs>8o_EDM`ADlB7+4%8NE6[N0dmo`'a-k*]k-OjT3I8>`ci(]+i@sJb$;:W.8se)epCJF2k*O
%.Q'E7O/?:qq8E?i6t_u)kM%Ma7;_[2[atfjj@-1Ck^lDKYu[IT1h-"CYu]nJhk[R+%r/.NEUOe-(RM>U;haY)0msrtnC>YhYqVqE
%HWENaW;aDbB*k*ZCXgQC3:4?n72q,<)?!9<1^o((@'W;aW)pkVq6mRVW$e2up=uR.<!.%%oT!-qZD#!F^n<i&"s?k\adG_-iU+10
%K_=B^;6AZ'6EF.pYM\BEK%XQ?kU'-JJ*T,WUs(6qXs0+mFbk"Y,&]udQn[@HbnV9-T5U(@2a&-?`iOShRt?d?Oe[Z>UW:*H>M4q6
%Yct!@o<I@.W_*FbSmB.`;>(fkrc9&\O*ht*+%%o<aigJn_/u^Z-\E0oB[qg5j/"H#&[iHN6+I`V\eK-G<E:'D)hdC3&oNeaFm3cJ
%$=Q&&eC1k%`.O!1JFI^2>s*rE7-NR_<@Kj]J0?4.TGZ7jhYQR-`^8]ZZt!]Q7*"G@%u,`&KNj,-'+XQO#Hp*TQY[d^H*7J.6988s
%_2k0=AA1F)3@ShSI&Z]c?;q.@o@@U5EFIu9LnXhS4mJfp?AR\lD^@/EQP^%8<<WLBl,Lma>'M+T>*l5B9InnNpW1#_;1Dsr8e9-#
%^oA#8%o*p!!h:N@s/fFp6nj=c:>pgc*(6k0C1qDXi(E3pjlS.$o%d+G"@Nr$/.l5LD_Wbq\cHjZ8B_[5kb!j5gK@<?^StU9Q$!@F
%CO%HSi&<C0HCPbt<[(qXaI,ROVQ=c&E]j+ARN@&?Jp7TFVpfXiP@fipS03M_do6#DP5r91Ee[;//Cu1Mqn*['4(<a8?qBFBNYe%;
%aD)Y7++l\UXI<bJ?.TRsgEsf.D'&l?>7iHfqN5(NSP1eh!a-Oms"H(F'gdW9'!-=#:QSK:7OD.tqi1VYOh1>,G>=9u=CC/;&T4g>
%WQ$k6hMe(m@pH(Yeg";0)?//"QD"rKF3&LS("$VZ[N`iJH\3*=Q05"T*\'Ut$H[$tE/!=8oPRUJ;Wg'#1tDrV5YS:!B5rj,X,lE2
%aJ.Ij>>g`m']XCdms,2iV5Dr9/coF!l&'k429(KMLfR[F/H^0B7?j_Xb(-&2;7.*4'6YoNAI5'0lo@VuQL@.+kh1+(MG&p(jL]BF
%lbou4iD6$8[RKL3>8RPD[31aUUC66*g)VX$:'&Y&J2bD^UnFm.QF_Ul&CH]a+QAT;;XT5K/l>c<:/->Ffh6`\`78'+%l7r_3:q*F
%K>Np2&T0gOg=mOT',ApC)IU16X:_7WQ:Z'iTt26&fbDBYi]-X1q"0G'TfJK>SCIE<qrhp`1aE"47BQ+/Nt9iWWDt"[4Dk=3&$K\E
%>ZSqt[*/9j8O=7na!-kkbS]M3Er!`ErR2s.2K_O5_K)M4kkuVT;AgXA?MkdG/Z=LP8n_QD;@rflc&-PC:Z^`4WN+q6?%=$5hW6\8
%/`k1F^sSR6Gp?0/4o@B*5_'J7U_+fZ`.KTl#BYd)b3@#7E3(d`bKkmg,l1PllH<G%*0/M5')k[TKC6/_ma*K>[7+5SZEiDh4l4.%
%?>q@a",J'k8r,m(2@XK'48`DH9\+eN!^c(LN-JC.T2MibFmFXH6G5AiL,";$DXsqFP_e&),4+H$@NH@d$gaOM:FQ8dT8!kL#e<Z(
%[NV'YeW(rBc2r[p'R;3BW(P6k->?;6h!k;T(i=ENW1OEAiFTOQ6(6*A2s'rc^n[OUU-S^4W%;V[cA3TSQ-uD@Eud'q['6is7#f;*
%8l\;6Jl1.%*D-\TEA?A_hk_EA9bg],7m6Gh7VV_/+%rZb3Fj,X95"nXSb&Xd>4qWkS)A"/fSub$`%nF73EpE=gD`(mS@7fb)9GfO
%._<Dg]=c#U!oN"&roBBl"B#cjI0E3GL)YJO<^5r.b(24WX*5>CREbUY@lrKdTBlQLW"d#NmWSWO&M5\3.4@V2%S(ugq.@!:<eGA$
%m/*nX)q/e^i5-@,eBVS@=@=HU\Z_JK2BqtNH,t+0*^XAI,+tSK9duo0Guj,`+Sm_=OL('Em!]:GRctkmAek']n7E2FfWe%,IqiYb
%+(8XbF.Y0Difa2?8,PcPQcQ/h(RrQ[UdtS/C<Xg'H(9SMCkHc[P2$EeeDrZ5<00)NEFL*_N'/Y2MM5^^lM:<,_a:k%L`57[p6GVT
%e.f_Z9nB`'8;n`h*:U1U!%6uiGCKrD(]qKmJR.jd6G#O@1n*%DI/4;+&aEmfbFYWj-=7Zg[8c_fEblILHTB'n>;q8fDc<+or]8S2
%+p13L;j4Uro('@UTQh'\E^^?=&A;+b!AF)C]P:NY/5=CHCJI_g-2[B'1p9)D;4,u?:ps1eIRIHMg>%oFFh4`L(Km<:?$%6-8gZuL
%qsb*<1H$N3q<u4$AWJQIB2_KJ[\(]i-DI5"]_Iir`V)b#IFPWIJes4l(4d7iH!sJ[Yn^",_5:a!0ek)[dfKkV;KNdl,^S'7oIM![
%T^1ZP*B*]3-%uNi^V%io6&$1&PUIM0`Nlj7Ynh,A;l\W9kfi.r#YT5,%o)N*_FT5j$'_HI?j3\hJ$0XTFn:>JXYRA$;nS,D=q,LK
%XXg=c*@j/=juR<oe=uXOjk+/"DG!dBf[__C=nhFYf#dkL`I,%^U-a,/eX!bE?,^p.E5'hJ*6Z00[`C$tWaEc#![bWhCno_(cq0Z9
%8>BOp=8=;O8hr==W?Qp=H1+j4TRNX`D@Xh=Mp*=$7$$%lG@3(p"U`gm`L3?\FbEN!>d3JG=Oqhd5<hkHm8q\MX\3HY@9!%-Qa\@.
%;&$\pn&pZ=a'O+lXO-k@7;pX%HInFR/mV8VR(Ff(Q1!p[fnrsWoI:4?]j=]\)K,Yu7b;LKGh2'F;*)1ZL77#EhGgNd,6n_+<?T*n
%_-ZK.]a5$eDYp)HD$pV\Xj7`CH0a.'WP_FJ6f"QY7I+_&bu*sZM(OXAUBHHU4TYch)jcG"("D((r&*#U/oL(cm$RhNE\?"2Wf:fm
%L'"AarPg/?)3gphH9oYHJ%\]Y)=11!Se@q'Z=6)eF1Rs,BG@)>V1\Q)Z3oS,`#C(RCee9c@?eb=O.]`1-3k[NWbW-!HW1`n0$TOZ
%2l2BRefrG^W,t`NY<u,".(jK6XHldG.90rL7T5'dY[nb'H4p*NAWEIbQs`K[EIk!(pe[.ZmXq7S4EYKh)/E0.Cr$^8\cC:ud5.^p
%$[*H25dcg3#@CYShms=Sb-9ohf[lu-*6-B.\i-giBRe8Kp\G<&E4nRdIKuAS'XA#F3'LQn0%$sh`9Ar,`'?mg/:ehG@8ZSF_k"<J
%hTT^:!l4n9*KHOM,iFJU:2@6[_$"'JG7\[do1DA8/Q*Q<!djDKF7e;lj:h<]b)/QE(Qj]?`'E"@_%I*,(IC!OV$>[qc8uc[*(t+^
%[`:P"-$[OPQtf[PX"@YbEn5VJc)_c_T/@/&[#c/pn\p&@U()p6o!Aq8hLPJR03o/D$)Gjk@4n'uS2.nJ']:uTH\"_jMHem70j^=8
%KqKu808WU*I`(p(ZWFi&`7g/"SSPft"!W+P#)"E$)R$5#A0A`a6?pjZU&^9XQ?aZcJ0m#!ep1u@#C!:kEP(sB#A(nq0aeE3m@9q_
%^[9'6$9m=kOh6;/m?M%[9<bKISk]Ag_F@_IMc4eVY"fZf!`:M\`Y>EC/5PrX12s%&io&cA+B$s)#<Cl@O*GJ[:#jY6"^d/:%&o/d
%>=i+)qG!sZim\AM6aVeaRjda$0o'M5a@ZSThC\K/h9S1RF>Z33#2k?M+s8iM'WoKOZA@^!EaoIP'h&gra*";ETs\]?@$O+!WXlhb
%UUG3U\5qrrim>a5)VQ(R@6H.PFp(6M/I;PM?8N+IAJNEjal4Dc'e(EncKh`3<W0%/TrRB,)lL+$;0NjUCPEp+=r28&aB?Sd\O=*s
%%*,?=h@9[Q()0r4#j!:(F0FpX#Rm5''WbRZ@NGeQi,*6Zj]dJ[+X>oB.LlDM;2>'M^9khJL3J&#9%ScuI-pE8%^N&EUT*8Nop%oG
%W,nj^=^j=!kDNi)*T7/af'L5>$m2bkVqMT2kMYOT-'mITet8Tq.Tao94T2rNFGpeVLNBoR^7\Hoqdho5.(<(g9<cDn>n#D*$abKC
%/L`4uMbXaETHsakLLq#1fpPE%=*2c@WG775Puu/Epp<.Jkb(0iRZh55BRrFGKd[E-DGId#?I$LH<FE6c0:<@!\jsGp:(f5(Fm;TW
%,I6k(hF9j:02#J$`r4qs&Kl]G)JHmI8TiK8?(#j&%,8:>b`"%*U`NB<=&aLjPHF"Ef%pR4L(7c^feR"+$WX$mdER[G$+][TWGm>n
%Ci+icXG&@LP`h65kS+E/_@T"T<M0eg=gS0?pK)2"Lj,\O_jECW#j-:=pWJo6b>:PDZ*'p$%m_&t-1aDX;&Ii,d^#<]'YBJ)DB9sG
%)%1#O\3>Y;)X4n=FKEuP%Ca5;EE>af]bE2TX$At2HlcUf,KIJ?!#i#ack)0eYBj[t/43pLM9,jJ4kEY)rB`nh#sC'pcAs/AU@_:T
%E3k<\SJ6B6;1jNLF%3Vc&@i%s,nuCp^<3s)?iFN:)?JAJqqrdjA-3kNVRoVGK)\^SMlBHc+Y75gQ"+.MG>=P=L*fsaV1D",;9DW+
%'Sbhph:Iim$=S?>_b.bZ<A)5dBH@%C9T%_,FrH_^NP]\0K[BOK<_W8!ltFil<Aj(\X&Dd`_C@[d;ZlH0mT;Q7,a*F(E)"E"4CNm:
%?.FU:!@5GK7C21dA&.a_bNl(-(p9VBd-?GRV:m[_ju)f!&h0*`B=RPh@a5s7jTT%:N,^)BaZ[;rh@Nj'_V??n;*<Wf!>"*cP_u;,
%bSrTVnF.1t"+ioi=QmI%/)rHYjOo&So:dMUXi?eFVMWq1!mBr>V<VIlpaRpK?=Ki'X+_m=3"oY9X<(i\Ys68qUIOc:CWt'[Y,YZJ
%TU$-"6Ou5%"3EPJ637I#T@,[^e@2HVk2O!Prm2M[o[uihaOXJk]j<:ALKj4%ON*I!n?m&5!+dE9o$Km<&qlUQDR.D@gu!8r)nkdp
%&d]lYU0g_ThS\eC6B'hLRk5`n#P>-%WV2*"Q&K6GSOR7PLs[]th:2b#,[OaKkg4rTiSaD9j)[#0hFL8<>Z4Yt&Q31F9`dKhGPA4Q
%>_3hj(P2kVN&=C,(0Quc%.*tDR6A,`Xga@3U[u(_"gC^jS.1iD(`)*O\?`M5PF4iF7s<\.0F/`Blm;16Al[9L4]U9D<;kP[(V0MD
%V.I%O>_>i%%LR4;N;*Jf_nO+Pn,tW_D#mg]P\$d\4Bhb=BR.fC9q\C5G5-JD)Y&QMT>5Zp9)(EGd%Nl4GjXk[J^TA.B;ZKaD$#I]
%(D1(J_qHSPAh=KT08OrH@bo,QEbjs'1[)d7_Q`/d2Ko0G:We5nKMXuc0\,%3)<D8(4U^_#>&rX;Z$AP,<N,=UPCa[F""Y0F%\G@M
%/.66,MT(&0;H!njJE("$Tkd@knKLe$h[PB!N."7V^k'dMh%f<a/Lr7H).t1L8lPf02;(d!aIcn@Jj4Fhqg+Yc#0PIH/\S+N%VNng
%o[lUHH0a3pO;a=Y1!Q#Y:(^aIDBJCN;E*XuNS4@[Yb-s]9\ZSEV5Ak7fMm&-$Z'cS#n":oUKSgf#<%nr!"7G(Z$C<Q$J1P_1+Gh]
%&EBg;c-WG_j\>8g[hd85h'dGGEUBsM@l*uQ<eiB1DJ5"apu3D7P-sF(Nuj>g=%@mK>jNnu#-D+/"3r>:Nu#H2pW$AST-[k-N)iQa
%X+cN2g:@m`K/4Q)%!"fR?)RH6Y@rL+a+C?1AN>G`lT]8?%^j=W&]2fPSiQRWXNISZ)$M'6@Y`@0Dn6m0.Pf\Wn:UZaI=ba2;@g.A
%bI_:*'l=8P)2r4:I^6+irr?K$Etc70=!Ac2WNF7Ii*-:UaCVD]]Um'9a)Y#1l\hju!?s2WZ?j6F`=t&;I7A3BX&QjX(86Iu;+RcB
%6c-M1=E855e4=+&fHEPF7$lQ!6QHIMjAk$Z'd8?)Xm!Imla565^@W"(!M]Fs>8\b\q78tEIY*Y:2F=r,--KMHTlX0B]ZrPMfc+Hs
%WSRrY"CnY`&s&IKCTZl7`,L6F2BOr#2GsBgnMMVJ/@o_8JrrCfEjmd?c_7%W;3a>YXLV1Pcdi)5:mre<1OKc0q_dXO(khp^YhIVA
%k%qT2J7rR0c3IR+3]jNl_-%t<+L1t_c`VuZZ-'0rqcIDH#/*J0(K@nQaK-,lE#"$\RKs<E`<5N48lbD>2*+dRKJ7>$!lRV#/tXq7
%8]+EEh<:d#7s5EYTU3HP:-a4G;\;)IHI7=qSshM2*ZW(VA'=:r=]%QMRYhp"JhXtn\^WlX1m:Zcp^!*TR8$<k'dD")Xt#R77k+cG
%C5]D\rY.u;;]UhP[Hr;D]KDl9P;?`]@udL-$ahY6a.gp:I]>H*SXT+3W)dWPM-f>`,&U1b5e:d!Oot\Va3KKG&)N7+'fCheK&r4<
%'KS+R`&ih4rXopA&S+,:/`Q+eBEKA44EPhT(D<XgH#,NQS2:j2C.l^d)rA?REnHbRi,s8r\!`JXkQWHl%*'X5!/ANK/5P`Be2"ds
%*_kmH;/)onnmZm1$-$e%0,B'A<0bi:lpQFFCDZ("9*&ijMc01G9,.5qi-_#oD!J_oNXA2lMX/A8MOO\YJeO8Lrm8``]+t#!T(F_;
%6D`:J4('_Iihr[tRNBb+T,u09ATan^V2f#Tr3bgD?SNR5r&;s=KP@4@YjL()/P6Io=0P;VU;gO!rCJ.ZGUHZ\Y>7A,gANR"k89St
%-qb7[lmRFo/9Jpn6jee]#mF.`k#WZH.FEF*NnEi8V^VBc9*PCaWNtN-MSIUFFdjB433)PF4B9abh@p9ImOSi'][ST>e1*o"_E;X,
%G6J[`L20C4$U)08X8-$miD"l#m$kMtDnW-<^'O-ds2<>B>Uqn0FiK5CKtO@D/ic%r6SihM97=1M@lQ,QS62t)0YA.FY^l1S;q7>d
%=S'j;fjT#1C[5lQ%sY\j`K^?6h1gi0(0k+5&B-Z>q;,j_B`Cohp?oA,s"mk'V:)QdMK7R(*^>?_ejPWT)BG3'Qek3:&A?]Ol.V"U
%86[f@g4kr#7$I[Xln(\A)%]hsHg&-s%<Ds-$JcSuWtr7k%[ODLN=rt'U/$^77CT.aob`:KVb8G)+`ol;:GbP6'*t.oq9po'!<'R`
%c-+Sl*RVH#>MH-Y,7DSYIC@OX`6b?rog.k1W"DV_k25FN%[i_;k%.(e[j41mG3WVlK0"X"W*U7JO1jhSj<fc<`8XIp$YNmT!+.LD
%/G%*JaFU.CM`5bFM?An%HATquP>8K)C#S[Ne[(<n]m[!4YE/,bW7Qf(a;&;i1;hLBhQ$KEW,($u`ttMZ,1(\5?GR7#s$B&Dc)jL$
%oZ;c7FB##i4&2%m:fSrnH',"?W)T]99N&spjq[^:kl4:f4rJP2S`Va:s6LZ?Zm$JGV,PKo:ej>)4P$j,D!d"THn<VJlWMnM.;G4\
%2''rnXTZ@^F37AG*E,p>I9'+[)X?^Y>?#*A0j*b_=lS9$8tX#6\\,=ED>H`iCsJdSh[,tjOU4jb'U+FaZLDYZ'<'Me=*:C8X]&XF
%]d'MdaeuZYGbs_ekXH7IB4$e3:dZQ'2DL#-@4LYDO.d7:ZK$%tWDVB[Zi=C4-)qm4l'$cTHf9X,k,RdSVST6"P3IX*hdorCWW4??
%?9t]^fEr8gUgMR@l`'Xd.P7a%Z5$qBFfcJ3\4#n0=f2j"M,$]TY_,RdH5FC6SYT0s+kg7fW\W=sD<jiT@OdrIj5IY1XK/:b;m'>b
%OS:>eY&e4CfjRk5/c`KJ:gcFOR3KR7!GgLp7ImHF;7F_`M<Y.RQ"L-J>DkqmXbZ`B'!R#C3\=73OmMl,5rB:5T9E#gh`Z1EF[m#^
%kg(]KH7W*b[0EI!duAIQXBIW?HM!DjAT4.BVPNK^<l;9aI\Cq%XK7FWTe4ESHEJ'e/(95jNT3pN'e$c6PXaa1Ga;<dbWmf]8ffp0
%%I8DcBS=J4<F=]_8j:I@eHS>&BpKI8/5KpBY7II?`^Q,jp5-[,IRA68!S(>aWEfFDf/n1.1><"*dd]9%oHaj:nhKP9!4,*,-fm4/
%i`2jRWNqb607?">_a5`P&%A-R"n4eIpo&(e"V\gEWgls<882h0<.q(=?.`QR3n[,ZGKQ0,E?k:kfD=^Ik^G;pgD)u-Am<2o3_Mu1
%N^5?7)h;%PV+'iNc7U[Kj-J<.e?H,3ctZ#`b[O&cRaD,@/G5brImUb32,p9hn=JY)-O\S8)HpZi8qq,Q3WupL>%DsXneK]YOAs2h
%&.A5A!Sd&4?U_m'(tqdb5J#\lflCV)(=_*?k-3r*b@C)BaS!JLhjZmQ8*h:H0DGc_Y.UlJ_T9.,?j$N338EP1W=7.rT'C+\/K:l'
%O^pP[:4OPt*=gGQV#p/2%bYN]"(j%[Y%-:^<)HjX2qBMn<&8;Y$*<.+>bTYtJn<#Y6BQqhW15<+Zt).:<=e'&4O;+Up7:C/BIVll
%1suf)8)+e-6RM%SPlgKKX@Y4=d3;^B15p=QWrdDF:,;a`\W<^L5rO]GSEoD%X+"bX1:5#=F",=Q1Y^gY12VPL\&V.f:=KNS%!_L!
%\lU1g$MYJ00R%o8YaV&?1oSaia!hVp[u**AN:Ts9ib%=/qF)l0Jo&b?YuZ:GZS'bm'R>W$`Qtm_lo1?.<aS%"`*&UuJ^l1c)mLUA
%+'0hn4\ebbZ/(`Kk_`&8':4(dL0$PWnJ0;qoP-%WeXXT`m4aP'*3K%_'!BSTD\g[-'9%(!@Tu4dHGH7s:Q2-]4N";o&er<IK\((<
%8pMRmd.U><4(MMJY3e40cpNLE*V+JL=&6-29mIF/q"+*)h$=CDld9cpQVDkiQDij$X9Q2J9O]1LqLQPC:#$9fGBS_K,YTCH;?#Cl
%A?rW&MH,XZUJ@2p<E"Bh3"\KdXDp>$Tr6@AQW&XHl,)1kibL*G0S`5J?T=%)it]B.Cmj[0*[u\/X\F`:bj7V+[I'\W-=5SmAH-`H
%2!4/],_NBt@huGBF(iln0'aqe(`_W3''!CjJQ6#CP$0g\nun(NM71ZN+""$)Klml0gX:d\atRt+jC;lO-snj/58U3(DOC.eH+E_7
%k'arT[t6X=3Mq/RVimC3fa//F6hlBm#+q;(aN=[n1i8Z7[E1^?)('BqQDc7MUc*::`ETUbENBrHLN4<Nhnr..!IiMA!/]kLit@rB
%k,?rT*>&O#Yh9/i&(D_o,`'Gm1J=/RB]G8*X<*YLG/^+&An3gM0cMiuV?JRDa@@Ct?3Yg`5/RMdVc_f"Ni.#p3"D?#8;nR^/q9o+
%,`aHC'3#4jO0-rhb@56Z-*,\4R$dQ'2O\d-e/@FCQ3#%&ILl"MpjFtN=4Y)&c\tAp5)d'-TUdQpEMj6R8s)apMN=U';&Xb\r;EaT
%jY9ETJFE8!To7B/bbtAYIJb'^'#IHr5H;)(U9_jO1&?$6B8f"JK.n)6L+mE_r@hI1g<3rmBf"dE)"IQo^Y7n@I4^R`eR*.LVrIUF
%>WWj$Fa)IANW>2[=u83lD^,B%cAI\"mbS3V3L.I%)`Mt%\ks)M(,>""NJlTqbLr*\geq8FW@/Y)./,2s1!!Z>#.gul+<eEMCC#hZ
%Bd05&BoH+e=,:3u7.]\8JWYG$41]EN#kpk_(BhgUi_cb#d\mh@H=TERCaV--@7,t_DD]AB-L1@$.AM@deB)VC@@SMkWuf[5BLsGf
%Jsj;<f3]d&"K8ne/KQD4&r^#,2;R'<i_'Blj`AUQU*=9VH*mB0AE&iNpOY)BVV>1WT`U-\q3cV9pW,J#)hjjA]9)EhCe"?qpt_0:
%`8g'gjdH1.d1Zl1n@7"$bI+1W+6M]ZABkYW2I=shDR=BVBK$GHbtM/jXI3a/@dH,%ZV&$`=gg<hFk6_SB/*)_Z4&U'ot5:UHi%fc
%,BDe%BGukUVo$;::UPV0ro1J#S/u1gLL"ipE))ChH2?b[X0ZC#R>n9;:pF8p*UC!h4"YM<TF&VJ;n<L&&)ufH?]mfi=Empb#V<8:
%.O,[0cmQr/=Tn,Dht5S"eu-DaZR5O52ClO_[V?G8)jfE,Rr1&D/EID_+XAN]p#XAI;+TC9Ye3S]jk*Zn98#EcN^99Q81K%lYmbN2
%V!ZCLWo..4T+"6/oBZH]bp`)kB=$VfIp#T?FO/F:%Aq<)9qN\K2)cd#lerGdjHM%+Drro%>KlBVFf)%I\i_JNX4/QjQ!@ksft_WZ
%ZA[($='18?e9<N:PC$M*^BSCnCic`5!`5b@%3HDGI`09\<!U<[4K;7:ho-@pg<pcOF(6@oamH0C7.'6+-Ak[0YO>7-[e]k_FF8Te
%d22is_#/eS+$aS07F1V,C^cot(Q-mBK[\lD-7nPPn5Y[_"8W37m:"0N\>pWG,@P]3W&KT](,!dQd6SWU]sV`F;omOj_\lG-J%dIY
%dV]dG=F?l"MkcCt+11UL?/h^:0jUCmlCKe04k/l]IU/'?M`cfC;:?@=MmS/lS-G2QUkN6e]WAJ^Rf\f0jmUP;oU:O0&sL`6CJ>#c
%kOIXIN+f^59lr8p'Ei-&Zs6eA443W&P!@ZYo!4ZiH#hE8:SM>/(YJliVl5Nh@DL;JQ)B5`LcP$'7H>/JLRjKP!%t`'qiGng,j2SW
%bj4J)hfN^4+Tq"8i*Ygc16cO+\J;7bA&Hr=RFj_f(=L>phI#\h($E'AfN8"c1Z7j?eHqR,-3<f2Z04*<,).A3+ad8e6W$bjaeX3!
%;>@Ls\o85-pa]6tC\pCBD\Z7Q^J$OuJcI??N2r85?t#EZN4_JiWSiKWA=hHL5TN_mD.IA(T11ma;S0pFd%5V*h:P7s)Zs"Rbo`j3
%_l1[X)>HHA:>6$$,iF'>hGCTNTp$W%bKK?c0+Ef-?]`T;l%-eREr.p>>eKF!>HYK`UuT&+F68<1,9Y_i-4lKKIi_dOoH6_ROWFXQ
%Oh&YdETO!O/;,U+>>B+l>XmK&kOe9>SjRcO(ml;gpL<I=2r3!tZ>"I+S:#sG$So$`1Fkp#^(CN%M`h6fi-VJTo4/^dKfDUj[72dG
%aTl&K'gNd9QT1$^<h:?+FJ:jkZ%Y^@M*+PN&L-Z-K].a]f6uI&#RS_l_WTVUII-24>?HX[@".>b,+7]$>Z`m8dp'l7r(%CEl*1,S
%SUHSt79f=+:)ho2C!dN$];Mt>D&>L+V/Ss"\Af8c]M7;rT?kT_.ZA"TiA2E>C.MNs/OKpub94d^p"C6&bMipb60t":ge$E\WcHqQ
%2MNn\+>nB1q#%#OGp^2gH_(Nc\Y8hg`ABho=kD2^=S-!E3k6,,j7_*Yf$fJ;[F:<aBq0s9Li?Cl1e6V`_r,i;(`K=93mZq]hQR`1
%GG]]g'2j-s1IBp<l0,sEAOaOd`P/TPa_V2WT^2-\_EG_5*(u"7$]@aiKA&q+H&b^Ml=KoKASQ[r'Pi_F9AC=\_L2j_+dY:FntM_Y
%6moFnEuu@?=beC;Bupe3\OAquk(Xhe:[i5C,t)3nlS4@pS:N/Jd4ND^rD<K5'pf\F+UFdG,&$*=?^)Sk&X8q@9WSA<f>sb_po36`
%DP\3'>`RN6ZR&kn$IqADK=[QSMF>&(nJ-GZo9`j42L:%5r*A/,R^VSl(4I<@CL%6,d+\_<g4'&f/ZPIXg\S<0RPp<!i=Wl6p*@Ok
%T(F6nYK,j[/tai48+!+Y#=4gLUXc@0(db&Z#BUqdZU:2^&&m.=Y4keH$=b!U!(u`*eleb0NBI;->dHCg%eqRR>'0T%78`&I1CJK/
%BXV!]A78=gmtu@,g5*9[?DlG-[C%R;(-c\W2lIVB..XmhLiPDlE@7X2Z<VBO'XYf23Id)lE@'6)N%EtW#/<ml)L,2%DE5"qEE./G
%VLqVY(7..m$Q!Rc-2Es1E]B.roN.&/:t4,e:*Com_k0)uL`XiTXK]WGHDLsjbXTR3lP<Pk!ur7$cBQ&J4(&^S/nN(D;`#P[E8I8q
%q8pcuaL;`rY++a(9ga'SbqL_WeVcWh.]VDuAURUGj2C7Y^ND,$*8:gH98e#&&a5`=(ss>F!psdR8t6/M3hmP:oL=L/6mDKqmC8Jl
%0h\eAG"+29T<ucQ0K$)OU<P#CII<T'D]u(3?6bpfh68T"(tCS\$mLA_3B=S[_`dB0`8\89BZBjMe72K[PdE;'DC&GTe=;nTXCPXp
%]<1%7K,mWE-G4(fVYrf!a?")a/(G%o/,g4b$@%s`p/)UO00(7W`\"'CXBJr2AF^o!T7"I$AQKSb(s#4X52=jG+Zp4DD&?lK(Cg8^
%a"X-tj:$gU7V3?l@ca]p0uT<I4\K[/+H'*bh5Um)'=Bj4Pr""CF5WsD8dQ<;,r*"hAE,HNi-"aVANA2qc(qsA#u:Dlm4"nffcCp\
%!ZCum76eMX^Y"KoGqLo6BhCf>/3Rnc<b/)sCOD6F$<GX28*)[mM[1-lXd8MdTUjVLBK0^X:KF*UI@:b?C8qH(1[Z4&Z/d)^_riKW
%pagP3`n%9h`c.F89W<n'P'5F0WYIru=h(-B1/*dF9)YF:Cj7$HeZ^9TY*O/&3MXl/)<2G:e@:>c&@#V*Ai2=>/e?'@9a9fR.Z3`Q
%Jg".ZI_nDg:I*#"l)U<23[q]cTFaeq1Sl1Z/tc;J9O]q_$/#C%D07UY!s,IE+Cs5L`cIjZ$-#4D`?`^J]uAj+3LnP-#H&fgHmHNq
%riC.:W_%-6o5S@M;k,T//Fn;kETbN!BVKZ^K>W+@+[4<:dl]rNDN)h-3PEP]S+r^#PjH^H$MSbc&V\D]`aY#@(6-S`hU-QVMf0gL
%KGA;O-p\-FHRI]0S"7EY#VLC*Y+"$t(!3Nb(M1O$^hT-SSAWUNOXuDVSVI07`fh_.(&"N4"LQED74C,%@KGt*.Mg;4,"-TP=n8!F
%I,LC.)S?aPI#sJI?P5sjZsV'Vm+io?X%Og9Ysh)Q8f:DMaiTfGXbc(`R7Q%Ef"fTU`',`<^Nr"H1a+6Lqs_/oo9?8B07gc(N<Bm=
%np6jVE0$5o,-ud/F\-F:(--Rq4kATY%LVam-,_i,a()]APD`k68BaONFr5*8i$-JlI8eY*5#']7)g6sOpAbR1JpO&P1sFR31f/`_
%P=9[(#=e7dX4dRrV@"0t+4Xm3RD1qOCsTa.T+?jfN33I_!Xg<29HCQF2Ha@4[]ilSkSg809M'h#(chT"S9uqW--_-ii:qCdCR.K1
%j6JJ6oO[#//FLg-`k0%!WC%q+3'=E9U0Lg$eX\aaKh%Nt^'YcMinW<":5P.d7\o<$<.%+'>'09G2%M)RkC]FL4]5f`L0U1B)\7R"
%%*,5D?mRAh2X]RH?9VL4p(-t(EtYO6ZSjigl/3BW?rT:Y\"]oCJS"^:O1E>J86Vm@UC_7]4:+D<W>bCeESY8Wm*%=G_c,0`(AWE,
%/*%'U:C!%@)o%Lq0sN<XCRadWj'b`IPA$D_SOgHHVpsJJl*UT1C\crWIaBH'7iV;*]\[HJ`US&fF#8\$hmZd4T<M*TEadC'g&QmP
%K%F'LR[8jtT>G&$hoiC"\mPp%*Hp8/K&V$3baN+=.587.cCQNV@Ngb>0BPuSh-EtJr'KE'f1q]Q>R"g#ZEm?L7!;uXf/?SDMYG[P
%^@e^0F_`QBd`/gnmA:,UA[$W!V80e'>ZTA!oGg\'G+1+K<S,CD3lsGo:A"+_0InH\l0#??>m0pAa.6Q-Vg`9"+9$luBVC=GkNY[n
%8F-60%*>p]9k$Y5@s"EF$a/IS7.*Jq<\\a+\FnYXF=G]DMhL+DP4:LKUgY\V=>"[733Q&AJXr?K#Qi3Pb_A)gM7Qe`.tRJSXJ?]J
%8PV(J4%L.DBI2lTX?!6\S2-j>&'aZCN(?obA7t5@;>^[Frf=ot:TWSuaNUNKRfSrU:KVM27ISG3bmu;UHm+c2\4oXRd6=QYQeYHc
%'"TV8@1(Z&6t>tob$C`K&kC]fbtUQN=i]'1&O)(Hc"`;OdD]eLQ6,(HYLp:oNr[,u@2LJ[*X61-Rt7J57PflZbMiRm;N=!&GhgCc
%E1mQ8)S)sr*ZaB*B9HdAMM>TOOTQqL\="NtT6Pm2&I\&rQOu02ggXI:o/DXqq\Z5oT&"8%)d.9QL@_m&kWa?bG_i"!Tn+<h-J%<Q
%ng3i+7OhhOO%i(0@:J:a8R$"K6d/EZIMaLhrBAP`Yr+[m^rWXBI.ik'de7[e!FUDF;^1fN3$Q6l<YP!,[I&BZMgUK#ZrYQHMoO[S
%V1B$l!g`4&&]q'ak_PrG;afbg=R=hgKZ7?YCshr:1"tTkT>oLFP-%t-;/O`fdm,OA)mf.t;H"6Ubu2_>Vf$VFO9;HFj6pFTP$5J4
%?uDi3RpP:O/JbXCiue;kgQ1YCqfD-$m,tO84]jZTP=p^23$(u&d)@9@N%6m/+eOKp31!aGVeN3baY4K@Ei;Me1YB`T`)p$u"C!:K
%h.JNlN,a)um,?@\,:MGLRC1Aq,R7#e&[(Gm6AiejE"bgA#.sjhg\B(Pn'HK[bDQ;F$[I[W'#j)"$lm:p\;i!1U26?h.D8php*<P5
%64L>9_46GZ?S:WJkZAR"/l>e0$(>[O*Q2M^,paIUnmF(oLVnpRGccAeqB$$-ct.m(3U<j.1[\J4MC*KB$(trec12nRR9CA'Z0Gd)
%,R))Sf%-e%7'L(4Rp(l$@Mm4F(</C[=inirp-k2h[OEg^GT$S$BnQiFa0Ihq'a2dresLoQR]6a89[IHQSh=*r0cu\e+',[6aFYAC
%8ZVHgQ?7P?h(6ak]G>@W!_((RC_n$$O*_oS.NP6V.%aJ+f2XCTK?(0sObqSm;HFSb.5P=7>NtOHCbC1)(qE\u([!R$ICOn%SD\J2
%ZpdifVQ%e'C2@^T%+)"N^<!,KdJmG^o<3M=?b&k*MWHERY]ZS8f>&Lf`GEH<"YM!9k1peG'\20oSk@HI;u22kUN2<>Rn-F:)esYs
%&H#bTU?W?/"s)qpq1d^2q$a$IIPZdl1P787aDJqgWml,?B2r>nINT,4<_9T_7ZBm4HiU-3rq2^%1l+@TACH8\jWtHb`7?30<`7Ii
%4KPK].m`K[KQ/a:iXb<2#*qs!oY\a(/W:9>"GhRY&XH-agU;os4J%eD/MosF?7;Er#WZSV<n'/e/:AUaJl"Z`4N*"PI(!k57j@ec
%p60a8ED5cJ&5al`XeTeBq<m_W0bE>`(KBH+`O^OBCKDWk7o!T<N\0aas4::`9'@mWBQ@;Qg>kHe7GQ\UIu+3:a\&#_m?@<IlM6ic
%mY)HL7UVE/+;;OCU8(O.&cqC_IsBhbV'QB_c$0'?J%r*.OSQpt2&jQ5l?X^5[t+h#:Ut<t#=c@dMG]qY)f3g"&WH\J_QJ2$GA:?j
%(aT6,+$*t`EA/VqH60C!$!])g?(-qDO!\ck4dm&s6!gbXh;0mUOa,TtMn(dI<*q'MjQ<pd3"u;i4aN&`IPX^GC4D<Bqidra(o:Md
%&MjXAfJY^<h&'r*)8=;<X$@?6kK+XiWff%fep'LVNkF/l$.jGc[GjTllL^WV8agQkR3:54F/[U5gnR'C(k0m+-pm7e!A&,-N"W)c
%-0OmYJcU&Kg=Z5cVh8^,o\A3,"1./43Rf2UGO4nt:J]F5)!BOAnO'5U>fsli/leQcXL`%@VCh63^p#+=+ie"/QQ,brl<_Hi_PJ/'
%QU8h5L"2GoS]f!c6_H/-/MEnRa"eA6MR*&%'*]'S1u<"#Z,h^,>B=r=-I6qVE#E"$j]3#8:ZI2i2*@^h4CKg>_sbm:WC%^*`lo2i
%4iu;0kP1+Vn1=4garSan:Nt.I]Uj5CpbNlUN8s'$,?In)CU&rbXC07\dDHob)70"HG@WXNn\d/`&LLZ11*65h,d]ehik*_q*8(I;
%mOhH7S"_VEjt4,#L79&6A4kh<e7<j*<e#-g6il<3p7*b"T5B]!QV+%8Yq3ed$$bTN^"Q8ESUr'a\l3]TU#l.Zl-nJT@ZUBFjiWE$
%$'h'TqTd*].ZbG,eBl.2AQ,4eZ'ucJNP,S50IGRDpO"SLRm+H*XjENaR*MB5X(`VADY%NP?7OGH90K1D!iMIaWISB'C%DXDRd8,o
%6U:\ri6iWDQrr4kb7m$02,TVu#l%Jrp%I*$Ta(e-m^-4W+<D38Je,ZqJF45kIagBB:E@0MX_p"7JN?:ie(bX=_5)C5l0be1?1j*^
%(fI[@3dOVUXWboAI4E.@!I>sIo71fobAu'=oO)uucd>iQ.^d6#hJ%hg)EU`Ch1n8k52[I@b%!l^6ZeE5rJJ:El/p[$ScEp>_6iD6
%;YLn"Q21$lF)$$)Z4%'(aL1s?05?VaOcp[nd)^(APXR2e/Ack%l>]d2!W^U;635$0R-4ZTZ0+S86W]rL9(TdE.aPB)T;TYq;+l*7
%'STLSZ._:T/ugaoI+%qFgY5t'OFi#pBW70tk)Z4`(QY>mr*;fg2MS:O+W\R[6Da@MVgta+^tN1TD`.>bI*OM?]K'MQ'UE75&W>s-
%'F7+UN)k@62I'cu[V-J92/5oUe`VbY1o2Dr^rjSeS>[Y-#V6-qCddZl$p'M,^.`Wp;VsUR\&8@AQ5P:<F#Y5S8OnbR7/afPp5"!.
%AWhM*bid;JiE;`Bj:faVr'^(:BcP'K?7fm-(5$h@gG8^M\^P_D4/6?PeO<?.(pTLp9o^c0dnQ83A8up5Q&U)aiMj2E=uVQdd&Gj@
%M$iapU$f^-7/9oVZ)*Tan8c*;GYRM4_DP;)LpUf:TEb2sNE;.6_0nJAk(+Gt+%,=eSn;e;%#L[LXocXMFbT3uO/9/mrGZR$nMWkB
%((B<$N^L68E[VX,KeA*LHJ(;SC/VjqCdH4W0-a,&FgG&+[+RKnkj?YOLS"fN[lYY'i0;fPa6j3Y9gfO'h5F#t0R+b\Y\C%K8K*?.
%')!#f/75@Ur&LVql^J>P$Q3lAFat86A.Ob_.[`d++E()1BdMmuf^+iG]K%iA-NkZ'.fn(d_iJnU(XBJ#q^t^W7Y='F&![OI4$YNM
%OKt,fX6g?4:iKWqTNWacd,JIrhC8?^HcEA/BM's_Kbb$t/JKFD;8Ohs?K?F5;a/.@V-2nX'P^Vq*6mHf$gKYHZ;Rl@eWmoFi5m2V
%9DC6-H<kEV\YQA4Y#$46A9(V@`<+[(jJbM%8B%g3_dm,tBLND1]iY<jW!'rH=+nG2!%827SGeL'hS-'F5on@E-o8q<n]*3(8>hq4
%[fDqP:hO!ZW>(5E`S%GqVF5m)C$t^"RQ*5DS/7/?0>"CDeB3*o8S6W//3o'0+TGn^3'T4d7Cbe&J$5lLkcFVb;;$46@G-^<d^&Si
%nukABE>\SYh->nTj@u)iEIn@j;&)/E8WK<1,PY(]50/6\hQ(FPVc1*-d12)E)6QIT\YQ;5aIS3Z:B:NA1R/1QYX>@Gnf95"=9&&U
%nh+n^<cS!XVp'*0DZ3>.T!"4uDM$C@r\U\,0"R*X;3a$C8j)oH/q44MdsTEi8"M/V`Y0D3'YeZfjFPtMYDJrZ0Pj_5o4KeE)GXP`
%(*/7&j(<=>Z;sa/OqAe/a%3KsJ1Lu];cPTu[.3#1"6P/Nf97Ta4cX$AQKdX5c%=gcs"Y>8!"%<Wl:/uej<foV,H.`&EcG\9/7FrY
%R126fYucFc_AkPp?QhQZ5^tM6RpTD(b](0gfEf;uZ[XI?1Ue%L;=b\lV&mSA7H<kJVK$O_TX6p'(kAYmomq)q6dboY5ctkZfh[,9
%&IETjeo!r^]koli+$<`tY:!!0VLZ!o+<m!Gq;_AIZaotC7E0+YqHNj-:co<n,#,a>DOP9gHdqrKHSn9-*F75Y\tua$](s1;Y#Lfm
%%ierk2N'\NX!!OP!CW\1Sb]$iL=+B:F#06*S'rS*q5X/5ZQ"f]:&"f80\N-&2uR-7*+bhPb\W.CUOWi<rJBa9=LKdVAds3NGN_mG
%'rH6_OUc9Bk&GQsg&#R[,G"3,$#Yg)oCdKmWWS6$Q?glQ7bYR.;Vh\Sr:giEqm`"7_d@!&e=4u9h(VGO+9G;V3I+b+%uR7IX;8("
%D,1<4!V$,744nP+&2&.m,H:.L7nEg+cP9:DZqPV"#f_I\g]N(6*ZO/Ek"^hB>3e+<OXB(?7d0u=Kp:T&B?!>%b9ZK6S2<&MTh'fb
%mA.0n(X2gS.qX<Y4fiW];g_ej[1`/?SuE=k##rVVrq)^,RPec@5XfQ5PoD&1egKtXILa\!dk$%**g+Qa'og)Rr3cYYeR[#qd\YY>
%c,gQ]^dB8t6?X=l3g+MhKJ[i4-FF^Hebbg@[-TBQ/Yt2])[R4"ff+neHb<#=`LglUGYbsC*A7iX)=4%0b\&A(me*D%AH4uS09)0#
%,LQ4^]jQuu'qN97Nc-2gkB1EH%tPHIcdkc+q>L+0GV8Ib+_f`=k1?tD]$tJWY4&_Ga0o64mOuo!/5k1N_LbelX!k#mA_,@AXpNAm
%a""2iASgrS[Oua;=HntY7A=$>?"4)PEl%j<oki74*LjX9?"6_M\6)\3S?7-ho95,M-Z45K+oegKD!\+L9(>Na6rmJ(pHmT,EJ]=s
%G&AM$nS(,l<N9L25$6bM3O0c*2D.-S3s&q@UCrhZXi480KuYsK-$3[_T#\+-Aaqa(W3a@piIiGr[jJfuC9@cR%Vrmu-DG!e8V^:)
%H`/a)fY*Hf)/[bYNH,+[/bhS4eM^Ul(V6GZUYmtR'u*5Z\DmBJi.)r.egeAfi..r9C,D7J\[EX[ebCF)l=X_SC)TT@k,IKSj-<NZ
%:M!]S+&"Epa@5?/J:]1)<`2./q;]64nOZJY\ko>Jo<PB>rodGA]W!^a#Fl-S^ASTq8;bs6ku2m"Q:<\n96t:Y,fe;'*Sa?s]+HGs
%/SH$mjk]*A9-O"'3$+OVq>6ZC:f_7XUTbmi;TVY;T*)JK?+/h`QU3<,*qsOqmA4<)ob&JC2Opl`j4DTLn+$Y]imsesbA<mNr!sV,
%>k@Soe9F$pNjsK=DP4H5_&g]7D<%Rs=^;.Pb>]c#*`o[o5[)\P((rPIj>5H5:tlc8X.mHjZ4&Tj7V@C-U'KYd4-d;8k<[,YbX3#O
%iC7?TrNKtcNoMaA.NmgB#D&E'2:jE<!TrG\]1%A\^h;Y9+E0uZ%pcM>)Zm,\*$3Rq9U2\GrKtAt\qFD7Yd_kFMg5f8T'6+14K0$6
%MU"[_FN5@9Y4@\nDcN>SQ:qc7DfemT$tX>f?Vi<JAKQn<QH2",0:<!fWOTYb4K^IaGY)upBtNC=8h(kGdXZj/cd:([W&A^LnA9u#
%X3oR*JkE92a43j\\">HaqXIP8nkJWS^rFrk.d,Rc/25.c*W;qY,QF9uTQXHZRF*PeLpm7l,C[Beh!Qn4C![3Ee"_KA<hB`f!qr=N
%.d_j;RE1]^in`:*ko+a&FX@/!61lESRpd^(\?;95nsU[&+fWABQrbZ?+TSEt8ObRcH5O?CDk*;Y.b/_[aV\HsqJH^[+B<WlQN\>H
%]K&Ooql$qn.T3dRLTkYsW.3i!B?rH@<'$CQ>RstU7+t<UKdo*1cZG8&'fVE-c&L/jOJt^VO0LB)3DW7RZgmG;g$)HI.LfR<W,KHX
%L)9+NCmWsWh/*7B/kh+f1!+0b&qj+4@gR&0C48Z.nH*sKEsn.'Gb)$$Tl5PL2<u%t=^o*fD*^$&n"i'CV(O%(Fgbr=hL[R+mh2P(
%0X.W!hbOl5a#Gh!d=m&N,mRfK:dkR?k5:,R#:/HKSJ1CW@M6l$Y\d2lQ]*cMf=2"5MS/m_dahqWGq"%OB*Z]GgE,EnnRG"#N!bf,
%K?n/kZ)lQP-c(gOVHl>q&O7cj3/snsgN$u-H`',$U!&>)@@c-97\54*a-P_U4h(:gN]%sTCKbtXouoKYApp&u"P\$aE?LJ"Mi>ZM
%V.H/Ph/ftD6>uU'SX_]'$hc][a0aMO:Pq)@*$29%Y^e13FXZ]7/MkGET/8H\Wd[oi$=?YbIOoC/=mj/E$R,KW/j%>,_W!:K8r1&`
%q(*T$7<%;P231?D,[9\-a5/.f(ITUMrRjZt>k@cgWnX1j43P55$!4"BH55P*?DXl'$\B.OG?rH`NC:MH&r[`o:k_Gqd_DaQ.HJd'
%_RSqeY0HO$JgRrdNsnHd<[]^FhG#4MB59df/i^G<.p]F".f)'ogoXkl?Imo/h/dN21@t:;\S(D$-!(ZbJ:23:b.Mq?1_r+6n?1FF
%d=%$tnmj>-,-2-"**.?s5;W/+%)P)OS$'*Oo"s%Z2*2kiphb=)S?>Lb,TmVIaN.DXS,nNh2*qR#hLHACqW3%9a.ig9QJD/2fNHR@
%=r]6+D+:*l_FkI[qrD'8&JuHQCGoKg5P!T^`5--/.6474@VVL1#DG;c[*lFG>#W@VE_g\7U:[!/6Xd=&V7I6kYSCmJHNj&`&c243
%WKWud>C%97!W5*iIGder:Q\?m]b)EnTB-dO!&aUf&[n+dA9Se*`llPIctNj&H@EaiZ[pAA]q<=nA.0C,!LS.r^7tZKOeVA>9C\`e
%qHk*t`s_4'<(HNU7n`GoK3p19rNJ+n<`ChBD"jW5SRE5Qn;T/M3h'7''<?-E:ika@#"LC%-2JpXCjBN5"T0u`Z<ET^Q9gFVCs-kN
%c6>hu9G,:<8YH1[U&"$^VX&2$&k&)B%L40H.Se2-'!4Ys\8j9=qoHI1#lPTsJIUJXWY67-T$UfAKA/,$*#`"&Z\/2Y30Ea:8ErtL
%7=MKWrUMh\L*B1rjH>+PB2"-*o-hXjeQR+<"`L4)$d-F7$RfoJ,0&W`\$c^GMJ8g#384)AI<g6)DAq'mn(8bl`Z+YpAqj"g+3Vl<
%]%Zn[&,Q*SbGj-2Kbm/,HnZWY)`4p8d5VA*kOYW>7PYdtU<SC$8:N0#/Xhl_C*!81=>Z_rW!(/&7(2(H#cT$W$J+7$&akp98'.Os
%@..#*h/KA^NXuu,I!hNfptW2-]S:OZen+^;$G:sWF;8"REkI0?b9hRGN4/=ce=d2+d\UHpED$nN%'O:p/iufR2_#O%VcrW/3.B@(
%T,Se7a!AS#.4IC"BWK7R[>.JaH[h+(*1Dc@(='0Y/Ntb-0_R>P?e'#898"u+UN.<=S^LqD)Y@T\UXR;TFLa`+Ik^I@Q'p';$+u=q
%HQuhU8VIUdpa)c0O/4/O`U:1!PnTOS6Rtt8iKE83OgH0>V%,Co;>#YVP(^)T+Oo=q&`(9tL9ca/m,.YtI-p-Qqh,YSJ8K6%FY>fN
%/SQ^lUZ!rQZA0uVU&qlG%WkBp+AJ$nCF#$*e]7WU?.L]J`]Z_5MjeiRDhMns:o@A"al`a7@pbo(RaEA1,(q&Wl$c8qrO8Wj;tP0^
%=uWCTYYP`^k@hdQ/>4<aenf0V=k&mcf[h%-U)R=>&bft6dI/Qk2q0U-);u!$!IcT@RJs>e?d575?mu@[p9[Lso](:rf,`05eBO#B
%GVD#1D?(aXG]/Y`[d_)c:]UO!NT*b8l6C\-e972Wd58bh\e\AbAY`.*U(ZAO9FF,sZ\FBcC*?"'NJ?5ZXW\'JaNHKXkW:iqag-O$
%-Z=qhJ`rMdniatA4*N%a]4kM^;W2F<JLb-sf[%"Z0T&$O9#;a562pc9fS&2%dbk[h%,JuopFRQNqG:emQ'>"9!om*r<"F!VIs_Y0
%GK3E+Q\$d`8B9.]TtWp4nl4:SJ(QC]lM<f4VV0ef5H0IHTR'GA:"QGK!Q[`foS"F#;c@`5Oo@LHA-9k=>ZM!E6ZF2W0r62&7!$gi
%4GJq^j"fYdq>8Mm_boTaW:WQ.870.m#hEZT+)`I.i0cl]'I1WLiG%7h%AW4,KY.9ULQN8;4kdMr>8X[:]-MIF_5@-;)nV*b>:mc7
%PE^P@(YD$&rbpU`9PbPc_Dqg`j2OP]bA0d2IWCPkeuS<;gX"eJGX#mps,s$%!;?Dm9jXI!<#2HW,")KZ^UVLH?)Zmm_.pXYjkirB
%5h1DXiHQ.kaXA.$=W`*fnKFk21kcDY:GFg'6T7d[8'MCC(@l@^"12SI5a8O5010s\',M%NE!FWu/(%5!#K9JeO,QSF=hcBYhpQVn
%1')\@-)]F-fpZu=gIJKf0%P/#HrE8r3Z/tOgV4LSU6(-i[[<(*7:-foN5h8MF]c80NWoGf5XuMD*%Php'rag]67TcdEmj>ldGK;9
%J#7;k02odCj/^&=T_oC*J`9NH=`iAsG(#+bTpV`t6bN)Q&Tr2%9htm(&-h=ZRQF9_aPjYI8_D!=E\5QLUk*"MfhRg`&6-O,*\5;P
%$<L\OC:X"O4W6GkaVnYLs.`r-O?!iLV\E(?9pY*4nq8qkhSh6HOKYFAYTO4M<*Iph)XgB+4n9`.0?.JS[WId6OX$N*5O\,WW=f7c
%:7emZSo%g-&im]kIgi].SRgbN4420s5VW.@3S\tn!S!%ZJoH6UH)"-#pUR\4h7js='W@PY<',nMSbIutq&F+&,U`"["lfDF]i5*6
%+GShB7KL_-Fnh(+25idj>_1/s5&G9)Ocud,[k6Z_O6NE7jJijH&KDT=hgYL$K:Y]`E)D#8$MFis/A.j'op!8UY%Bc@ieG8&q;*Jf
%Gu9N^0-*XHguX0\2H3R=r@p":T=O%rH"-5Tf<;>8^4#m:,T-FNFWX/Ib9TbVmSs0(L$h_sWVMI&-^M*PAG_G*'9>?\M7":A[7.M?
%a-uH%eI+VORr]fnpoKU3;4R(Y&Fj*n:fpVDj(qoK8.hC#dakSAS]$NdZ,cK6BS(gi;eapno";g/$q3)Z7nh/+9f4\-^=]><dQOY1
%Vib'qQL%oCRWiMc+L[hjZ"2mKp:]d0E:g`W/RAg1`*%S%cJh\YNI`MG0aY`<I-6g_)*3=KMbAg7"6d*E/9b!tC8F@'*lQ/h7o-jg
%d(6N+$(I7[pk\sag;e=IhqL.doO>#2;M9@$TCdD.Ld(7t9"^B&Tm"G`iRmWE_Mquf\/_N4*Z5<@#t)He`0E#MmF94La(H04.E#VW
%04R":#"_nd:MaGoRTL0AEi/A=!>]^lcb4X3m=?tUhFnAIZaG/+7s2-"R%'b\U*'3;51Mj!bhM@l*M..gNn(L1nb1=jrUW7$,CM\m
%n!UrU>aa21.elaPd\S1h7:b?_9`E7ndWRQrR@+Pk\8iPfbDU-LX=L<Z7s;cl4n/5Ld3h5q0U=Ujc)-u-DU*t:-7DSKh;rR^GJ"eT
%n@QaeOf4fLE4u&&i[?n<q(KZaCmrCT-hh331UiRs2_Ws8^f/MTi?M?iQ9T[g>i08DiiY3^AL#uAO1V:>FB01Bp#>GN=!T:R+fAmb
%S86\ZbB\33Xl@uZ'Z$-DWKi<QMB,ctY#A[Q$1Wp'oM'-VkkmZ5f5Hh[hC8dFK4J`hH)Q0,K`bZ6Z6CLs96Xn[H%\8q6(mcV!gu%0
%l:j]g+8B:]j,/P"!b2)CCEb[NM49GR?F]%ZSuDeC2BP;<A5haOaV/jEFe/`ki%H.<#f:%Nj.qIrUk'&B<.f4Z3P*ZbJ,p&od34`p
%o.gjX6qN@+/FJ_V7UD:l?_NNp,V\mo,K&FY)mU>)[AiUNZe>Y16RC4'#7VSg!I0k%6]';7XQWMSNdY?r<!YiAcUc3U5CJE;9ifr"
%YN0_r\0KDe$O8u]4tGr##R1dt@e"3@i=:C-g%d[doUDD^%RrdpXYifY7l`E]\AX(1L,"LA0#.;(9Yo0AC1q-`;m^k=XtbrBrgMT-
%fIt*NZ8*)9?lI*G615Nmn`=m)"GXiMPM>V^C533+],n>`rbs"bKu"D6F,2!?qs<BI]C$=2SECYFP\V2KFB"6i%:1%#$Ih36/Qbi+
%l/W>LB0)G"1nY)$_<(lEoI`C7gW`sd-\>UjpXf.ZdTMqQj>f?38)DLlX-AW.:9`Y0=<gnn1#+;oZGot:(-DcV`6T0@"C-#[UZ]Zb
%*Pp71&Lu\:"S`LZ%]&f7*s0[ihRrPu(=IQ\St-l7;m2?E`1)+TlZ,'m0[a:-]^P29]$upE_a,hB:&B+(&YVfiLf:?_;V_&V2uc%J
%cgj9c[X=stj?Q+CS&bsDhi'+WQp7>Qkug6A,k$o3Sc3(u#_kEr1Ht>`Re=!J#sZK3EJIZa5sQ=`*R*$qB2Amo?;VDe'_qYBH!W39
%#E)O!pCSnd:K@5<0IhRZW+:7fH,eXV@JjoLfejLG;!LLlj*rpB78CC\jcB&;\IU3eR\Sr>bSE0%0F`YZ?8"R"E`gi!US'GmC?0RQ
%I.$@f^Y+9RL'"h9^j&*sRTk8eoX:q(__F?B"8-n*a/O$!T'4inbpZA-bm2u[H0-e:jWl@'#eS9sZ/N_<4ZH%]pdRWfYpcfoP@@a[
%-0_hS-msFXhP^a(,SrVH#pkWU7UacA4&*'GQp:8Jf+F<YM`O=G@[cRj-gMdUB8_1D(/<"oI-QWCHW;)iEX8.T"K8sVUA1<=G%qWJ
%Wf-t9$-];Uh<gsGaVd9eA#=u,AMHuNRP^Z![-l$_qDE@_W7;SnR'rqN/g6#Ukn_Dc;T,5O$nY7DVpV4QoIb"aN*feh%hUJaaB(aQ
%K*KM\S?+cqBhn[s%!>\;;gZqC8tKT?8TYfGCpB!i6?*/[7FKhgbCI]nCEDl=0Er:Dro/+)=GT(Id0G%r_C\1X?P2`t;ke>aKXQPe
%&ir2:3UUWDI@JSCK\0;GRZnE'-e>W1H0g.]qITJ(iQp2l?.Lf%)PrtVQ@$cJ"TDI'n/,;s,H;W>8=%+1Crcs5r5a"b!Z*=?0nZC#
%LVn*\&t(bWiaBIA7#-=_9\-=TZ<.4>;51cb6gPO];\ZR)nPF5=0U@Yuqt;4qSC&A&k_-T0_HjbR/0MkpnOp/-(FZ&9UqXXseh=oL
%Bdj<^JDc)\W9VOFX]BG!5QrNd@\(@DEgb8*^K.HDf.#DGe3:SLf3jUmDg;LV45n/'%0Xi8fhWO.^N-VX)kfE(S8D!s9,]GN-/#HR
%fN`rp;10<[3k8GSV]6)@53Z(*e$I'2ZJ[R.$YV+r[:(%5,+1@6q[pS-Ue*68M`)R;*f'<2e1-hN^]$?84T<5QAe]JQ)D#E<"4#Ks
%i7dSRr)ESVgu5`mi1g*U4`n`8Q)kR?NgUq_S'sr_Uc>M*E"3\Yrm@hfI#'PY't$u@IVpqu5SmN]=s>SZ*0>Oik%KZ!L>a6*!PHkj
%"P<`3X!:kQ]TIL:45e1EQ6l9JJTTs[*)!8(bh'bUW[alRO?19js&]t5^^ZB[7Slf@0eG5741S*]dS<7<>CBuM.kN,pN/^,]R-</)
%p\5YF6JI[l#j`,P=9]*uM1_8]V\57V`.!$Hib$\!MFR_4't%;[cBRO1W5<61PM>F.L\L;A,OTAK=N12dN_Ps#Pt6NegWh@lGBfg!
%lp5/SSqG`lA*$_RI2+=-Z.N>c.5uX>6YhO7<$5a:QBTGpbD!qqY\G0C@Hb&GTiJ+D`'fjeC;h%BnCjnB7h'7^O6\GglJUEiIJn$<
%qLd+q@6#J0T`".hi]5deh,l)FF<31_c4EO7_,K`H(A5tooVGH+Gc];LYNYK1P%gXmKF-_+2f/[p`L*_06h$>K*I\A:F]54]126#Z
%Msk-GSk3h?89\@skQ@ZA]!8=">Z_F,$+^p9#'I?KCko:<*A49,P`#H^KUHCq(KNtfbRDHP8Vd`$Qk`*rrTPN[dcIiAAGVf`>fGmZ
%f#aLt@^H?2e#jBC@sIM!FPYXkN0d!OH_ak?ZZDAsDTfC)^%nH5G#'D%H5E]%)o`cfY,n@o3D'(/.FTQ/+g3,sW&il2UIT#UM2dO,
%#as^HEhe=sM1^)[C#\!4r",Y",QMW)$V)!hGP:uhQ-%q3P<l1(5J/6fbBR#HMGqnk<*(bj^"h-d"BX;K;h+48#")ST0XW12d,-FP
%D<TUD76q)VP-1N-R9FY/)O$tk$L'XuM'oVn_<ZAK&WgU$+JOuk9eN*qNS;%u@-"M>'4tJp4Ve>gZO`m7+oG!@EArWP26e:nic?A,
%<B&PVi^A?dV#C[E1i2+WYeKn:QK.T"0a^tE2:jcHTl;dSD@Q]pQ.'@"?`C=+1?'CLE#Mra_V]$+gG/I=aeRm-'ONun:nsn!b.DaK
%5Xgmq?1^UG/[]R0p$\*D4=h[SWMtT";oPIRZc<="EfAK7@HpU^::6S7"(?5T;&Cm0raG!-U$dpK0.B>O(6E'&P&B,=!esrTX@3D^
%d1U;PfM7a?IcA92q#f+p1+^EX#h5`D+0PQC-V-L*T>c=nWaKb[#+*=4X'2J@S=X3#Y_oui;]Z6fMfNY!Z?Ss$s5Z4HIpA;]DCUIj
%#C3j[K,IO'nonPa%-jh_9Ynto6k<Uf12GOi9oG"O99TL*k34*KSE0(gG%*,6*j)iH$<!AsS%klpP-99^2lOe_,Z37c"r4\smI/r5
%R)!ho\.B)RS$sK:4X32H'GkZ[BLgIJX_aN.@,jmH[WM4S3dZcs^E6F@PlL)He,rM#n;YKVl?^ENi^kgEoi;bi$[-.l^mK#($)8fE
%)Ck2adJTiua5ln*F'H^9N&pfYQMb,ffLo9)YUG;7jQ"CZ+I0fMRAa=KK/=,a^C@ACmVPAcG+"okOs,mP@>e7M;=[V(5Ie.?,'[nT
%/1j$2G><s6hJ74jBuK<l)XJ7,]r>?TVe)4d]>6<9r):`_<e@Vhh$!]*q5RAc.d9N!b7,YR)YmJa!NQ=r@p8\DWEB,(>%o*o$<R[U
%Ts?Q,AZ-oM>KSP]?F(t'4buOJO.#)Zaa?<S'q_)_:.k,f<t;C<-Q%>$CQKV_9MPkJ8Vnl[TY;u-b<Dd+:H-gk__fi<F=uGEPmQr6
%2:#h1[h/TWfmbl?;LMCh+AC+/`A4P"#%3l-KSW^Y=ZX.3n8[nk_9/J0k'!f2XnG.Z2cC:8`Ja&>a*ej!E(o5O"_t#uD;>5_CT>%9
%rW\3orWdpb7i0,Vj_,$H4oT5t!/ZCWMN920a+`#80Nl7Rja_-fG*.jZ<,VRJq08db)B$:?'V6?cUi,R#m>)`n_*j9#A#27?_%;][
%i`.5VhEKNP'WZ2h2<p;KnX(/^g-%;;B9K`qbXlu[O)@Y@&Pj#<J/]#*:V:!o8Ar%rF^IHuRS0\oc?l,;&hjI=0#DP(#=e<tri4D5
%`_H$g'SdBGrSUuW%cOJNO\'#PFZ^$mi*r*1M-;&$L6RTD.JPnT1a,^)k/+,GiVFRa?*2@an>L,LRECYDNRk.?Un/r\i8HM7W'<f)
%N@U;2LI>;d%o9&',2&.l4.2+d.s"k:)93XfP\8]B5g2,%1JAL7H.jdCK0h*S=I]4$SJ.mZe,A]d"Po4cnG9K#g1u@[hHKa;C>8HX
%4Ti[rEX$-6Nd-Z>.<jj?%Uk-1p*6dMrjV?EXGftnG#W;?$XcjP&CB\)ccTDXU(-Tq]HWjW8,;FtJE1+-O70]K%NJd'5iX'>OO%Gd
%hOFC^)^qf]VE4@(8K#Upa9AH1DV,n42:X_X.@A:9LK(Vb]IF#6RX[5.:mF.A+;;->Vrr@ONpCj\(41hFXK#&6H\-`bH#q-(<F&'k
%@]8@E.lh1OlgT%TG)k4loGo0CJ"C:*fltsD^*iYu9XM<%lI9IX@"U\l<-PC#4cV`[d[F1@LY>:B[bi2u),Dqr"YKH`'rbEFmTS-^
%5-#54`b-X-%8A'AP+AU*47-oJ!gQ[Il(bSCBXS>CJcjC].GX>f4*^"hW,$0d*He*VXn(2o@A6r-3_[Ca!=>Yj;C<,"%jG`q?ub<b
%27DGA#@)_<dtT('""JsG3Wo?:EeT1Ya7knON_jn:W1Y]D+g\+F=Mu``bjQ#<DcQaGq%B`h(.&(cD@3LE]ptu^:716fV__''%Whs<
%!-[8SY?Y1+Zle1PVS6U\rX1*7Hu>"$LLKi'Q0>3p-<Ou&_pCl^V=S\m(A_-QQ/rR/K5;H%l3De&Kr%U2=;ggS+!:"mZ8DM`P*<[b
%Mlg4jVS]JZe4U[Z/s0(nVXF+6@#Lg5oGDep06NQE@<lD?/CUs&d?ko9']::E93@cK<9?toW8;gIL!7'Vp%Bt\4a8H!d-R4j7<g]h
%h;*@0_&7ee*8W(%Y5-9B3k[2]WFhWWUECO-%jL5,QuYhg%3XJ@E6Mq=TBIi$Zaq4Rb?RUJKiKuk?0(\LhOE)F[5dTdMs,Rh1s;,B
%>MRd@%5W?EX:tr+k,g6$eYO40M8cO8[k\3q4^Juh$ZbU]F5bgdjOXhhqb;2r($[B4<SbM*OFVJF,V@2.;4YADk,)XFl5D!BYm):D
%RG\f#./lbWP"1=]C/M0*WHQ%C%Pa)J(aXrUnQ;k]'i:sN>SCn!dBMW9rcO\ZqWsl`jU)@Kp^WK%qPe/;bu>Ib51.<fT-+'/8>T'b
%Gc6T;\FnXuLa.5>Rf8nIUS'Q)SB1BW(U>(-:i2a%oq!dFrVYnOm9uc+Q63XN=+t,8nROm[\@OCR-JMPBNn7Z*CW,#WMM<MfF`8lh
%%s=q[Cpeei4;lG^eZ0.p*>>\Z2?bURGs/5QmCH=dJ1i#JF1ZF0=4Y(?_@=\917[Xcg,u`4+`F0Q$@AIt?0S.]5@4>T7EHBI$)8"A
%c`k#%^s&#H,34q01N#>"%V8J:&rL;uARTJ+jk%F:)TUZJ2\'BcZ0VcXlTOcD8WHLL8;h-edW;\K+-pO\.RT%\@(tW;]Ze[/&N=_u
%?\*)_e\'oqC?%FA<CerbclsIM20qR6OZ2uMP@S:lk,GU"B&7#L>Yds>kH7gjcu[^t!sG:^N0+*(?hPmsa"YdqNh:75Q=\^C,hq\r
%l6\M<O:g#kA?^e^?WqOuLl\Y\DmG!#-Quc=!PPaC!"Rj8#d'Z-X2u:J'd@@jaK&6go@Ym^0_1KeSO%H\Z$@bl$fmH0Bk4!F18@$.
%ZL)/Hm>NYp$Z[Hs6I>]Gk*=blA1NIW\;0K7OK8Ad\5$LP(b^d[X=bG^R"F?1ki748/Amd"'<3FTr(^hR83Z=Z)nbUrIh@:TP?F\u
%->q$-<P#R$rRNjN0\_4\,#:)SI#ugTAc>2%App3'giX]h.H/o/MQB&uot1_!Z6XBA.GKGq5sm;?NW@auZnu3aJ+MOs)VsVsp;,T-
%U)R*+L!gVWY/;>1KWua4'h8B#XDOl\O6^[s8-=%TUipEp/"IHt"e>l:eQ'MjK5EK\::H&5@-7Qh9,K.sUDf9C]jbDd\uaWfKN#@W
%-S5,*h%6'\=U%$WCDr[6EOZ2.fR8E9h-JoH`$FR$>"><]4+6:ep-d_==p0<e]oIY+c8Q@ukdRbc[jb>D<5Yk^$\ZFB^P=_sBMLO9
%K4`s]4^)n<$Z7!@aA<6BiI'$q`H,O0OHC"W%\6sN/TO*m+"?6M<S8c_F^Iblmn>$e8=ZYJGGJfSjd=d?%D9pc*SA<]TF\?,1%\:a
%`"SL<0@EYP&%^8NbPXq&9o[&VjLoEX`Z&ck/`.,lZ=6<_Us"@o7[A_g8'"@o3Yj5##V5TF7=D7,$'';[<tol(L(RBe[<V+52R5gM
%bZJm^!Za5NR;Z%18qY9\/J25-;pbMe@oHmka2l=P]V*hG!&H,WqPdn(qXC(S%&;%uY<^k-&VcYS\g^AYe3J+cNq<=-&f,@?_[B8h
%2DQicrcN"i%`L[\o@.7WR+GXDM"dse4Ec)!==_0c2bPWUa4Y4;eMdWmNBY>N0L.PYL\rS_r?1sBXTKH,r\1X[Bk'$X_R8tZS_Vg(
%p<$^]NJ41f6ZjP(j^9s__G5sK@@jMFXV_@NMeGs;m\botclO`?.*3p*QB&j*<d)VGY%U$"]9.<^[HR,=>hG$3&1VR&WG!C;Maiap
%#8!E'^&Is"ML'=L7Z+i%Wf^h^+*mX[P8qodY7@^..InoD;jX!,coB@m3f\HM,euMr7WtIr,??bK$kMJXl7e"p.>@*W,=6EaAmFg%
%)l2)sZ1q1kdnHK(@co_(;U&kV;''+iY_.5;ll:^<DQ>,P<@'BZ2Ke)8oG>bhL?&UT/6p4!fuU%8fQjBdGb`pp[RH(>SQL:'fYkYd
%+(&W)K8`_M+6MKm3^jL$kK\aODa?_Z;`[2WkDVWl=gt(hVte$)1CQR0SY$>%2W<Eck?)Nt"_i3eP6D3TU*!0GN5IJ)Ff11(EDeDE
%[JK`JqHFcE*/'."'OLoMHuY.U(j8QO^8Pac70\[pk%.aR1=AE<qX8T+:f&)"e@R'lf4Pl`JtBG=fu8Xb:nVSpLK-g]Lu0:Lc%cJ>
%4_+B2a#0k<`fimJ\FTBf"#]YK`_C$[BRJgC9gZm1QKg+U$)h+,g=Le.oVUg(bU<V?p6Jp_s(P`,o\2[.F0+`%7`l]qLhlVB7q?Fu
%fsf:h0>T'"Z/HmX$/qK7!ZT'U37aT5_<P;_qN>U,R=Ykmk61!A(,(l9l65/:+u)hcL,mVWj0'IEIA(%A?Ap*D`^gaZ>P.2hj@0J$
%-#IDq12ug4^e+R<NFEuWW'I93Qb$+LlL[_\P+SMRX:Q/PIh[b0=?*F;fSKmmMq.ENW>\)Oerdb,=Hfi;b/FKa;SF#8Q2Ir9)Jrr=
%qFgnSIb3ii4XJ4`M`!m=kf/8:WT@q0Zaa&uHMm?BQOcRN.9.J3`^bFJ"-#*63K<!Jj1Pd\[Gjj^!K0-Jc&F`+oW3*RbhQSun,DU1
%</e%PI_Ia.Bcsl4A#6nNn(+UZ>18%$'=gg]3+mH@+[,n]A5B(m7eeI_`jqOI5KkK\,*eS-b+d6Ui:[HYB3M<NZ?WP:fs%8#aJg5%
%kj##A[\[.WY^)oYZ=r4kFX+NSiYf\c"/;-(P[&2OXYZb5-b8"<d^>Tp>P'u)cH'[WrWd:3E!F:H/kiZLV)fZ#&4V@o<O$@a5\hrj
%AMD5*T4$kj8N1le)645(aQ+FL]pX@&Q6l/g"3JNY^R>"h-BkBl-TM%CjqA2gCL[uZ/.#QJ<C3*O@#m.;"Sd#?5kV;G10H6%Tr6gi
%KJ+80F@i2qR9":*+[!.i%o(t=EkCbBUI3/kEY:naqiXPYih4gc8^f+j^7)erQ?Eh[<IYEnDp=eXMdUedka&>>ER%)3%%e:*M!]NY
%TmL!>C@[r":3Aaep7t<nCKPuEH+*N`ce+-+B^rrS6jL_=e:uQr;8]?+<\I_E"eel6C"YA?S+?h-.a[`$Y9JCKJdDI0Z[s-:UK#<7
%cUXaPa:3"BQtn+mKMsVIYTo[02U7=*!]g,T/M3E0IHHO8B0?#JM.JNA\K[,c8mn\;qerf!KXRD`iF&Z>1q>KBK,l?r\5KI]@b%#M
%#_>@'l!0]jd\r>$.mBdloHE8WPBK-(:a=fg[!;:_Y@2@t`$9rF=Ba5!4G+7(+t@HIN,O>SgG'Jt$).<j+e)6I`u*8Q./i$BpU%A6
%`GCCBKTSLV8457Tl\0FGj\U#p6)[':/'!,UZ4R8:Q/^u4ohu`NQg>ZNDkr3C.l&B?FBLtd'9q!hC:sA"_/GGmM%J8k@_&Y8eW-9-
%+=">Yo%_<M7HhtJ+lA5XnPbS-S@84&;8lX7.I$g6<Pk4EIUpIV[&\]3WnFY-FW&plA+_Ro[7#HUX&$c=1h#OTVO`'?D/7\:DmA/j
%FEVH1@g:4G!Rnk;e4XgXZA&`eA._U$@]mt4#]if$8JP/umR#aCWhFCjdqs#p9kC.:YYJ.0&ft4gp%NC.(h7l@;.e2uf.D;g.)(QJ
%EM\,#Yh'l@k_KO4#MWn$:0$[A4]QiDVhIu<hC^+ERBq?m?jda:ZYJdl9ntd7)N/Lgb8.Up\5>K@9aVu^Ok$bBJ,bFb'5-_aURq+*
%;1V7l8+W]ZQ7?l[Bj8@s9^jm\Ghpq4[epmlQNjd$p,k::mc401\o5ZTLBW:5J^j%pfXXeeb6KsP:9ub@0ddpWkB+QlZ4Gr_T!N#L
%\u&H+&kAupO1P0*<db\DSJ"CE@q`n&I`3Y;p\(S,[HdiPJN],5Tpbt7I<^"</nBeE@6S814`Wd"-#'W,n3-3Q4Y3BrjCi*"lWQ8N
%Ei#^b9kA=9dM)>TVpmW.E>C?WB]HCFFBOp<YQM)"KtR#5le8C.7k['J(*>_r;mGMhA8qkhIHH08]5Qa3`uIp,MU:g[brDWo4<dL4
%1a7k5r@.P@Ka_a:bn9H?]+c=P6XsIKpH"WkVE1KmNJ;eFPdE=>%'_:Oo2(]^M1`T>j>Eq05##`gZn%*(3!%3l)nm5IJ)Ao'L.YoP
%"u1]<h3(WP:J4dI52KGT7Q75.PW<)cA.)G&:d:nb$^%eF$9OTl"JDme_7U\mYSkHgCrA_I$1+'&%`-au!\Y=k*d#$o54D<LU:V['
%JW-InD\!M`K%cL^_agtMbV$RbpSFfAVnl6;"[m+PKu,p+1e4g)qWclX/eA0V6G#=H\4)6O,A&\$5EIL_T=lP[b:Li"%@AZSAml>\
%j-VnafJ$YmJ?*f8os3u?:TOZbQ`k0oShL5qV$aL@M.[^PdWJ<tc&a5N\<Z_ZqYnPb.GHCY!gIoi\W0b!RNmGO<^(29LW0q)fH!rH
%Qq5ck4a/s,l+!KNa!uh?*6@g'Rde_h&j[LpVEb26NCC?mIMbuHKFI9Cgo5;oO^L,=ad10=[a/&<EC;?p<gRT(-g5%RgBp6OJ.0Ss
%K3/QuJ\+`Od>^od*`Y!?H63[<cDB$o>DfR\0Q@L7S^!uqNMDrVc6\h=++'!J'(Zs"!7FI,6.9Hs</mdid&'#de^]i_B-b3#4bPp0
%:\LDN<=uiE)\c^:??r=P>Kn3;C+^Xr48]9rAWWI$\VsOF,GMb&mT'32`RP:\_mm;,l-]7lh2MJiB`C&g$GT)TN"<))j=[(,_PgLt
%=9=\QBck!Ob&$U5L+Ta2@[#^I%c(e"NNh=Yg3)$!mEQ/L6;;r9/?Ie?M*P`2,`3W:Sqf66`bcskOMc)K@6js9,`+PVhXa52PuW\1
%R3Vq1DuGn?bg'BBC3,j@/C?t><0MX7ef'bK=f/3,6Od6MWC]JK@9"LL1o@L&K%dQFNG1aNdjVV<Y'*\oY8!Ba,]_h&/V=Ut7Y^pS
%k'ODE#>1JCE*CD47c?c685a[a\\:R8/^Bd>1Q%6#8H*/3'3t)c6VCC7&\$X&1&;0]TCbpMZ:9r[e"_f7,gu5b?a]<fq3h13#_jgI
%<4>mQ"&rA2>J5=]IP`2jgC/5NWuZ%4#X'dha,[\d#$#C(kR_lXUYS$m`27K0LpedPnatNdggci#+`1+o[u=BZ@!2)k/K^LDTFKSG
%1E'%/O\\ghZmBH&8s&H5CCkD`e:)Vakl0]_*Oa#%Uf)!,g<jJ8dA_:@RAbB#1=AEQG#gQqjNWV31)oK*q\?:GnU'ecd>bV/$O2O[
%#:m>?cpni^]Iam>D0-W6mAApR7]lR2KJbI#6^e:<%i1)e>.?3=b&f+o3gJ>l8**3Wh3X2!;t(p_*.hQq_88)Vpr@X$\8S$dX-6t6
%e0@C,8m)\[(e^%,2?ss?c.H2I=cQ;lQXr>S=h:c]/a;rkQOX0;Xftl.#%/Sg:>XX7Lr57:^A(J?_6tNdW8CoJd0.>g?Y36GZ<LuY
%'Wb,MT4TcFRl9_nNJW/P8<dnS[#bP2nqZ5l>:EW0/UgW:Vt.b]4_;]J;;&*UO"Cu=U6/5<b_BBO%tk//qU)CD5-<l#,,&GY^gaE0
%20M>1T(LF8o^Je+Ta3A>Me%dU:d(Ui7`t92MP508iI23[\B.:4bku`O]97iT76VPqi`HqU>)3"me&$L[r/!)_bjl-\h@IOi7Ft6A
%kDU-co!4_6k4/=5O@ePUO%6FC7nFl0cik=eTt\M<l(`#o-`9'qB"`NNrD#C"I72_$-oPJbNSs'6/A/1"`W>Ve1d=b$/:"PL:!<0s
%1%L*/KC>U?#Re0t_nnZTk>-6D"2P031,:riMLqctkp+G2l*RfOn'9j9>C&2`.H.WbB*"%9J4cnQ8\<n([XRbWWGY1"W#0!kGZ%Bi
%0%$\$8^A2ni'XQQYr[BYgg(_M_:H$rDk5MP8V)<JX:0k]jd5/7;lQ&1]i%+b1\\21qDcKB;98\UHc[jNECm>+RZBMY77I#AQg(?9
%6IKTAQe6Y</J"V(Pb^1gXB+_(Uq)I&6*:^ej%=BARNEe-@oV>Zs4Xn<kJ)1%m=N7.i6MWM#1ANqr7@9/8l9ik9W<nq6^'gRGZ,J=
%1?:O]8HBO)l$*<KesLnFZ1S33MY=^T]mKa%j4<2$>*(gXMD`XGnO1i]N+l-o&P)OmHku9_r:(%mGM]:%\TCB'ULNf>19YSMjOh]E
%;sKOshioa<WWq).<1>kA!KMTU-&-:Pp"32_\fXOZIOn2bc0i^2T6HgG6d[h9@B8Q2,<+^@ZMn@='Y4V%K@"rQGH`.Z@gUFr2C7t<
%H8]QeZ";_h0sG@+''I.JbLp*j+D_4Z+H'_t],81^1YY`.ZrmWk^]_kt2Z`i,5@8R2*6G6fDu,W*`DesJ@uR@3g[+W7/qbcKTmTqT
%6D4g*S.ZSminKUP$WRkr\30p!3L!CPWVPcn*S+`8jD;rl^21'2-et^+B-DgI74&VPUJ'JfSgQJmVO%$Gi#Et9*C6=-MdpPNhhu!_
%n5@(?#]aN^:/*t'4Se]p0Qrpt/3&YEK"LiLKd;J@OY;I)B;Q+4@',MLH6pgV8=JNU7Z+4c!SL*8dLUsWllA-Co<O`^Sb#PgZ*\Je
%WW2g;=ir-o-Ml_0Tc^19[8U/T(26C>R_So<a:"<&;$=u)R1DFU(bBule@_pW+W2$FAm1FebZcisd[)_oFAQKZdSSU_NT[K^?Dbt3
%/J`YtKhb_Z#L?sQ!(U&CO#oRdJC)Ytf,N=pq-iV>2kRG[^4+k"3jlki7Bp,h7\l2C%?a$Q6K-SrfOqks>d'*IYN"\co4)ti+9%C"
%n'i0a_NNfXi7Y8U8t)6;Al1IBEH0OC[;>rA1DkD'kC^H\C"BYJ[,U"T,H'Yih\K^W8nuu/UCt7SZWa16d7bV]7QF+jD_!?FHF-Dl
%]LF4:5$f!?)N&*FX+3D2j=1/enN7]9#9:`DL#X9@V"mDr5Z=7[Y$o_NpC."^N)4UXQq]dlLi3j96N059n[qba-%(c7[E.\?J.]O4
%G,OGh"j5CK=mf6q+"U5XGf:PF%N"*29(G]RlT&.KdkE&=8Jp.K:4Oniis&Q.gteeH;n=.i'@_ejbnb\ZTjai;2;YN?h4Tt@jW@/#
%+.G<J-ntUIfte%>Zl6;.kCU_hV[aD]%VE0dIkN?8KuHA,bO]lWq*ZHQemcaAXnT[a.]srVB.p7:0`pCF4[,!\)7TGRES2U!U0=9G
%F=IHp?]%.9OQ'C.)J\>tIRR>'Pa]m<;(d5!\!fd$/Gp(Zh?Mgk*^G3mV;TbE"&/nQi<\L,#JfV35(smFs8.:UYDLX#1I^RW--NZB
%/K4VNiSMn)$-Rf"F3Ru9:6W'X0%3pd2h(H#0jXqj4?p[.a8?5e(\Y\\8ke(^$@!/Frr+$d_Z/f&s/Z.sYKsDZUZC%ij;rPl4D>XX
%MX:l9,T*al+A+J%iS<hV8K/NB@i\P]=u[tCIVDo2Bf'>KS%C[F`dom:1WdJR63\J:VCbt8%uPN!Z;#!JrWAqUeNV[/hi9-,j49-d
%5:HjpXbmuhRVH0W*;Wd'G43/u;B5:nNiSdi-LeN=dS$Yarb?<ps&do)!pqi$GcU?S@:XHn`iI:Y96;$b2=gseU2M-[?Ru#:mC_Pp
%fIp#fc.[V@h]4AkZ1e[FF)i6Q4%>^o0L$<oe)TgfoA:2K3/hsPrDJ"t/CI<,korU#gS,ThIrqqR6HENm_BcFpkjpJA3O`,GNJHss
%FDmep.NgK0C07c8<6[a29C?Fu-[^:,q%m8:rSG0lpC7)AhQ#IPB-eAb?MRGCIGLq;&b.1:TN+#F*9*%[j(J&spS@!>1&Uff4f8[3
%LNjJlh9!TE2Zi(3<)f%H"uL`Z9V(n,2<qg+T6GDDEYM'9e%<1!4p/r,*7j<H,#P79G9-$k,H6p$Whl=+E7?W;N)b171AD*L[PDZW
%$r'jrUl/B-DFk"6,bWbuo.`C?Cu<FJhdU0"DtW8agG/!XY,K5T#FrNZCLCV(NsB&P&L4<>&Y?>^(s22j)gOZV)Sk?.dG2(_%9.rL
%kc/(/[ADM1#j;rA\^EH_fkfO]H+K1hm4nTdT`]tsk=aTX;@9GtH1IE_S[BE\"=&Y?qEPUX5VhtG/]3t/C?l;e[8q?H`n8N-%H0kg
%B7j1A_HlE?U(Acd6UVq<YpR^SM)7S]me:9J,uF(^PJFa<HQrA_JDJWe@GsnPP<6?Ur5/GKqPG@X:<ULb./?T@b/Z7'R^854kD)UO
%e6FubQIe(/o4@!i8nVMC/3>FX2l:oW+`C/X.F1L.:W&</6(I&0-]D6iLQmuWheVm$S;S/"#]Uj9+#N5/gfJLGnT+1j2G#D`Z<f7N
%/B?cS5I5B6h49V"IJcATKot>6(q6-Efb.-NYa"%R-*6:e-c>BJj%MeYri7XKj*U;eHe:J*c`<\,\\*_YJ5=;1n47o>AqM#Ji=JUV
%RM_IQ7!_OM9M"bu@JVEpM%@sfk<Cku<8i^[)keef4"\2:39m@Q(<J18aS5Xj#OEc:im`rhVm+fM0GM"KDdK`0j!CRX91b*;B0F!=
%c?3h0dr!GedUP/Zgm`VXLKNsM7"<rG58Jaep]_q:)'u3Y*kJV'MqQkp,>`73hHW(;&Ie<t*>=Bn>X.'a!a7U!XraO9nA]47p9*EF
%0T-Dl".#4AMAnZI[A%Eg_V'q6iX;&>*"h1LQB0sf7ALlpkb[gTX^.1NZ!ida-`Jm"(N42n)jbF1"AsAVHj7VI`N\B"O+[$q#;g1U
%9u-!WL6ap^S;t6Ok`Bgu-8FZ#O<7RKT04B!dOuo_<>[U,-FLqO2ccLeK<Xgsdejo&?4NRO=ut/!Eq.PY"PJFbbkL47K4OW[(9K?8
%$G`Bsd?jG.0^?#"Gs#k&b+3Qd,O+N@2"bh&*A'dcZYDCm=.>MsY@CD4*DThA3JLCh*U4Vafi!PK,!ScWQ9)+L38&gbU9clMnM)WW
%Y+l[ODd?XeQA%uL$I*j!.:0=mI:?Imqi1=(o&"/?Go;W:cFHdW2]RHno@Dai+)=q^AL")ujBYuM+ZB9-X[Y+\\G&sgm1b56Z_I0&
%H5RYY'A@[(.l$\@fi0q,po\%>Ug[p&X]0hIE$Be*]MB78_Om*-mH$]9J4N%HD6uHr%r4,1XW-1;*+#-G?j)D+"TKT*qK8UV"QEr1
%(hjJW)CE:XOU=t^CN`YRpZNi0C&t#HmEUM-(?8m5P^BoPZ0C\`BKSc'\<!.:'W=HfOguY.7`2WO)l%/t"%:4%;b1e`86160GR;E^
%kCaX-T@a<-IYV^?K9!st/gfNO2(-k7k_*M^i$mB2^US.F,QFK&`C@/;B3$2*Y&Ru7:7OTb>;olDer;$cb]q6N:PcI<)Eehh>eQaj
%ak.I;T(2qBE)<*lCCmFF[$)q3onl)sGh[h03&k$_bJG2e&,<`;HdY=QRpT#P!d<TaJo#^4dAc/<MEK3.2(_#eLlmfh?KI^Tcq10H
%]j[iG0l1pa`e.=6/G&p5VCuR+@-MraWVL&9nhLZ%7:$f9R[_XaK@[]'@31B`V_LADRC_p6)4q5ublOVP>IOk@/OKbqI+7\VQZ=4Q
%>3F2$3[o!bo";=orcHZuFU4P'SI6gA6\"SX[,As/?f_W$2KLnj=,Pfg5HEE*BN_+H0&K1D?W,loGi)!p68<J;Sjq*XrgnD^5QC0l
%R6FpC!Niu(nFbE%N;CDLH_j,+$M"NjOc1RYO"EXhF!k]lerg)PL9I%BSQ"?[KK53eV4@9?-W52om<A;U^`lWLj9D'D'Gf]RDfIG*
%ngJV&Ff&[NAAk\GRE.J0#ei(g(p3F#W,63aWiJscUgq)UYCf84Rb5qcqBPckl*'tNr^=A<:Q^l,inti8!tAB-MKNPlZQW6aHbF/P
%d1\^R7nT<G<(DjT'XVDG65.+EjOrJE0u^s1&(,.k5o!]b]=%-_f9Tm(I]?M/"NG$5dI6ft=2;ZOAeD<O)nN75Kj0Q,[Xc>)PTS+>
%5L3AV%.NSaH1_DX&6L9=ZGDCPZ$W\RZiP,S:gjnXLs;(S]/obBAqC,S2D)'X9#p@clB!c5SAT7e'[U1%?#6\U0?9CBL?',/Yunf\
%&oVDcE%.*6<0Al'*?llV-!cVVMp^een'90eD!T,1E3neA\9r'8IJX[@KFl0Bq<&T&#(^aN>ee/I'_9.s02dM=FB@:+X=keLosmbN
%k7[a,lEB-(&t=PW0UrLY7U?>+I2R,<9^@IbUuo']]Eg*C36<3N(qYd^2^W>CYu+_^TusmW\!9c)C5IY`qV`6M0HKGY[]#?2OgIEf
%8l!BO:"/\hTT4X*Y8P5@85CkKNhnkC,V_L[5EGrfGRN[jZ$5srl7lmP@bd&>+D$gk/pY^L>>(>QW+7gc`@=iMdX.k_#'-]E]M[UL
%8QhZ5KEi91dA#4nd8q[X%@7-"JEIC\Q@?pn`W2R.P70gG`l0Yi2!&1bWn0JBMac?.9]soT^('D_12?g!QdM.rmmFls+1Pa"Uk_h*
%7<'HddU'YKQBD/dkEBY$mAb),[+PL9Hte`&peLWqS3reE43Ii2_$0T<4%qa33le1fE+&se?2_K1Ya'c&8dfcdMm7bP@lFt?fXK,e
%!m>&oZ"-s^ar;P-!nsQq?YDeeQbhMq?Ge^YV8E2q&)P.!4rt9o@_eB3f74U=R;$;"Cnj+pPd]S.U.BD:,;c-rqIIV]@2/ETi<W\*
%JJX>LXe.X,%<cgHg%bS[fe:O`]!:YkbCj"H7iD0h6NSk=MaDs@plFJ#R`<U!chYhk>YKk53<I^nZHLGFrO.[]Z8bQrF?,<[khsp1
%Laip/cbj3bMG/(T`HGd:?.1HC)igGY6L-tVCkR0WroYsQ9;'pno>Frq"[E_@#u&$UYh@235,[")$&"mmlW2,H*QQScI%rjg3Q@Id
%XmREG)H`lb/iq>0m/BH92BN$`7hf"9s!$Ik]+Y"*W:pe)HQ#0`3_I8h.tcPQk3G"8R,ecfIiJE-hY"@1gB^?kF2$DQ8j,-fi?Lj8
%)E])7<p!\+^<fi..n>%L%;$FXN4_bZ/+t+41@i>'?&b:c\[%J3X>t8K;)I"J)6r"ZJkTYFnr>pOCf>Y]WRThsTS^#si(]k/@E76g
%`Xi8$\`9UC.T)u-,BOCe4RM7iqk1(2^2W(uHFc6fdep6EHM2L"TdG4p/L$=H++2N1+=MA>DF:$<MtH&6nfOB:4QjddQZJ^^(t7#d
%GkbAj@p0>o0`*R6(;\nWLsEq@++iOhk,Ou0G`/dS+Q)[SGg^.seoOtOY^_:do)Io/`Fg,oI5'J,Lti]M)WlM,059?g^<gaK"[oZ[
%31($('c-1L,LrU,W95)[%2h6sF-te]'s,2$S"0\3)*@S&&9c$F>rUqg8.L/EQpUsf,McE7ik4g'Fu;%eD*<2>>kE'CAf)7#2[5*.
%TULE38'n!=J_$Ed8b>"CBDd2FZa#[%.@s&;\kG#jPFE--n/Ej'^\Wc<M!'r'&S%@o0MpXF,f?qW3!gd<SSF;tBUB;1-Sds7Q4YAc
%NWfiYadPG[k%;kH7_;]#^C,tLJ5I?qbK(d7em$cP@#Tg[c7Xr??QMnYde:l$)q?&*]$)ier"KV3q<b:q?smoH+sU.s#N@FE18as;
%b/m?*a@IM6W).'i];ReB/5l7*WU:BL<arrcTWD8I5-B5!)Z^]Z=P#+$80hB;TjcXX7UXT[Z>;3,le&b+l%d-$8fE'HA2k4E6N'qc
%^\!CWYBtVXfQ`A'cn8443NAQ>Uc9d,Dr+Ue0*9%\qb^IU/\5OrUcs`#0B7L?/<igLmP*-IfR;<b"CItX6H,*0Ha0Oq8iLP!/H9H,
%^@V*BB)]MZR)OD<=a;?NMX/Ak6Vs#@5`?/tl+tNSrM\#,hIVi7eJ+->3GaZQAan[1Bi_]4<Or*Pg"H2jMs7<nP]V>'KgabW(]Fbc
%)+"q`PR,1_)%;GY>8S[N^$1_)<pOHcC*K%>M_2hDht1+X*WRU=@57.DQQG+[s5M6Id,T\/DA\61<8g%)C4=UKZ!+c7r*i\"!%\TA
%0Kb>4@^)@YW\0B'6&cI^RD0bkMqGJt(b"(o=Yer9h6Ra*ar!>SoYD^]ZRCN!$M99N"]qa;L3i[2U"(,`G8oXUG.l7<<1cpU1thaG
%$6!.3HWp]8!R4U,GGY(J*;h'C)'=RC.^HTN$[XZG4Ru()8(:_N+UE[P_)-*,V*kfS0`5*#`O=b>nu,C7rt$#&DWd+4CRhe1ZEN:O
%\`L=DC\EDO&T^Y9;ZOR<p\^8E!k?.-kSSY_SL*GiTqFb@dJEY"(qi/83RnIt,,;_F-R><"mPBqQ*i^U+J[q(CKq>Feo;Y@=GPNdn
%&9mn5\b+1b0>J4Vo4SI^@I<j.Pi:f'NS%5P?d0KM5m_h3:1'b4?e.,nmuO;#dciA=`PAFYmqlT2f%Vqd)sNgK<6K0),Dj7>38-le
%/-[\sLS:@g3LjtPi]Cg#@;3db'a3:C>+C@uTSW?am(fUE5Bn_!.CILLjUn2Kl2.DP'T+_6rk`omT_Li#3e\8qeWXlT][-5<X,Q[N
%UT9`6Q;5Wi08n.">#BR5<Qa=qZ+7k?V#%'Z%kqV>%u5Z@XDM`fMlnBL%^mX<dW!Ws7_qao8B[^Gd\G9n_>u!G\E>3rHrsQUE#8q$
%79WYS`6i\fAWmKt@\fIoGVRkRL-[?">J`1rR=IT"Jp\\N3figZ?Uj&^2^f?DhE[M_mX?Ft#Re)lPFBfR\LSkNEQ<!a/aFsAE#(/D
%!gVA1]b0G$,aQ.PCG7QZFehEYS!5N^gKV?Y=[$#N^4'Fhcq#NQ\rRpf$4=dl2#HThk+h.,C9d:BQ.\<YX?LujWuWm'91fX$=FT+r
%6Qb_)Mk*f8h,W&FQ:niL`9sme=Qb#X?os6k1(lY*TiM.d:j!6oYBWc9)3%&K_H9fd-Rm/+\Kt]4I]arRNm*c!at*#U!='0K:u/uj
%'[MM)Yp9rLX/V7RR&pOr'J@U_2V*sOC+aO%]:W!3G8o6AbBuYr@9Hsa7L6tn2ma/b7cb(rKSI+&hM*pTF;ED]oDD$4p*R/oQ:unT
%1h-+t:H%U&$#Sa1oV8GaO.ehMcHsRlL"\9gD1ol98jaPi_(i=%SpQ\blW0kaA'XPi7e/"9T*O(@lD-AGOdb&%g%@d*[Fi?,BVS"=
%+(um4Wt\/PZk9Z9o*oPiKt4PKB/n5jgX&F:/sSB&&XK;!fp]AE^=3u]K'sT2#YW/1/SHC.@/kg:nk%`c7M%Ng5nCrOLuaNpT_3\6
%T'aJf(*%L9A7PPf#J?HK_Me=aM/7hr3d1YSkt*u8hnNLE7Ms/bg.:bCnaf!b@B!V\7ds^WoD=MXiCIW,/EI8n#aP1Y#IDjU63q'?
%lP\;FZc"c=38W:WO@/Co[LnhrKl)KhrHr)o@4?,2,DbnioLNdCW2A\rgBagYrPgbH:_9X6fLA\3iTHOre/U-M,jtfhrA/BeMEqgK
%L,OXCMHEs'XiSAU@8>Ohbg8iWrcgdL_);!kr`TS5=<BmL.<G6<2WAT-(UOboFla'Lj:K&!NLp_Co#,0S,6kQgToF;4S0&/VX=)YN
%^S$SZ<)/X12H$"3%;gK,`?qr(PbI7LD63VLB/[+/Um:fbg'BF[[9h5")G4Q#%;c5NBDI-;;Sc;HDeVt4DiALchW909NP((hV1^a)
%U@RJ52M*j;4\Oq!%f'7t6\gNoK<L6I$MftAEZgpo7Msl!fna(/De('r\%e#a:r#23A0^<Njr<!07pfWE7MtG1fa&YLeUJWN,FMQH
%OH&<*I3T]IUH78Q7Z`b`04Z:kfR+n_q/,!07`_H=)9[u1HW#2CToC1`7UU"F@g,NU(UOcD5T:,K"HiA&6Q9n<pTGC?nTA"/UhNIr
%/m\VLj5g['aNO;'K5H9QbG*>1<]7"[<1@b:#Y]%Z%-rmiUa6D<dL;2YoYrf;o#<T9nqCqVnVqC=A\>:-[(NW&q*)^K`jBht)]t!8
%pcP`!EM(5(_GJbCj_(4]&IhTjZ+hH>Fc3+C+c<_d`ftao/pdloVBAE1d_IPa5nrX&WXToBpmH&ZFqUR+)//A<cUirU1d\GOd21Mr
%N)52K<W>B6VKRA3'L;cPIU:']?jYUq#Xr\4O#KCfFMDaI,(u6)(IA_N]'#&LXJ(Q^hZuYQee^[Cj(oL_P7`\:++5@J+U1-E&;o*m
%J57mdnaf[o>Ve\Y>JpA*."YO*]Fg$Glha."Jq*aOJ)?L8Y5E\m'Oeg4f*FfKIRbeQ[pd#`MVuN^DhOkXX8`(`Ki"ke`jOY777\MC
%,pfDC+_KoU-W8"RkCG"tE8L(P=S<On&]XKu-dpGW/b9@A#giZb8kmUA_W>01"Aa^EK#dIbcX9S`+OQ%M9T?:,8o?8.UD#01B^<us
%:5")CI%qA@AASFuYus+1#WMJsSHpYs5iW;MK^?t]![pCs"pa*d9F7"^+EWLKI\KEL5b=Q61mO=3!u,OtR\$,VU.AFU08O'Hf$pBg
%;6F8F,J51Wd&Isj&B,PE4B2d!Cg2i]PYfjs4-L4E)]sk[/F/9m[,p2[?6I5=AbG`nkNBZ1664#d_`1(7k.G\kT?fP8<Z.e@/M%oV
%&uSi5(DP"O7>bclEJh!e0:X5FkD`Dnjm#<l]nA?7['>j3:g;1':(`@+jc*2lpkL*J@bI]Ze%T7Jco`gsR,Z/<rPO+]:Ed`WKIObn
%hCqB#p(pDb\fkgSd7b`)pB+?Ija=lYTe1;=Dq#=N2^C8q:1WVeN]e+I6lF>nh)5.o@#?h/[-e`(&XmQ+--D?9k:^8$n29;8V?is%
%Ko]Yj>M9leOiB=R&XNEN.FRbj;hT/'@>ac0%nr+7ndD<3Ng\Xh@>_;U2b]@V/71*MO)YMDBW7,J+Sb,N.FrV`TTilB+(H%9="m'V
%k5fF5?&R?Ig)!?nC,"h1;Z'Xq]Tt7j)D&:6%5pll&jAcL9DG8Y8hOP0+U+[R]]asV[_=JR&0I?*%n,ro58KHT-:AH8-3hs27;06W
%2aicpY)X2I`P/BV*i??O_Qjn_.U]:N.CJu]%\musg<-Ib[V&&:Zt(H;d\m_gX`)B208i3kp:g&UC`n]%KqJ/TpPfW`_8\ONY^nLr
%2`;553uMi`]PGi5bh,/t1SNN=6'*F0?k#HTp4WsW_$>qf@;I&;pt!Fhil:qN%>8`8Z%9.O2`;55nV%G5NC[uH4<&F.-;uRp4_tZ6
%"<_MNEjOk9D\4a6C`lM"?e@U_'-!;d_"ktSk(tOlJU!(FKaku<mM?RiYPn&X"#9;>3mO`PN(n"3&UZP2P9r37+850<?J%Ngq_pDE
%QN"l.<q&;&@09q+KrfPHeZI>(5&!RN4n'58T0hZ3`!093=MM+l'E\0K#/V57a4NY59G@'M*Q6fO?%Bit_K49+o3_[Zh9$ZUpp!qn
%4L'J4Yo#]8"6mqafYAE4grB:P],nENL'HXmRK,]fk+DO&##a"D%1P_0^YdC'>5I^75T53MW`EY!;WHs?rTaUr`!1c>lBO\KQV)[_
%%HL<5@0<b\!F]PU+CY\nK8^9;=9.IEND=^fYgWc[ZNr6Fl4P%,Q+!""3>i(N=c!Tp;I<l8&b7e(mX3dtA,U\WJM?T@Xf3g&<Ss]f
%Zu7;,N=CR+pj$?O&W6!0C`kPOmi*2OSOR.uN=Du*ZMHmP9#n1+A<ke48?VA>2Xp`^lWdV3ad)3V^JNfr:E"%:(OA<#G%$#s^`N8.
%1RI,pgYh?T[i699HY9E^/#8`V:m6d#\c59uU^VrXquX8Mq$/2TK\sF\Bj`jkft+#2W4k?#dQfI`H:n@Fm:`sc0G!+3G[hH"jnVtK
%"&WqL#9/g1_BKR:V1HA,\YXk]XBQSkMr1J]!U$b_SRQV:<+lC4a'[OcCptO.Q8T9h?.Z1foX^eND'4csifQ,1"\WhD,]+[4Hh;DI
%)jh(-3^-%QLiTH]ecoUP..i+uJ_:ArlrtEb9rEmVW=@(s$]`3Tf;\2d!S7Nr;sQG(Tf:)A7aOB,JM<Bo)[M@[rY1qi\Zhhh:[o7U
%XUTq0e:M\bH>*Iim'en"J,aSsJS9Z7Si3-?d]%_V1(\SHGP`@kTI`<V\WhZsANbLUptV2k&/GS8-k,_l]&mYl*?F/hG1$P?<S`uo
%&8cV/6s!7Saikgj!bH@1,=U-h?7&r#$3786(Pk]=i=T(4T<X,hBcr.-\YXk]9IVXUi>X]iIo4WZ=Rn$QoNK!_BcrB-Q3Oohd_I#a
%W&q6cfq?[#1_:>#I?$,qFaWdR)Mn8/"/$W&.s'HBU;h19l.;.(HH"rlbA"r,2`Hs"ogT8"Df&kdX7XsIAeZfpdKUVEG=igQ5_pRF
%&OFO7krff&7:J;8&!JJlkEE7*h@U!"R;63"ba("<T3jBOD=TX*7_Bt7^E=<tqX<mm4cI=1f$s4*#9*2UIu+8SAr<k3JJi$>?fJk[
%HITD`0RG\:cOgCoPc$\iS1@\*Pg!#FLnDO5OMl_'MP^l?F<tM(cGuh0`@.u-F,L-?c$kKOF8*@=L]augj#o,Oi]o=m11Z[+79/SV
%*13k\EP9>BcOd(Lnrc$f)^rGUl9L<(HE.-Vfe7JU[N^5S08S04:SEh1&=35l#A2n7DfoGWq.lR$qj/3dig2b]UL\6;]'T7Iq3D7t
%6QM5s4O?PhrK7EZckT.o#a"^`*XDc4QTWVs[]P$3Gp#R4s.GDG)p0XY/pSQdbEk>qXV<cQ+V/C1F8mA.@%1^&L-3gpfm:gDbrE9(
%n-&iY06nZlg5>Zq3g](Zci.DLOp>0kUkCFITJt*iL"&7b4sL;-W;N`81c7V]f1<Y<.R1iBAo?COW1'Qr<ISckJ0gIfo/ulEo#&pq
%.SAe-miQmgWVk!?F7P5gIP'&JdeK4Df=s.kB#/+81k)h,QUVn.\1BIcjsm8^NM!o]rRUbOKp"&Yin$LP/W$)_DndQH6h_$^r7H\e
%`TM4Pi7Eo-ES.;6RE]=t'E6g'`ft0YR.ip^2S3,H^l06DR3r\UQHgF0DK-Z60K_uNA6V2:)QA$rN<#K1pu-A1-%>R-8VH`\&=1j"
%Kcb]B\&,>R`:Hk$RAKDCg-Z1^.J(9V8WhYV+n@G4p_*DU>/0(QF4_hV5c-aAk+-e3WfFQ@K.&Ka!2AlL]8L)aR*A!B4\>3Lmatb%
%QYS];Q^K+NOeVJB1!?_j^,q;?@?i"Dl%6]Kg[S4[^WF?<i[sBCg6b$^(YF"hbAVh64M?KraV7)%**7*U;lm7Fai.i7]n[?SkWI.L
%?,f:G%=?9,oRZ7W6/\=o=@$2LV]g.`=BP[VX;GS44"=184B#<Z<nun-p2#3J2<VdP,9.^n5L#4r+a_Lq7An22jQP(32l(P?PqL"Z
%AJ"YpN6^b:0PZJgp_rqDP]-I?cg%nBE5(!Pj0W'tU_D`1Kr/#"J?kn@>nsbdZkLmkJ`*83fo9^S%]`O/emVnS/".qL3EAj-`<hI"
%GWggR.GE+SbG$,5NGfm]B+C_YW;GCP\]`r*4OhW\VJ.euZ?"=md>RR`X6iug\?n0e\1bfV'Z]**+/)*hJfXc0A7lt>9*J^h)?0Ip
%[d$qbq^)>)D-rSN]TLB2>c+8iZhOj:'Jh<GXkZ[N28;[M[CAlR'5&-SQkDo?S.l^H$&7E1'`P>e*Q,sM*kWiZLHm_>)%iT=Z*h[&
%""2X1[e["gjV.eU4.sq[;#I>*U"jjn%S`*!'><Wc5J8h[>\ha:k%Zn>Fk+lD$,&'hNPeW]1VR7l'BS*C(R%DTpCe:sR,V?97G,kZ
%`O0E4BSaP=7Z3<0H5MX^;ldDD/C]n$(nM,MYAX,`H;r"s07f"AW=h2dQn!j]+(n2ud9j7gAXB6eP"'g7\?;6^5#ldjSQRcjOHj_e
%YYqlNVo^8B3Od]%m.dCpD@(3^0k?UB!nJu!C5`+)Y9q&_Th$kP$"S*E<>+4Fi^!?a)ElSXJlpLKJU:L0kq$2gAXKKXd,T&U(81"r
%U9)een?Ks[J9<`ZrUf`_V`bfo$=RY&obb,<W=I.S2h1&Gh0aR%iX#2CHoH:7U0[_HmZ-=\hq<qc.U%(GHhVG>a.@O1BCr'I#*JqS
%Z@gm'@Y<5rr'kNfcS"PM`%7#3pF5^TpA&MTGBF47+AY'rM!3C_%S9L01E'-@o5/<r&,sj=lH?WdCrt@#[JSji/Y*f'N#FNmShM2[
%-e-g$@K_>DQ1\XmeUAB^bcV5M+fYAhmQo%W`9MHlbn>Y-,1BlsjMBPFjc;u$^,sD=#-T('2>)3:`^o3.ECcma5/da:mJN#C(LV,^
%oaXng5>WmJ"?]-BC:EC\s/G#QiM'4FfkU)d*i!B>5f2'-(l/l&q+g?m6eaX62e1u1$m`)AlY1?$K#:1918R>s,:*O7*"Q/M'!g5$
%qsIRe!_d:a1!Y`V^iq_@):N5"q_AX4&2JEDGTj6\_<>O)@rio+:'";mesIgI\$i%Z[SH[,=5[>5E#,#9hSuC5?HbGK<CoS+8(1qI
%REJ-e-'rjR1G0WZN&oTO3L?2q%<K[u`b-Ogc*Q9m-Ud%kX8QA:iRNBMni?*0Tp.4LRuo.fjSuMbH)d#j@f>7kNSc!5l77:2+'+7n
%aCT1bn'PA3`PJS0qfkiXCM@)tlFq0d+8@U7*;/UKgt,dnE5[itb6ia6a#0j:=.Y<G[eN@86t;5L@A9q+b#QKkP)im,5H3)1XJ4==
%H15`@_Y8qsaK2,q\p3j/'s3r=:m'Lt,FFO3_j#t[)F;T00aENP7MWs<CO"Wc,3.\Z60Wmmr-A/@1;>?,YLYM;aQ>-h.9ja'nP.%Q
%X%cb6[cW-(NuTs!TTuGFql%K9JRjDN`@M[%+bbV15BV"#;8d5"W(7\HR%?7&h.]k4-;Wc<=!=H]dZn>YKp_B#f3O3s)'_,mMaC*.
%CM>e8^)s:X&lZIO0g1iqlY@^:/`bi$*&p7]Wl0S7.<c;W\u0JtAs-'/`pS(O@^9@QatS+Dh-GaABm]/GL?UEfG[[VhP]u\CDcC.3
%k+c7DW\D7Kmj_#P1!FhV-<Ol<?=pc[en:$MW;5%g429MtcF<DWMmFUfo=N2?,;8N;/F2^%=rM4F\+bg!fIu];f;')2j8JD7J,OD:
%/]G/I]i3+m*Ug2L[d%$PhC3M-]9hhHm`QY#()l;,B;q&&*+>X!`5L9Dred6"OcL#WFl1]p/(;dAo+qW\e+Ye/N:BoD0o(\5hqs,n
%+-3q47)Gk%=L'`Vo'I2V7Z<kt(4p,%Dmp:nM"YisJT0iEEXRGj(jb)X,$=@/gF\(u?Z)PVDRU0j$WSDZWd6G.fXT^'4A`Y^)rudb
%hp:\QcelKs[Oo`WUENjjb;0:!Fkg:@+KbJ5$m/,MGf)<?0P[`51FtPuN\rr:a3o&>(nRG-Xm5!cU=sM`DF;C2_O"n;E_F0mb:uDq
%D/@JX(]jcYZ`\6U6"Fi!?O4Q\rPHTa0t(00Q3?d.G:-R^dCS2S%M6pP?\jjHD-VPKA'rr(?O56]4U$_%lZN\0YsA+d>s5NQrbh3B
%s.9K[c=e,7j$F@P0,G&@lup!K.,9&/@46&U?;;?[C\j&V[EPj2rbCkm8ftY0!89X5gC5Zh[arV26cm2m]4%WJ;VV)h/F09a]4!De
%gC8e3h/4&\jlM5jQ:\gH0X!$JH"!Z/Z1GFDL,'k8G/I/A+l@/SWd3b*m=q='Vb_lD)\_t4.dV!(o3K,E0Gma&gb9H6oPM2I4!QL^
%^>1JJQ>SViQ?p/OY`*KZ%(:Sr@AnsMD`8)jrGogF4DS5?(s6(4gCGg;bQ%:R]\^ctLD:3m\'#4Z3QrSDQ^LZ#ZRHUeXJ<]2^HZ6;
%pl6_DCR%F+*U%Aa`lAIhi#!-h@C/eA-rhRk;F,>RWDrPIfh-LrX&dYscsE"NS=R[Ln5i84@g1rA0AOk('<(U15?he>;*gV['rY[!
%Z4pke=gdJ`fof14l!lYD,S4`?a3h)!$BgAD<WIcR"S#k0>.U8\D#Ql>P>b5=keGDSOH4fQUH8;Fi4klo)+6>b)O^>T#f+HFJs7j*
%n^3L@[-9kRK/jF=q&\m]Xh#RBllQTd(Ujg!*%gYIETgfM?+_EHJaQ:<[=g\i&![g4(F:/93";g"98C:W6..q?.!pZ2Xn:P*-&s-K
%KMKY&V0CO)#T7Y6(d;YZQW;TILU!"Vl?cF8$s?+jU3%ZDd.[,1<3+FUmSt^:O;rD<L+i3:76^>n%WRb?GV?7*fq9JXhd0dO6P[I-
%9aSITeSpNDqse.X2"g0$1;Aka,p?H5Tg6"M98ghU/<3@G'NQ[Vrt>9@B3)O2Jh_+W?;3o*5nTT&CBf4Em=co,`(%%CY!;9DI7bAi
%,nX?;"S#rn3K2C?qL$:2W<^g\(sDEleGEQ`#tM_BAqeAc91`l:/o_d$(s@)[jj1W_hF@H:ZF5k3nHY$,mfV%WJt[XlBUC+d(!$<#
%pN,E-]6HAB/=8!jcL;6M458e%DCk#VE-TK:<2N=T!)]j`VQG)rTp;:i0IY.E:sRE7,TTB#0iUQV\And(M\J.b9bpo1R1GddPNuGQ
%U0At9)-VK$ed@[u`$)iL%:r\0ZAfjB7'`GqCk8GSqLtrAC_kEL+;<0AhFJ:;p*[,,JrqsdWC;Y9JIL8o,Ut[R"%89$^&B)n(0,o\
%PKZ8?jprB,U\?#9,^-__]!88N<N$ldOG>j4Lic:=#[+Q[R^V&das.4c#/&30NA9opF_csf;EIof-@1ScZI7Mq**rqX1;uFei%0jt
%:%lSn39tG@gPeI.Veo?\[]`@jX'?MnRNA:&8-l:Z"7Ih1i*VEk*@_G7*/]QCbJaB7$hu%aJ?H3MG?37EP0PF(P6E!THSMX;Dd=SB
%d1eCQ3m;;:b2Y5be1\)Q\$mOKf924"kmt;*:fDt!=qWkg>dJ]HCbp<Ni&F`N7qVIj\jqp%bN2R`9Yh!(V^?4pjW'hfMe;#eoPr$;
%7Z+FP:<bkm:[NN2fCL[.jV2k$MNWt8K!-NN@<RN0i.O"A2[3G(8ujEd8Ie@;*Dp9sV_s5FBHrQ5$)U"_Cg$.?<3bYsH!$*O.EoZY
%,jFEj%KV;TTuNn0ZCLP\Su5[N9\7ATFD-aOQZS`R>0mUkMYuC%lH[-C*'0rb)N(Ml-l6#)8Y`QoMo;a=m%FcBq4YKo9]3(/2OHsT
%!=WUeo2FnGQ74CmWf2m!W_n3?632C;C`?Qo./ZkW5.Pc)QHpK'*,,C)\'!<cT.OO9+G#glmE..Vrd'fZ]Nt#)Mit]bnFI061pb)d
%$hVTX2OkiLZsJPhX/"M.*KtUm$k:'YC/m!\RYW;fPFuR[Phh:d_hM;NA!;;V.c7H9H=IQ2.O3M,>FoHNQ0LMY'#BoPN$N)mf]4]S
%"XPso@ZT*?H>j!l6"bB2U-'/HGR<^KpRSDO*e];?*IFaWOH**(%eJu*35e.[j4`_iU;f&;^[J+_&<UO$MMIID$"San`C`G8El3P<
%VU1=$mslsJWP;Q'WNfq+4(52RECOb]DW?6qcU)_JIH,I2,<KZ681mAP3es&O7*&6X/<>@uj-D;?k>\U?j\s#BO_S'FQq0#n]PP9;
%U$mjO30C]:#EXcpUTn13/A[iUl8ag)5#)6@=&FNm_dlq(9S(5?HpX/S1BlLnXh:qQ,a<u]O`Kp(L1kG/!t+1nJj,%!AaM!F]FoYJ
%Z7Js2YIHu^Z;ng+6>Uuh\o/bFAVq"KeC`dpZ?%V,i<+"K3U`Bq;<,SR=]cod4GcpGKZc@ZI[ca1lEMRt4;@aUb^,?3`YhaNTi()Q
%3U&,cNNQ%YNHfA%mTUrbcaZhPH,NT;>NJl]He%5)Ft+FT!"*IWoUJ.e'(L9*PmH#."f(#Vas"_2/23IIIS^-j,+gn)Z_V$Pb!86s
%RNA$K1Ij2Qe(3d'\D5s(?&tURmN8MNC&XCiZ,)JR#(s5%>',bI5]"24;@F.8q7['t&&f6i-K*8hQE$*[bcKX[N-A5Abul;jA+0G*
%6nXaLESkKiRG#tjC":dtW2qS:S/IH3CqI-'4XkPkRkJePdS5aaZ3e[t_+%?@nuT9d$fSiFcT[Nr\cQ2-??$ccc@U(<If=3^SQeA)
%2=_/l:TLjKQY/WA*Yt@'[WM!?Xp]cg]gZFh[qip>YYUAbotD&%HB9j.j#8DBi?MlL7ZN,>m;WR\">Zk06>0R1oXP9Y;Tsm^\L]&X
%dE[j!f3$H<.tWZh0ArT*NY9hF%\7W%2OWY,fu]uB)b$AHCL(GK:M^K\-(;oaa#Il_$YAs4f^R%)J1nF^m4H`f_Mm9K.nO\lqEsDK
%'i!oZ488=ie]JQZL,#0Iaioq/Fti$;cGPSmk>Ib;f`j+013=GOlY/@sj4A_G6StT?28(d6Rc+m4-I$!VUoXu#$*esDOaiEGCf9VA
%TXZX:FGcVX`hBA8fnRcpEK8QCetptcc:VX.mjeP;(e,(bkn1?FUV9=t1)e'J4iIo(H4?Ac4JF_90@>hsD>V\+/1Fb[-*E$9cF0$d
%`"q![cG$PjV.KO/D`dYg,slQfa!S':-=5":hIJ6A)es3h1dV!^/9TfOKU&j-H8e[$2gUug7"Pn.9[,4@iJll^_m"/$D+U";brB2=
%qMeW,s"h!mNUVuGP%%?<fK#gE/<+&2ETu1395@/j-$9E.MHBqSloSmqhjU)(`P/UZ0kh@iLUi^p-`0gPcJUtrA^;lS0/d!e9\2N@
%J48Z$TT.to/[>Ve`d.,QUMWEnUof$Q&Y#CtM%Br?<d&>7&IW1RNeF,DU:i%"A/9>t+i=Ag/[t?pZ@KIO`l7dT.ps(E#r!S>J/YX>
%1NMtaY>PnL6]qW=p<^k9/>=GO!0u)#^k^uG#Y]BM#Zu*;+@j)f<a!Bj8.]XD9\E7?p7c-LR_ebf=&W2epm6'2/ND<kA`@.<=L"!_
%X'i]gnO+a4"Bl;NFj?E-h64s>8j2A`P:K=`bta;A5s<72.t79B![b@(P.'!GmXA2jkci>&$8&.Bp0>SfK(-$d*1sTGMHI^qDQHN3
%5eE=X)6.i(b<0i?S/+=\[KVVG`Ef"8doJ`GE\Kr9$87\dN6UeC#i`M#XdHP$L\PI,5&W#*R6liBAt,9DJ\s??27jcTcVrL<C_.9%
%@NgU`3/aL9B&ke?`P4cg"A-ln7m0+b1Im#&*^Ik6kHP7'AWZ?/B7(]"MFc[gH!-/IP@D`(+.+1:fLY+KX*X-K)K&jV3NuJlBQ6hr
%#IRk_Uq(o<FD9DZB%GX<*,rT`2*.>@HaX"&,>"LoPnqli2sPGU)NeMF$#:,&@-n8ApZTFrJ5RMfY'JA"C5Kh\`-Out-]5oA(UX@T
%Ns&:D0#sDa[i`+k'et8.-b*/pZ-H^ESBo`r[W"n70m8knS<+^@mrX&I;^Er*>Uakd_b$aG,pP[C?ap^o9qP/]`A;^X7#*P'QTV\(
%7TPFC:&4_ZL!kOB6*#g?5Rmq2>`juqae^m+9qW(GPhK/i>_*b]\BSY"mUQ;QPN;8f<DBl_L423B*&Yen?9oSX&8:#Ja@b_%BLHKq
%@P>Wdr@CjZ)HF2mhT1/9fFO(]QC_<'7U&uVRNI=Sel7J_Z;NY5%]?A%ZO0@XjEO'A*$X``?%\_^b3K8WFngj7KFrj4ba0R(iOZWS
%ao%7.aT)qff\eq;5D64Q(a,bISmfJMQn<egT`X8i$E%8C0_.t@Yp^A1ZhTMX2Y9/YasH`P87'XaTJ-jC@Opd`!g;jE<5r!&EG+0o
%2JAE,\^$D6Upsf"mYbl`CVP1),^ohi*k4)seMeegT/dJu'RPq)>RHVq\6=&0$<$f@Z@gZE]nDq>1nQ=(1S@qCqjOBHR!%3VE$>rr
%AOk9ND.hk:):`((>=MXPBu-&,,j"f)^K2F9Vr0m9T8Q<T[s.3Ea.`dj#SEYQCOraqe9Iq;'Wsm-nJ6WT,b5g&OAMY$]O8!ZBjbte
%OQ"f+UK,CdYGn?Pq^R8_Y[ab``^pCOL_R>JZ\F@<hBR$^WE^4MlWR<e#ukBgf>gf(HNo7NOVH.'3"=HDeug&]<CMPGSBJj\rJ74&
%MVu^!?<bs>Wd8),$/=a=m!Y@u*Y<7!?.h>@6p)SERtSm4b(*V%)*")?ja`NT/qF134lB\*/4ihOen[:FTj@-.A+fdaf=<bkHV'+E
%C4TLDB1;N5`i]@2ng_$_@q6M5gr]sm7?AOV&Q6Rk4[D4,:CJqApi\nFTks(5qNTt5S`)&hK:TgnNG?g![]#0NU_V`'ICdB+;C\Th
%UW#!X!^nX>e;2FhNgIFL@(onLKdoMslPFlok%^tu;+"UH93WmM`CWY8CZ4O'?K#iS0r)/aeR5ZYU5>>Xqc'u7bT[&e<l!3eJR1&U
%_@X,:kTqdCmH]FS>)I'`d;*Ff&0/&*a"bK[ccH<"!0tIYh"7baLi-P9r0Sc3ku42X$U-Hi+GD_jM.&uHC:i/?f#AOljm$AAl*.fH
%'LsIr<Jr:YlN*pUlqagl0X][`S_<<CAO'JbVhb1!+YbOD_*r:!(5P>t!uq!,B/_VTg5_57Ui5O;Y6b^MGWOF!*%P^qQG/^Bh\9*+
%StT6PNkR?T?qs8obJ`!n64B/(HZd"YYqY<E'DklC?rlLrj'22C+r5C!>7lcX=)UO/g8Xd=fS\bHVaLIYjV#"JR]`Y(1R5F*`'8he
%<[47j@4N1&q[78q$UIWM./P<GXtObK*>#$m&[qOIT-IbJ$VS&aBm5i!I'gL.RcRbcX%3*TV1$VEo2*0>YJ?@H>PsA+l>__hEQr`b
%?QUL;/g5]2[bLQi^\3?)H+u(=6j<6Nr;$h.G:X9TcKj6-2s2R2,]R2N=8Rp.OG*J<")7;-IXR0n-q<F0@jCaD\T<4Hb?oh9Hcob*
%AX1$kY@_KUnlN.'[MfM*Akj%LM,M-th1N:-g'Ca@QNG`/GqN?e"P/$:In=%-hj<14fXA_#P6TTW>3SZ^b@gb?Xb!m]rUJIS>"cN:
%pC;*!i\?u\Ya4'Oo1K2?q3a;_=A/*)?Q*%in"4M-CaZmXBOCiDr6iB(B>j`Cjjq4N1PDdgL;fjeQNjmjg5AH'gPM(R)VE>U>Xnm3
%Q9\eM")I@CI;*)Ydoq7he_f4%=MoU4[g!TZ1L_sCeepSZ%h5VZ,^23m,W3e6@(<pd"pZYc&m1ok`HbIE<]C0E876::BbS5?$%gTK
%k`Lju'M2]eFs5e+^tM?,Sh&XW@XMlt1!t7d3Ff>Y0+BJ02;E4d?pOfu[g!W7^qc`N@[-&bTn10d]5A'/QK.Pa^u?;0D@J.7/@Pg!
%9hk0fUk.o)PlDWmhN-:FYFe;j83:A-4%e!$6)/q6XBH4?25h*9Mm<>.9"gA'ptIIGY4Q5gL!r?LGks[mMjTLNK.JcmQ3ueLAFrCW
%d9"eaA5RIZm<K;nVBe4e8/2/0$;#i5R5BU5At@Ep(o-7.q.8ur)Tdcrf*bNj<4`Vh/PO+4JG2sjq"^`89G*`M/`g4g>M'#+/9cRF
%b>Db9mde"?/B)Mr%4+h:b^&D<>qjR,MnCY0;nTY7'ODh_\#Oj*&g?C/E:-;I0_>%,EkDsAr4/Zo"B6Oik%3[:+?:F`SN**=r8D@_
%lVoECi]Y_PQf,&Tp`AlYH3%]cY`uYOMSNelWX/T+aE9Ed?g.,5'=2f,10NBmgPp[,Nf9[1.ekhbiHu34.6\<.Z\aQjP!/!Os'em+
%B*Rq`HIc#NEqTR,W/'U2=f@QjrT^QCeW$!]Hr`Z6E@cM\']u)9+_15F[6?S`=:qO.Q@?L[f)=8,5m5o*UAH`FdJ8Z#nGg=`nisWD
%\S\P;M,A>X$P9:8ZQ0=p<#S^PggMY2\@JO8dj&1?^gCb(a;=A:B;GJ\H:@9>bGE_R=bBbt^os_..+#;%:IK&bPCUgGa5WotnX*!W
%9p.13ADk_2,neQfFfC`ia(P-7_S"@nM^aTQ.!ZS:8X34EahoE;AQStdja"7gPk[6%b7dtKN.uh)bRZ:P,S\,P2Q%N<8rnr=cc!?6
%dk8s4!o:XDEsn^sIeB5p=kPr:ajbs9Q;+I<A'&B6+RAnZUA?1%pe;oFaaJJ[-Rk*2GN[SSXB'Ec.t'H-.Eqbmp@i8MiH__hGTm9q
%A;g%ur\>,]4=&n98bjUM:EFuMY06/'`<JB^ZV@Dl7MbW(g+2pKAl6#"MM`+%&aJ@48pBoq*GZ-678,]SFEQkUP\Q6\7/Dgj=\[[]
%<b8>_/4>HG`,s\B9,Q]eE+VsF1j(V=b\=SbrD^B`JJk;<5<nne&+peNRYtmP-[4Ztkc`Y'&Y34"KSU!i.?$LDMl%K@D:=K(^g46s
%9C3t`igD_H>oXm-;FuTKKj?G3UUu%Vg"%B3'B*E;kgB")c5pdgU,9<OJuO?E>JEBcV[Y@8Ds>I[+\j=E)sCT,E?ei+Hof#9agalC
%5mT"j2qXqmb!+KP=g&;lK(%pHO]`G?nl0b,JorI>GoifHIj-Fqeb>o2.MdD38CnV9D[(nGpA<&g?_*$/6R*0G5R-$_Z]ORH$`h+(
%\.ObiS4_TAV':N4S2AF4G?\EpdObESg.Ot2NL-#S7Y:K,jK3V89^??6c']&+:YNt6)EDkbXjgA1"V&W,#fS>cdLiXmWYr/57KQ5?
%"oKX!oj#&mob"iXGb>D=^W3@PT&eUT=`bL"N0[)o,$/CES!KjW!TR'Rc12.=_MCEig\WE-_nNh,TRnjh+HhWC))"cM@[:$OaDkte
%0D[P=XJ:^T=<0,sQQK()?;om[fucu)XU'CT`8Xh:_h>`Ej2cO1e66T1^XV6UC0E5TdfT]?a\G)J<"\4@OY"Rfj,&-2_W@Jf,3D-`
%kIr&\=HXL#+P.4&jl)Z*Ke[I]oJ:5^[O--u=NMB.49^ee^Rdb9";,mk(_Hs(p>5GY49?'@FAuJ-``hb,TW1Mg$:>_=/%D;T4)$8)
%Csnl3c+8Z)%,_iAp*NKLGkP>Zn,O>5C/fY>)HZ,B?PJBT!85s]rTG"X^QG)K!f!?\Aah!#joETInL[naa:nJ$_k`"TW'hNp-Ka`=
%=joE<<(N]O2iO]0@V"23$ms0$Uj0GQGFk7K2%Jpp/7!Q(RrJ]tU+s5=mem[)r2\uCdOO*96IQRJ+(.34hFAPTX26II7fF5.M$Da!
%5`tRsL"Ti?"`-kC.kS/W8`6&k(kK"\h%heG+2+Kee3,#V7E;b\+MGT6!^e(+O<RK6$Y(86,=!bajp=qH[4=c+Nnr6C_,C#.\j"<C
%ptab7d20mZpas7sNtAASm&7ZSObmDpQuUD.=[L.E9E.PfM[*17iH3#qf9&kZ6]]I7@\"F*[D@c-lA-Wkena?.o^1m.XiVaNb\U/4
%=M1,2pCFCb/b)2U]LuUqI[^)dAk4lf^KF.UP:7E2Z2&CkdQ1]<pWq8c]VT_[X)^j\k`kM0&OaA27["7!msErcQ^R93+`?1LVE^hO
%G+$Lhh>H0OK2SZ4q/P!Q(%2ND,Fj33lPJq^-XCufE?*\e8+o/K=ke-u0`6%0Nk@s,/FpdsI\)>I-J64J5N24QhKhuj,,I)DN5`EY
%Rd@PY_Fd!ZaIH/V.;dtPgm@@nRNVS+NcBGqIYiB]D$p5P#q/b8W(%l;TE&t)[><!gT#`-J=QJReQ3'BG&8^S<[M0DhEXNu3CF/iP
%>\YtXeUH:OAEgB.=bQcT6$m_-@+ce<W!\T7LO_;V7f"RI^aGk,VN.@4=\7?i;o+6X,E(%+Hk(cH=l"aB2&ESDRui98Lm\P#Q]s':
%#?mQa&8A_0Xg5Y43/^J]N>Qknhmh*8'T)>JHYMkHV3muf<T^V+Smna=$M-`2;u\;gU1q"eSkF04Q?e)^*]P'7WgN>K23JsYi"'j5
%9PSk<emRt%SNOTboj]I4@f?aRCl+Rf$uUB9VYO#%.9]T'h5$5ZhYHr:r:7nf"lqp3(h'rfdo.*A?`(?LZ#IRj`CFBLTJ8&<X;Z_R
%i`/:=nSQ;1^ne7CUL<m=WKDg&i.-deJ&F>lo6GMQb9f_&)a9ZUg!q4gb0=o>#7=@OH!/q3pe.+_F/`I[#R%ff;dT\WJ3g:_%;mJc
%FR2*L?V$jK=:e3r2TL37Ku7rm8D"eaEPCOiC%b-J:Z\Nno/50L]JprY=-Od%icp"0\!c+?Mj%9V/\X4+ZGV[$_%/*XNel`c=?KCm
%*08,Q5ka,\^mK#"a(+YHK]%*j;I:E)a2gjYiclTG>f]S-Lq(F%pG^+pOlgq14<BCo?A%8=p0i;f4<ENph2`=G?tg+-:u&q6\MtWc
%3lcl6fN9/^*"Q/KoJ2E0cA_P,M;nVpC@:Jk+4lYuNX(O1k'3Pg?0i6.qWnWBirS2;a,lTnA%FZAYiM"tmM!]3;nb75O%%-PY*``m
%B4bq:jHdIdMDuZnJIIRZ@qcPe"NLU`aEhniJ:3Bf4:IhdJIWY1^W[Dc2ojs`Ggnf7*fm-fZq)/I(`Q+"nTF&:-'/?_q$$?)?URh&
%U!<T,4!5&9jR*<7Jai-@5p!P;g`R,0<5M'L%iF9R$0>T4p`,A#RZq,$&&7E7H2*GecN/=,U,"u,6`K\+-'/@<:;9(9G__/e$fljN
%d9+MF;nY5tm&,!k`s)&'-a<)DqZ_=.7`Vh>aQ'N:3l*92P&l%;q9i=';Y%/jBcW][X[5<61NJ=^UF$"&!dQnoI],b.&U\(lh'A'%
%P!*D(P"3VB;Z'8[G`43--'H;YTd!G]O6:A]T\`5f%V*1D*jB>:m<l;K=TukK2LhA35<jP).$+\:8M?1G\PXI[=OmrP5SNu%jRF)c
%,:\c[c;*p>npmRO5T]-FI"OQNoD&T9@!506.Zam)n!5HNJ#[dW9n5?6kqA,'<gRo\4FFiQ5p#gkoE'<R3'N,XJOu,ENe]8!09-8Q
%+@;B+;d\LA-]Z6r$SBl=icnjM(%0Oq'P-*^)s(N"jO^G[*iIZ__OP(\4>(O6`f8->a3nE!46###]p<T@4E/(oDjCVZqYl<4iPt[R
%/.Xt5]3-3MEJ9Flnpn!Z=<<NcV/=3BnFhe%EA&P$?7_/X^$js>#0R*<%tG<V!K2k8#kN9l,NPX5DnoInQj52&F'p'aV>5^g^mO='
%o&qkA[l;5!7NpdDJMCPoFBjpg0diP)MWTK=f;5Ki6X,(?@r&$/HE+Pi*\_9AMrs!<S*&ZFl>(XSRn>f;E#p]Va`+O:q8R\BQ5inQ
%OVJZkILaX*=3V]In\"9)k8GfYL_78nm;:TTot58cc_uZdT"oVZMTd%&J^4IR6^'Gba"=Zq[qE`Z2pT<FHK.,834*Uo#E8KE5R`8J
%k7b%=qW!;$n4-gjk>@urDk%%`IUl*ALO*=TEc+#<boN;ZhJQaWT?$9"-1*`(#c$S\'a7&(8KI!1CM"9J(!d!%8U?/Hlf!AmnLN[L
%G4NoODnj[D`&TB@_t/D0ERE]i\FIQ0E9#47J0j)8%r]EGc3(Ltj#kiBKCcklWhY:>5e$G+kM^4@NUss=rd*Nc0SY,d&^CKEIH*Go
%qK5f=D;$j=4"?hW0<dC]6\FXDMs#X/Z!KPRa4PXh537/CiL+gHRTEIC%\<oo2gE88a+#o"<BLd#`'B"@YR4#Bo<-6@+Ge>07N]H"
%Sd1jfhE2>DLRCZSkDPd95S#gn,'IuU(sX3/U'Em-3rY](ZudrL/trRZ;n%J\1L<T_peKj=HMA!37XFjD7VO.ee`QD/)sIB)-Jq?)
%m$mPRl%*-m\re&,pl?BYnQ>)(S5*Mj/'>+:Wj0,,R;-L5L:'HrTT6#=[n,K):4Q#D!Bp@I?U0[m3.5TLkj_c`++j0aMU8XYh?;1-
%)j5@H4jX_,U&oYNp\"Z7pn!9jST:lK["1R^H/7@C%la'b^1AHtJ0btWNP&j(4n,Jp%J7GTkVpij^@"nEGE0Ajk)DFN2[`AR"n_9r
%WH;*ZqeaOfOob?(`c<qmJ0&YZ75u(0_jhJIL'[!oX\PXf:dg!U'u#&e]9rP)iW)+a^iH-nCUO!.!dZsZ1<t*XL`S71S*9BE-HR.j
%+1#c\.q0<ZMP&r9l%'Hc=B^FN5R^5S"<fojN-$:-&4YqDdK:YmIK;?S>\=ChK_.O.C#2AkPhDugUrQu@H='2R==,15gjkV),((Os
%@-fi#_dcY)d_c0.qMXl%X]B<9*2J?cb47P`%km;>6@*$"BfFHBANS%oo^J.1L%N0(F50:s%)mB74YXn($gE3SQ#<B&S?qcH6k9^2
%qBC7\(LV\%d0&EH'6h:[+>h^jqpAiLd(t;H'6h"T.?GVGMsZ5jJ2,kN%r^,"*2J@:RV0'K_.'W-O<1oJhFJ1Te9W9$@*A]G`.egQ
%%3[kGb2=.O+?e)*NJrM6VKO&66@*$g$gA:Z@sOrE<%)]?*'E+g$lV?opW:\(d,KNbdDIpCT0p'VpqVgOiN\?2k^bBq]nmdO?$d/H
%HrGM.4YSGA:%[q+qG$U4/_rf*\(jB4a+EnJh:UcRg\LGG2QZ\q:%[q9nVcU^H+%Xc#JPmoo0i5dQT"#O(CD?J766MOLu,$Kl%'t,
%Gp,=i(6EI1LPL:rU^)>u0OOS=5e3!uYiHbfiKb;._ZSRc@,^Z]9)'_1*i$19@<s1N^&)l<*aUH*hQTbY:!R(Tgr-Htg<S[he`/A8
%c7$X[bYheI%t$tbi<_)"2uNZ&IAVI?@6L4\&4f/q=HCMd&fjh4*WlY$W#i1-,FEIP3'"6(W#iH`gf+g^^"@PYpp%`dpJ4eXM7c;U
%4e?H_OnNT7kfn?N4^dM5eH8%M?;qFP1Kb^/EA@PK9<`>M`&H3K[]Z[*YM)_DE6C2i_hJ)^_t61r`&3^.^PVQ/I%b*1L7@Gt=D$L@
%R!^T?JUH7dZom)'Ql[[DQ#EN)OpKWsl1#TZf[(7q(;J.(HGH7Y*b'FX`oU#O0g-T$L/:`<O(T">Ab-&Q"3,U24W]LtJI81X/1nS#
%IEAp8UrQtZ?JIn?XCPcc^3P,iD$'NpN#bH0rcJ3(O>8Rt5S"^j1'm(Ef4j,-%p7CAciZMiDkP-\ae$'mTEcC(?9f$C$rR<6oK]hp
%^01SaT[WcGk^h?l,lUD^e)_p&@!mX/.i&ps4#fV=N4+!F4W[7_PVn7<p.'cIdG3F):;7P_/O8<2pe&LF$1Tm#[CZ/PrbcYgL6%f?
%?N[8pqrV\0+u%'fMnG*q%<U9b-AWEamgH>X;sK(gn:&%?)R-RfYMkc`?3<ZMq1[FNV;-;)cfnjl[k%'m:-CfHY(7BEDn$#.`d5HY
%OEe`483RO=j3N9l^`j,ti#7't%G-,A^#0gCT&KE>-<#%UdVd[`))&Q*7bH/X7j\npbs^1!]>uY:"r8\LZB25?9X7*!7CuSC^Mi>V
%G4nuh\->usH,DKn+4gn'J\>4#i>U@*3>bn-B2:GW*h8@2jpO\p2.3DB^s[L[Xu6>L4K-G]&j?V'c.c>Z>Q]>Urdnq$=Dt\R/0N[T
%XoVU9.O@@a@SG@W).]U??W]N\E"01J^#0fBC)lJW6b6F$-Y`IMpR/8.aY`$)>_=2iON&;H6ho:7f/T*'Y4;EhpZ#`!26c_=(L5uT
%/e@cepaMMm$b-BlH%!RfHmenRE/hoRK;KE(3'/kB!W6!j,#pi6'O1_^!/tm52;eroF>'eZ)fMmAH]9u9a=T'JdE.Xff*Iro6AFrO
%=%?%X<7Ho_EDK^N;LOVg8*g8>Z:[fE.C^pNf$E;B8h+Ug).Z8R/'<Wa*g4"60*e?@(3R<kZ@--!3hD"Cfe##[F/a7\"/-?gD?WG;
%N0$VAe`)+u#"jn2^$Tcs9ss$-9rP6q&p,PED@QcP3Qan#*L"`G%Yl)fZXKqh2B6T0mSnW3O>@Af"hXUA)P(QV.lAtKKYq*/qPRKK
%4gdeP'c#K[,cmAeQ#l9\mPj*"OeqESEQ2Pq""V\+D88[5h:-\&.&^aPI6N3s@W,dSHsgsfMHMW9!sc0'39(HFI?/5`]DI5,RfD)J
%^D,[fm?T^TK%_<K=Gs.^7J,kV+*8nE()\iB*NW;$'(<1(.TMltPLn`eCTkR(C=im2`?5iVYpRfa/Y'tUo(3/H,Ju,!=/f@,Ho>3f
%_'*#D?)eDqCmIL3K.2cURNB,6bU7k2LSs+ZY<J7q$@X\\&4S3p!V'I<q$N5QgA.8X(;:4CBP:MmET50?XqVj9?:M8>_/Jt^*1UJ-
%hWFl#1H7WKX1UB=K"0,s.u^%5>BsFTN-mRLFp'4EJ$?PP"M)d_A87=S2(I_:RI0J\LNd07#gG-U[;s-iB.U9IPusM"9adF)%9/-:
%\qgbq<*XGSPBLru(CF)]9TA"hI#YNk8'u8pW(p]O&MlsWcu!b6b*Q.2UuEjJ2jb1QA:*2_$_$p\`7Lp&0n\9i.J^G\M!d/2ULAjf
%Ino#'@i-R&Ig00,!BZG=&#A"s0n:gfOF\hKs"O;6pCCdM>]/[%KD.g=7HFE2F*@-R6*tNRhEQI'J*6c_[,j9+THo'/#8p'/)@aKM
%5<nnmDhknX#\,WQL8W6']OH\YH?1LM;tA8*.Q;I)A,%8PerIjU6-K=A$\L^_N8,Af"+I!VBtYgijHGu$gurC,n!<rrGR(=n0T^VD
%Zk91nkLnRSJ,bHN#?[<k1*gGqCEid"Q#YB?JWIYQh?X_aB8N``ADf\l:,p7mFQ'ik8AWXD!8)ltn/-SL+3qlB^mH0$6(W6rpPgME
%CgL'fcifEKMlls-0>G2@rh$q3NT=0dJ%!K>o?R1+.RA:(5Od8u8Vimd&F%6#ndi0W]2S]+bb;dLrW/HoYEXM:b4hItn!2f(kN)Q9
%MSO]&r8US',,^r\ZtnJXs7XIM'm#c%<+/@0r+D6=+`6;@\($=G`2\WSRn!X6FcqRs*6\D9`A;PQLGk&g"tYgo2cfYnUWf$,1'L$e
%Z>pE%Xa/hTr"a)tG5N'GCs7t5jjY%X!VMVG_STJsnB'I:EXI?g#MbJP,?73XJ(Y-jFsONVZKY->MJK"Y0Bu.+I=.38J;Us`;9bgB
%)r#"bs1tkDYU6WpLIEWUXirM]4kt'u:l<D5Cf[aZ"&2q&d4H7N)qh=_.Ec^6U)qrW$G*J;2fKb[d:O0InFKrP<;S*?LO\N%!jnbD
%=Z[AUme8#O2\fE+%UgHga_>5.OMBg40D@W0/=#YLgA:#?DTiTWFgKLpb!0$@=Hk-*jm+\8/;7$]"(#eDF$(^32.:3^;41=MJ!#"L
%!N7h6L-oRsn6%(mQ:i9pXVI)bmGlg*:quldE`9GY2p0#0U\>2rnUc&I<=p&BJpG-;OG5a@0\e>m=J?(^E7:lX]M(!i=RlpmJ>Knd
%*fi%&bZ?KZa&6#)3o'4*Pm8*Z%pYuN599);&Y"N]rPeG]H$K4)R"tE(rqtP1^V+"rcOV41nHJO*WtU(4R)`\KWIF+;7uQ*SJpBJu
%c7JdkOZ,fX(X1q(3R*A1H!#"]a^(.S=sg,V@34&(obYgSS#gbM4CE/<Ja2$m'iRp[&+"6nEGfTk3KXTDOl_/]NCm3.jma0:ToM`U
%9-R$64E/PkYrlD^^eNHQ1LLkAPQuXdBGEp\?isDHPQuA-ogX47pJbKJ&)W].-kB"oH)!KL,uTQ&`<rnQUH-;bMP^<*o'e[>6@$A6
%QmBj(A,]C%*0^[LB>77ak_aha4M70HkFaqF.5-p@)fLrG[d3TUGs%B1R4CUL4@\:%M"8@4[GE;BD/[+/<#`Z4m7)B:i\0N(W+Omt
%9\?o`jag]]^/5s(S<"K/j6Y`Yo'h),rZ%4//<Y(2jam5*RCUWKRY;*s'9P9;H_PdJ7c2c#"Mgr.o^aN8,[ds.M,)Fj9c5q85;\GA
%;Z%Y31lo\?UNi&;*fi&GOLFBI:#U6D4<@.k:Bo)(0uA\TR`Ap:AE4MSAU6B2'n$0,SGsRta0Q8%p2\MBYVP>Wc/UMc4K5?&[ZliB
%k2DVf^[ca(aFG#Mj0<jX7Ita4LS5l[#E1\Xma8+Xdlb!js7W14q"O%mk(1jojB2q?MCRHaF%7=q3[Fd+Q2jtL#0_^,S`U1OJpH:C
%qLWuT`p)k*bQF/*`[>8423c*iH-g_:*\d5UjWVg.?S7YbFdY@;r6ij\J7Y<<\AKtMW(ANN]X2jg4<D[BTJ'Cgk^T*XMrjI;YP]ms
%d9PAl,iPsu\W5EH]jVs!cM<3?^s_l&>P`qTm:`(@\#d]6DO:Y[1WN/L4E`I@JU(YcQ-Wlaq##NE4>=$c(<'W>GOT3ii&b:Q/.Y-(
%e'7I!&qklOYrj(#NB!P4*\\d(7k>0Q`m+()79R*/H,+:d<F!N0bo]2!;tV6:mck202%.Whp`,_-I].`+bekBmHltknU7G.ih(85R
%H,*<a0G!da&d/C0^oG"1LZO(g;dV'dXCd`C1NG)e.r'IXq]@JU#PQ(&L%9JIK91L5ij1F;/sJkt<hB,@np&s'`8`s[UmbVKkFas.
%>X_)"!p/qh.mKBsA=I.Y%a5%Q=$?B<`_N*N#j1ZaCQha6V3[YPk?a!sRFBHaDO<qcNTjf%Gs%B,)f<DRT"`m,qBD;^#CUKWa(%.&
%mA"@MXK7:.R)`^9ITdq_#D,S6"nR7ahCoJ$4n[.IYOTX@k4.*!b\b-XSf9SOQRWdl]*s%,_)u+fRk'j2N!Q'`k(/i^i(jl+(lj2n
%^fYKA#;#A3"nR8@]jMoF[)On^OYeu*:+qde8:A<:nF"j:o6;h)6jVrF=AHY:0TX8a,=C3%HlMtML3Ym+Wl5ih*/7,p6JjI-+,W#$
%iu,"C[.+UsGV8T,[U:/;+o1Yt?li)WL,dieo6?5L'FX&SOm(of[:ciF.kd9Fa2%9?ALUB[^BVuE(X1p-K`GV4_*!,=hCoI&BXqOm
%#\Z[sZ*=!Z'#R-fT$<I'!p5%mfj?EDJ*5%YAR4`8R%,46kjpqJR"lW!R)bO^'5iNl7PKmER:%'Q.J\^Di#-\",FA^*_>#";a4"8W
%=7S9%qeN6#Ej.Z6]P/F4DL@\$joN@#_f299:!A[.D;6fU=D!C/$ZC-pN^s=-oGconbC78i*b4`"LscZ>=Z=RB1#Rom7A9MD!p+rX
%pl5+@o3dJt,1S^X8=kX3Ub^)0HGTbZNh$)42i4jJ=;Ys_o.R);GI%rX*q-U_ct;DpJ`6Z#9b<Ll+bZ_gDbCR.f:%f0WXXEPI7j/K
%\!k]h?>\Pt\"S0DWEQEM^W*Of\1t$FE"g&BX7D3,'q`*^kGZi\*p!&2,Y\0Q+Kk0O;;qRGF+^5+('J,I_Z1i1c6N4,`/Ql",\l5"
%/8,pk9B8VgoA>$kYb%Re\P8P(dhPRL,4#0\+X5f8o=>5cWsYaNojPKq(,]j5J2_;tD9Ee==XWlS_#\\MdF(j2=$oUMZ):)(8leSX
%pXm^%:N_E"<%H")Wl,bjX(i=ZB:5SK=[mI*+0ojj"%&K,Kol%O?AXU!_;=mXE]B@,b%/e+ka'?ak3qJ-T"?o([S[u)!)m;Z1Nl!C
%>%%C44).pGidXct$]Kb#caZimI]]XWbd8frIp=S5ajoD`$YSQnZ6Z!lWdJF%@^<If6pE]<=l7mA1CBm'!aB&S'oa^-?sh4$l^f+0
%<C`PiO!^WCk81Uj.("V*-Ad?L;a(go#TJJF4qR;O\8QF+@)Wnn0?4@\+Oc`TNk(G`'h2En8(t43AH`lYm!b?UZ*<.[-ufc4(3uDr
%`Tp<qCa>"rS2_Ba4A@k,1m1&5m%/91WN#`PP;fpP&[Uc=@jXlVs&r)Si4r%@+7"bEot8:2Ij&N=ATQ;1lV`VVP%0=F7gWVui^!AT
%2bqZ<YA(*&/[-\hfC8ZI,G!k@-W9qVPV#0ANiU0OeKa=V3!7been@.caB&58o!$dXcVrAO#UB?l_K7t7]j2RBoq*0!gGrd<'rAAT
%BC)WIn/03Lq^O&a(gNUP,mA>X3^#V`"].FjJ#s/\kAFWQ"`h)rk#Y+T<3*'D8HG'dX*7,9QT_uR$9WelF4ldbh>?3;p3OSXRIrRB
%Ba]#k5NkbR)828cp/<Je%=,:U\0bsY$q5qR2B<RjYUB)<J)]oQE02,dI[9V[K5J(OP2MeU+)EOhO3,k!c(_'F.NatNh<F2KPs8H\
%5SeMT/X[mmL-3\njNkZPACO,,gY;+h1K]A_*/rGUDV)_7o^dQ,Fn6GuA?-d-Zr+/WXQ[3Y$5qQVAZ..3Y-G!N\@a5A3BhhQ3APlR
%T_,;OkW*]mA0@(l\"\Jj(20f4'O8\"g_//36OG"QbDpO#2VhOc(IMNP]jtnb*)T#gQ;h,D:6g]A5fn4$`h#56+b#jBK4<CcbZ=o+
%?ERDt@Nc5\9?kmEh/^Fl[9=85M!JHfRQ.[QmY0BLBoMR_S_r'-@Z7d@0F4_HO8A4"2tg/YDWd`)V7h;K(M6Ga.6+)b"WEX"FSqg9
%C0\X"3b!fnRI=PFNtLR=%^@q8k*^L*MqE6DLP2-:cP,VMUu,>bLT)(FV/RIF1+U+P$3i%)YDQdIp3J#R.<-oL]VnOJXTdl^m;kip
%d3]@\)(Is^*j^Grp4*De73pV%,5Q@@PS]an)Z.QOq/+uU6C5/b9UHh5LIi*K#aNB'RmMfb%Zj&24Musb[$-UnQKFLA0?Xm_R*t_?
%$>JMoMpH7??qQFD^M/J7KZG0)jjd?)rH\`9C/@rpC<`5fdm]Y:XOCn)d17U6B3GC$&W[$hr4#m3!/T\-_@!0%:6r^G.@Z2`Zde@X
%8RmK19[$qlAK;p>3#+#K>$9`sKgj9\NE>1EEp25g/o0:XLbjKpBo_$\Pk5FAZ8>`1/K.7$``*FX>!BJq1u>/-MH0n;^8r3),'/[8
%OT!Ir`Vn9Ps)GJIP*aq)d^P\\W[`oW`TCjc69e57,NtKNRj0`_HZ-87&%_L)Ang_IOVs)4Y-=]T#De]7bn5ntK>roLCNHjG&GNju
%@S>&(aIY)6m>Z9PK'Lu-iP)M/&K^/m)XXTFDYV_CD1-8\G$,D]d=a6pijCX!C"L(C7Wt'CfgqJ!XnMM7aGg)S)4:L]4*F*'n$On(
%Kq[GW(i@hN4W>UbDZ.7'K!F,N,?VZ<7V3P,NKG)[\Mm")Q@3V/+A1\W+CAn#2RBYAZBe)rXnatZ"RFbXfnaS#(NG+%&"pkTB\,W?
%3q(F)XP+Ij=m">M#aX)NaDBmP>@\KXdb#=<UR800U)Vj&-XY8\c.MuArl2=2CU3>@=[)YL68!p?U&lK,-[X%HPdI5-ZameaFMO>J
%3"9&Ln-PqXQCGkjUg12f+Y;#6a#!E^"&JQ(k^-6*Y_'VJ'emp[;ZTP+2\g50hjXribIsl'p`@(+'en3c;ZVg6(_s5j8_r9nM?;CI
%?CM:(d_2V.2B_:#;c.Aue5DdX?ZntZCaod`p9gkJG`mDP!R&,7'sNYc9uXFflo(`T2AMlYYBs2Fm$6+J;h9,R*Qoj\brVq2Ru.9\
%qR*:NeO@nnRu2gelb08G<D\$Z.SuX'1.c=4:ku+-RgN-[W7Ro`Me'IY'r^%EmnJL;Of6m/!k"u\CK#d64QYF!GWD4<D(<2QM.V1H
%b*^CuD(8p2pSPeZhjXs8G.omM"hA%8VP;QQeMUf7;%WQ;2\j:q/cFO*'R-Li2\cMUno\e!@&]cjB;7+9s5H9Bnu(ZcrV:++r:=:p
%o.PUirEoNoVn`%os0hsZJ,T-AmIrjFhnT*^Du]Mcr6<"VoABN.5Q(3#s5SV.jfcGsl0nWAci<kqT0NAShuCSYrV<)bo"UcGqY]/V
%s726NoFHHMbNBuIq`k!#Ze.ul_r(C:^]&HWk*J=25<4][1]~>
%AI9_PrivateDataEnd
